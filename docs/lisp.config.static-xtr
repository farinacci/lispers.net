#
# lispers.net lisp.config file, last changed: Fri Dec 13 05:01:59 UTC 2019
#
# Hostname: oly-venc13
#
# (1) Only commands between the first pair of dotted lines will be processed. 
#
# (2) Any lines you find prepended with "#>>>" are errors found during command 
#     processing.
#
# (3) You may comment out lines by placing a "#" in the first column of any 
#     line between the section between the first pair of dotted lines.
#
# (4) Note the hostname and modification timestamp above are auto generated
#     after you have saved this file and it has been processed.
#
# (5) Deleting configuration can be achieved by deleting lines and restarting
#     the LISP component or by use of the LISP API.
#
# (6) The landing web page on any device provides detailed Command and API
#     documentation. Just click on those buttons.
#
# (7) Any name references must follow their definitions. Examples are 
#     elp-names and rle-names when referred to in static map-cache entries.
#
# DO NOT REMOVE THE LINES "#--- ... ---" and "#--- ... ---#".    
#
# DO NOT email lisp.config files because mailers will insert \r\n rather
# than keeping this file with \n only.
#    
#-----------------------------------------------------------------------------
lisp enable {
    itr = yes
    etr = yes
    rtr = no
    map-server = no
    map-resolver = no
    ddt-node = no
}
lisp debug {
    core = no
    itr = no
    etr = no
    rtr = no
    map-server = no
    map-resolver = no
    ddt-node = no
}
lisp user-account {
    username = root
    password =
    super-user = yes
}
lisp xtr-parameters {
    rloc-probing = yes
    nat-traversal = yes
    data-plane-security = no
    data-plane-logging = no
}
lisp map-server {
    dns-name = <map-server-name>
    authentication-key = <map-server-key>
}
lisp map-resolver {
    dns-name = <map-resovler-name>
}
lisp database-mapping {
    prefix {
        instance-id = <fill-in>
        eid-prefix = '<xtr-name>'
    }
    prefix {
        instance-id = <fill-in>
        eid-prefix = 240.?.?.?/32
    }
    rloc {
#       interface = en0
        interface = eth0
    }
}
lisp json {
    json-name = telemetry
    json-string = { "type" : "telemetry", "sub-type" : "timestamps", "itr-out" : "?", "etr-in" : "?", "etr-out" : "?", "itr-in" : "?" }
}
#-----------------------------------------------------------------------------#
