
                    Features through Release 0.486
                    ------------------------------
                     Thu Jan 31 21:42:41 PST 2019

(1) Add readability for all log messages. Bold face text will emphasize 
    important events, green color-coded text will signify EID addresses and
    prefixes, and red color-code text will signify RLOC addresses.

(2) Add more features to flow-logging.

(3) Add more API routines. See "API Documentation" button on landing page.

(4) A new provisioning system for configure map-servers and xTRs for VPN
    usage. This comes with the apps tarball.

(5) Allow DNS names for configuring map-resolvers and map-servers in xTRs.

(6) Add "lisp policy" support in map-servers. This is the start of a complete
    policy specification capability. You can use your mapping system for
    managing centralized access-control. You no longer need data-plane ACLs
    sprinkled throughout your network. If you don't get a RLOC, you can route
    packets to an EID. This solves the security problem at the lowest level.
    This can help bump-on-the-wire appliances to scale better.

(7) Provide a FIB abstraction capability so the lispers.net code can program
    hardware to do pull-based encapsulation using your favorite hardware's  
    encapsulation format (for example, using VXLAN to support L3 overlays).

(8) Support for draft-farinacci-lisp-crypto-01. The latest and greatest in
    doing Authenticated Encryption between an ITR and ETR or an ITR and an
    RTR. 

(9) Support for draft-farinacci-lisp-crypto-02 which adds Elliptic Curve
    Diffie Hellman 25519 and cipher chacha20. Works between ITR and ETR or
    ITR to RTR to ETR (traversing NATs).

(10) Support xTR multi-homing with multiple egress interfaces so sitting
     behind NAT devices.

(11) Provide application "lisp-onoff" to use as a command line to turn on
     and off boolean configuration values as well as debug logging parameters.

(12) Support L2-overlays. That means we can do dynamic discovery of a MAC 
     address just like we can for the IP-mobility use-case when IP addresses 
     are dynamic-EIDs. Packets are encapsulated in LISP using destination port
     8472 (L2-LISP Internet Draft).

(13) Add multiple mapping system support to an RTR.

(14) A checkpoint restart mechanism is implemented so the map-cache can
     be prepopulated in the ITR and RTR when the LISP subsystem restarts.

(15) The lispers.net implementation now runs in docker containers. Docker
     images are available for Ubuntu, Centos, and Debian. If you use these
     docker images, you do not have to do any installation of python module 
     dependencies that the lispers.net code requires.

(16) The lispers.net control-plane can now support a number of different
     data-planes. We have created a IPC interface to send map-cache entries
     to either a hardware or software data-plane. Support is provided for
     unicast and multicast EIDs of type IPv4, IPv6, and MAC address.

(17) Support for Poly1305 has been added to the Chacha20 cipher suite. So
     both authentication and encryption is supported for a non-US government
     based cipher suite.

(18) Support geo-prefixes as spec'ed in draft-farinacci-lisp-geo-00.txt.
     Geo-prefixes are supported for EIDs and RLOCs. They are specified with
     a Geo-Point and a radius in kilometers.

(19) Support and tested lispers.net code on Orange-PI, GetChip, and HiKey IoT 
     type devices.

(20) Support for JSON RLOC-records according to LCAF RFC 8061.

(21) Support geo-coordinate encoding from draft-farinacci-lisp-geo-02.txt.

(22) Support multi-tenancy on a single interface. Multi-tenancy on different
     interfaces was already supported.

(23) Support LISP-NAT functionality according to RFC 6832. This allows a 
     lispers.net device to allow EID to non-EID communication. It is preferred
     to PITR functionality in RFC 6832 because there is no BGP coordination 
     required.

(24) Support VPN extra-netting according to draft-moreno-lisp-vpn-00.txt to
     allow LISP VPN sites to interwork with non-LISP sites.

(25) Support IPv6 EID authenticated Map-Registers and Map-Requests using
     ECDSA. When these messages are signed, the low-order 64-bits of the IPv6 
     EID contains a hash of the EID's public-key. The hash is looked up in the
     mapping database by the either the Map-Resolver (for Map-Requests) or the 
     Map-Server (for Map-Registers) to obtain the public-key to verify 
     signatures.

(26) Support multi-key support in the lisp-ms process according to draft-ietf-
     lisp-rfc6833bis-04. In the "lisp site" command the "authentication-key" 
     sub-command now takes on the form of "authentication-key = 
     [<key-id-0-255>] <string> ... [<key-id-0-255>]<string>". This allows to 
     seamlessly rekey xTRs in an incremental way.

(27) Support for computing to and from TTL between an ITR and ETR. This gives
     more visibility on the path lengths of the underlay.

(28) Support Map-Server pubsub functionality.

(29) Provide support for short-cut paths for xTRs. That means that two xTRs can
     encap to each other when they are behind the same NAT and their packets do
     not hair-pin to an RTR.

(30) Support for lispers.net code on alpine Linux.

(31) Support for using the lispers.net control-plane with external data-planes.

(32) Support a fast golang implementaiton of the LISP data-plane. Supports
     unicast and multicast encap/decap with lisp-crypto and NAT-traversal.

(33) Support a decentralized mapping system documented in draft-farinacci-
     lisp-decent. Can work with underlay multicast or head-end-replication
     by using the LISP data-plane.

(34) Support Map-Register encryption so EID-to-RLOC mappings can be registered
     privately. Uses the ChaCha20 cipher.

(35) Open sourcing the lispers.net implementation on Feb 1, 2019.

===============================================================================

			 Feature Release 3.0
                         -------------------

Release date: Mon Feb  9 12:07:30 PST 2015

(1)  Allow 2-click install of a new lispers.net release. You don't need to
     ssh into the system to download a new release, install it and restart
     the LISP subsystem.

(2)  Add support for E.164 telephone numbers as EIDs. You can attach any of the
     currently supported RLOC types to it. So if you want to make a IP address
     from a telephone number or find the Geo-Coordinates of a telephone number,
     these can be used as RLOCs for a E.164 EID. E.164 EIDs are encoded as 
     AFI = 8 per the Address-Family Indicator registry spec.

(3)  Rotate log directories so we don't use up so much disk space. Keep the
     last 10 log directories.

(4)  Multi-tenancy support. You can use the "lisp interface" command to assign
     an instance-id to a unix device interface. So multiple VPNs can be 
     attached to a lispers.net system. Works for VLANs as well.

(5)  Added support for RLOC-probing in ITRs, ETRs, and RTRs. Works through 
     NATs.

(6)  Added support for nonce-echoing in ITRs, ETRs, and RTRs.

(7)  Support for signal-free LISP multicast. Works through NATs too.

(8)  Encapsulating to IPv6 RLOCs works more robustly now.

(9)  Added dynamic-EID support for VM and IP address mobility use-cases. So 
     we can dynamically determine when an EID lands on a lispers.net LISP site.

(10) Added frame-logging and flow-logging support for xTRs.

(11) Added support so lispers.net can run on Arista, A10, and Raspberry PI
     platforms.

(12) Added new RLOC type called "rloc-record-name" so it can encoded and
     stored in the mapping system and an ITR/RTR. Helpful for ease of use
     and documentation for managing a LISP network.

(13) Allow DNS-name for map-resolver and map-server configuration.

(14) Support new EID type called "distinguished-name". Allows user to register
     a free-flowing ascii name as an EID-prefix in the mapping database. 
     Allows chained lookups to a user's specification. Could be a tailored
     way to do NFV service chaining.

(15) Created a set of applications that can retrieve a news feed headline
     and multicast it to receivers running the receiver applications. The
     applications are pure multicast based by can work on the overlay but
     encapsulating to unicast RLOCs (via signal-free multicast). Works 
     through NATs.

(16) Add IPv4 fragmentation support in ITRs and RTRs so when a packet is 
     received and encapsulation headers put the packet size over 1500 bytes, 
     fragment inner header and encapsulate each fragment.

===============================================================================

			 Feature Release 2.0
                         -------------------

Release date: Thu May  1 14:32:16 PDT 2014

(1)  Add data-plane security support compliant with draft-farinacci-lisp-
     crypto-00.txt.

(2)  Support for multiple "Map-Server and Map-Resolver sets". This allows an
     ITR, ETR, or RTR to use different mapping systems at the same time.

(3)  Allow anycasting of a Map-Resolver so ITRs and RTRs can always get to
     the closest Map-Resolver. By using environment variable LISP_ANYCAST_MR
     before typing in "sudo ./RUN-LISP" you can achieve this on a Map-Resolver.

(4)  Provide script lisp-get-bits.pyo so users can new releases and install
     them in seconds.

(5)  Add dozens more API calls to configure a lispers.net system. You can now
     configure/provision an entire DDT distributed system of Map-Resolvers,
     Map-Servers, and DDT-nodes.

(6)  Provide a user-friendly way to find python Traceback messages in any
     lispers.net process. Just click on the hostname in upper right hand 
     corner of any page.

(7)  Create a "apps" release with python scripts that allow provisioning of
     an xTR, a LISP site, or an entire VPN with all sites. 

(8)  Allow lispers.net systems to be reachable via port 443 instead of port
     8080.

(9)  Single-tenancy VPNs are supported. The first database-mapping command with
     a "instance-id" parameter will be the instance-ID used for the VPN.

(10) NAT-traversal support for encapsulating unicast and multicast EIDs. There
     is auto-detection when NAT-traversal is used. No need for configuration.
     Both the Map-Server and RTRs support control-plane Info-Requests and
     data-plane Info-Requests, respectively. The Map-Server can be configured
     with an RTR list to provide to an xTR so it can choose what RTR it uses
     to pigeon-hole through a NAT device.

(11) Add support for draft-farinacci-lisp-signal-free-00.txt. That is LISP
     sites can join IPv4 and IPv6 multicast groups to specific sources which
     are registered with the mapping system. And ITRs will unicast or multicast
     encapsulate to get such multicast packets to joined sites. There is no
     multicast routing protocols needed to support this. For this release,
     IGMPv1, IGMPv2, and IGMPv3 is supported so host applications can signal
     to the ETR at the LISP site.

(12) Add support for when a multicast group is joined, it is mapped into an
     (S,G) route and registered to the mapping system. This allows IGMPv1 and
     IGMPv2 only applications to work on the LISP overlay.

(13) Various configuration and table management features. You can clear the
     configuration file, you can archive the configuration file, you can clear
     the map-caches on ITRs and RTRs. This can only be done if you are logged
     in as superuser.

(14) Various logging related features like showing line count of log files,
     allowing you do enter the number of tailed lines of a log file, allowing
     you to search for a string in the number of tailed items you specified,
     the ability to get logging from the data-plane components lisp-itr, lisp-
     etr, and lisp-rtr without printing packets that are forwarded, 
     encapsulated, and decapsulated.

(15) Added rate-limiting of Map-Requests in the ITR and RTR. There will not
     be more than 1 Map-Request sent per 5 seconds.

(16) Add a join and leave tool for IPv4 and IPv6 groups. Create a file in
     format "join-<ipv4-or-ipv6-group-address>" and the ETR process will
     keep joining the group. Add a file "leave-<ipv4-or-ipv6-group-address>"
     and the ETR process will continually leave the group.

(17) Support fast convergence of RLE changes. When an ETR at a LISP site joins
     or leaves an (S,G) entry, the ITR that supports site with source S or
     the RTRs used for NAT-traversal will receive Map-Notify messages and 
     change their map-caches entries to reflect the new RLE. This happens in
     1/2 RTT.

(18) Add APIs to read the ITR and RTR's dynamic map-cache. What is returned
     are unicast and multicast entries with pretty much all the data you
     see on the web-page including statistics.

(19) Support a "system" API to return information about a lispers.net system
     such as uptime, lispers.net version number, LISP subsystem uptime, etc.

===============================================================================

			 Feature Release 1.0
                         -------------------

Release date: Wed Nov 27 09:58:02 PST 2013

(1)  Unicast support for IPv4, IPv6, and MAC EID address formats in all of 
     xTR, RTR, Map-Resolver, DDT-nodes, and Map-Server LISP network components.

(2)  Multicast support for IPv4, IPv6, and MAC EID group addresses in all 
     of xTR, RTR, Map-Resolver, DDT-nodes, and Map-Server LISP network 
     components.

(3)  Unicast and multicast RLOCs for address-families IPv4, IPv6, and MAC
     addresses as well as the Geo-Coordinates, Explicit-Locator-Path (ELPs),
     and Replication-List-Entries (RLEs) LCAF types.

(4)  Support for the EID Instance-ID type and Instance-ID range for VPN
     support for all address-family combinations.

(5)  lig and rig support for all combination of addresses above. lig and
     rig are supported behind NATs to public infrastructure as well.
      
(6)  Support for python APIs to read and write from/to data structures. 
     Support for a configuration file format for configuring 10s of thousands
     of entries in a scalable fashion.

(7)  An easy to use web interface for showing status of each LISP component
     and data structures which include click-through for more detailed
     information as well as color-coded alerts. Full debug logging support is
     easily accessible and scalable.

(8)  Multiple user accounts can be created with super-user or regular user
     privileges. User passwords typed in browser are never sent in plaintext
     across the network since the web interface is over SSL. 

(9)  The LISP Mapping Database is supported by a Map-Resolver, DDT-node,
     and Map-Server components that run as modular multi-threaded processes 
     which can run on separate machines (or VMs) or collocated.

(10) The data-plane is a software only LISP xTR data-plane that requires no
     dependency on the Unix, Hypervisor, or hardware underneath it.

(11) RTR data-plane support is also provided and can be used as a re-
     encapsulating LISP unicast or multicast router, part of an ELP-node, or 
     part of an RLE-node.

(12) The xTR and RTR data-planes support port 4341 LISP layer-3 encapsulation,
     port 8472 layer-2 LISP/VLXAN encapsulation, and port 4789 VXLAN 
     encapsulation.

===============================================================================
