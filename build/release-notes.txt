
                lispers.net Beta Release Version 0.515
                --------------------------------------

o Release date: Tue Dec 10 10:49:08 PST 2019

o Update mc.last_refresh_time when we increment a map-cache stats. That means
  the map-cache is fresh since we are using it. There was a bug we were
  continually sending Map-Request Refresh messages when the uptime of a
  map-cache entry was greater than the TTL. We only want to send the refreshing
  Map-Request if the elapsed time from the last received packt is within 10%
  of TTL expiry.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.514
                --------------------------------------

o Release date: Tue Nov 26 15:53:01 PST 2019

o Change python "is" occurences to "==" so it can pass new version of pyflakes.

o When an xTR joins a (*,G) group, an RTR may replicate a packet back to
  the xTR when it originates a multicast packet. It cannot tell that the
  packet will loop since the source RLOC is rewritten by a NAT. So the
  ETR side of the xTR must decap packet and check source EID for its own.
  If it is, discard packet otherwise the ITR side will encap again to the RTR
  until TTL reaches 0.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.513
                --------------------------------------

o Release date: Thu Nov 14 17:30:08 PST 2019

o Do not mistake a destination multicast group address as a gleaned EID. This
  is causing Map-Request suppression to the mapping system.

o When doing a "sudo iptables -t nat -C POSTROUTING -o {} -j MASQUERADE", the
  rule exists if the return string is "". Do this more robust check. This was
  causing lisp-nat=yes on Debian to not get enabled.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.512
                --------------------------------------

o Release date: Fri Nov  8 16:06:26 PST 2019

o Fix crash in lisp_queue_multicast_map_notify() when no RLEs are registered
  in an RLOC-set.

o When returning RLEs in a restful API response, do not include special
  formatting characters.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.511
                --------------------------------------

o Release date: Tue Oct 15 09:40:43 PDT 2019

o Have ./STOP-LISP not stop a lisp-join.py process. Because when restarting
  the lispers.net subsystem, multicast applications may still be running
  and need to have lisp-join.py keep joining groups.

o When the RTR encapsulates a multicast packet it needs to use a source RLOC
  that is a private address on eth0 or AWS won't forward it out of the cloud.

o Add feature to store the last 4 recent sources per map-cache entry. This
  aids in debugging to see if packets are going where they are suppose to
  go. To get the "Recent Sources", hover pointer over map-cache entry on
  ITR and RTR map-cache table displays.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.510
                --------------------------------------

o Release date: Fri Sep 13 12:13:24 PDT 2019

o Do a check in lisp_on_aws() to see if docker is runnnig and dmidecode is
  not installed. And if so, issue log message.

o Fix potential crash in processing Map-Register and Map-Notify-Ack messages
  when a supplied key-id is not configured in the map-server.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.509
                --------------------------------------

o Release date: Mon Sep  9 16:44:32 PDT 2019

o Have lisp-join.py command line take command-line parameter "interval=<secs>".
  Type in "python lisp-join.py" to get help string:

  Usage: python lisp-join.py <group> [<interface>] [interval=<secs>]

  This way we can control how often when IGMP reports are pushed from group
  joiners.

o Change Dockerfile to get latest lispers.net image from build/latest git
  directory versus Dino's dropbox account.

o Put comments in lisp-rtr.py to note that a container running on a AWS VM
  needs dmidecode to recognize it is running on Amazon because it won't allow
  us to encapsulate packets out of Amazon with a global source RLOC.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.508
                --------------------------------------

o Release date: Mon Aug 19 16:15:10 PDT 2019

o Use new data structure to store gleaned groups. So when the gleaned EID
  map-cache entry times out, we still want to keep state about its joined
  groups.

o Time out RLE entries when IGMP reports stop arriving.

o Add an option "send-query" for the "lisp glean-mapping" command so IGMP
  queries are sent to gleaned EIDs. Most apps will trigger IGMP report
  and leave messages but won't stay joined unless there is an IGMP querier.
  On a LISP tunnel there is only the RTR to do this. Default this to off
  since lispers.net applications send perioidc IGMP reports when running
  with app lisp-join.py.

o When an RTR is doing interworking, it should not receive UDP packets
  addressed to 127.0.0.x.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.507
                --------------------------------------

o Release date: Thu Aug  8 16:19:10 PDT 2019

o Put a "group-prefix" parameter in the "lisp glean-mapping" command so
  policy can be placed on what multicast groups IGMP sources are gleaned
  from. This will allow us to suppress sending Map-Requests to the mapping
  system when a source sends to the group before an RTR gleans a receiver.

o When the RLOC information changes for a gleaned EID, update all (S,G) and
  (*,G) entries the EID is joined to.

o Have the lispers.net lisp-itr process encapsulate IGMP reports and leave
  messages to an RTR. Have to not copy ttl 1 to the outer header or the
  encapsulated packet doesn't make it to the RTR.

o Multicast pings are working from a gleaned multicast source replicated to
  2 gleaned multicast receivers. One of them is an iPhone running OOR.

o Multicast video streaming is working from a VLC command-line container
  source to a gleaned receiver on an iPhone running OOR and the VLC client.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.506
                --------------------------------------

o Release date: Mon Aug  5 17:36:57 PDT 2019

o Have the lisp-etr process accept IGMP packets when they are decapsulated.
  We want to run the ETR function on an RTR so a LISP-MN can join multicast
  groups when it LISP encapsulates IGMP reports to the RTR. We want the
  lisp-etr process to decapsulate the packet, process the IGMP report, and
  register the (S,G) or (*,G) to the mapping system.

o Support IGMP report gleaning, so (S,G) and (*,G) packets can be replicated
  to gleaned members.

o Support a newer/faster python RTR data-plane that processes packets by
  hand with less features so it can go faster. No library calls, no string
  processing and limits the amount of IPv4 header processing performed. The
  lisp_rtr_fast_data_plane() has 5x better forwarding latency over lisp_rtr_
  data_plane().

o Put in RUN-LISP env variable LISP_RTR_FAST_DATA_PLANE to run the fast python
  data-plane. Defaults to off. Should be used in RTRs that support LISP-MN in
  glean-mapping mode.

o Put in RUN-LISP env variable LISP_RTR_LATENCY_DEBUG to enable latency
  measurements for lisp_rtr_data_plane() and lisp_rtr_fast_data_plane()
  without any other data-plane debug logging enabled. Defaults to off.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.505
                --------------------------------------

o Release date: Wed Jul 17 17:48:47 PDT 2019

o During LISP-NAT interworking, when the RTR receives a packet larger than
  1400 bytes with the DF bit set in the IPv4 header, trigger an ICMP Too
  Big message so the non-LISP host can send smaller packets so the RTR
  can encap to a LISP-MN without fragmentation. This helps performance when
  a mobile-node runs LISP and is talking to a non-LISP node.

o Rate-limit sending ICMP Too Big messages globally to one a second.

o Change permissions on files RUN-LISP and STOP-LISP to 555. We don't want to
  encourage users to modify these files unless instructed.

o Put ifconfig command in RL-template to change mtu to 1400 on the interface
  an EID is assigned to.

o Comment out (and off by default) env variables LISP_SEND_ICMP_TOO_BIG and
  LISP_IGNORE_DF_BIT. These ICMP/MTU settings are experimental and shouldn't
  be used. We will continue to experiment with them while testing LISP-MN.

o Put OS specific commands in RL-template so when you run an RTR in a cloud
  provider with LISP-NAT configured that TCP segment offload can be disabled
  for jumbo frames with DF-bit set. This allows LISP-to-non-LISP interworking
  to have better performance when web browsing.
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.504
                --------------------------------------

o Release date: Wed Jun 19 08:58:11 PDT 2019

o Do not check for instance-ID 0xffffff unless arrival packet is a LISP
  encapsulated packet. This caused us to erroneously parse a data encapsulated
  LISP control-plane message.

o Refresh Native-Forward map-cache entries when they are active. They are
  being removed after one minute while data is moving for longer than that.
  Send refreshing Map-Request and update refresh timer.

o Do not install duplicate iptables NAT entries. Check correctly if they
  already exist.

o We need to store gleaned EIDs as native-forward entries in the map-cache
  for instance-ID 0 so we can extra-net to the instance-ID it was gleaned on
  when a packet is sent from a non-LISP node to the gleaned EID.

o Suppress sending ECM based Map-Requests for gleaned EIDs.

o More granular checks for RLOC-probes since RTR now packet captures for
  0.0.0.0/0. A DNS response from 8.8.8.8 looked like a Map-Reply.  ;-)

o Add env variable LISP_IGNORE_DF_BIT since we need to fragment a packet
  coming into an RTR in GCP which has been assembled to be greater than
  1500 bytes but has the DF-bit set. Well, to get the packet to a mobile
  phone, it needs to be fragmented or packets are dropped. Google is doing
  something strange. Note the TCP MSS negotiated between two endpoints is
  1400. Go figure.

o When the RTR encapsulates a packet it needs to use a source RLOC that is
  a private address on eth0 or AWS won't forward it out of the cloud.

o Add file docs/lisp.config.pxtr to show an example of an RTR that can be
  configured to glean mappings and do LISP-NAT for interworking with non-LISP
  sites.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.503
                --------------------------------------

o Release date: Wed Jun  5 17:37:55 PDT 2019

o Fix range syntax in lisp.config.example documentation.

o Add parameter "rloc-probe = yes | no" to the "lisp glean-mapping" command
  clause. This is so we can disable RLOC-probing to OOR devices for now but
  continue to RLOC-probe other gleaned entries.

o Support LISP to non-LISP interworking on an RTR via the LISP-NAT feature
  documented in RFC6832. We already had support on an xTR but we are now
  co-locating the functionality so gleaned EIDs, via the RTR, can talk to
  non-LISP (non-EIDs) sites. This works when xTRs are not behind NATs, are
  behind NATs using NAT-traversal control-plane logic, or when xTRs regardless
  if behind a NAT or not is being gleaned from the RTR.

o When a gleaned source-port is 4341, the NAT is not translating the port. That 
  means to get packets through the NAT you have to encapsulate with source AND 
  dest port of 4341. OOR encaps by default from 4341 to 4341 and some cases the
  port gets translated and other caees it is not. The RTR will encap from
  4341 when the destination it is encapsulating to has been gleaned (and with
  a gleaned port of 4341).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.502
                --------------------------------------

o Release date: Sun Jun  2 11:37:07 PDT 2019

o Add some new functionality to an RTR. When configured, an RTR can glean
  mappings for packets it decapsulates. This allows for an xTR to NOT run
  a LISP control-plane. The xTR simply encapsulates packets to configured RTRs.
  Return packets will arrive to an xTR since the RTR will glean the source EID
  and source RLOC from decapsulated packets. A new command "lisp glean-
  mapping" is required on the RTR. When configured, the RTR will add the
  source-EID and source-RLOC to the map-cache. See lisp.config.example
  for a description of the new command with some examples. EID-prefixes are
  used to permit ranges of EIDs allowed to be gleaned as well RLOC-prefixes
  so RLOCs can be controlled. A single or range of instance-IDs can also be
  configured.

o Allow the lispers.net implementation to be a control-plane-less xTR. That
  means no Map-Requests go to the mapping system and no registration is
  required. Simply configured a list of RTR RLOCs to encap to. The RTRs must
  support "lisp glean-mapping" so they can return packets to the xTR regardless
  if the xTR is behind a NAT. The "lisp xtr-parameters" sub-command "nat-
  traversal = no" must be configured. See example configuration in
  docs/lisp.config.xtr-control-plane-less.

o This glean-mapping feature interoperates with OOR 1.1(13). The OOR
  configuration requires a "Proxy ETR List" to be configured and have
  "NAT Traversal Aware" set to off. From a lispers.net perspective, an OOR
  Map-Server and Map-Server Key is not required. A "DNS Server" is required
  and can be set to "8.8.8.8".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.501
                --------------------------------------

o Release date: Thu Apr 18 12:56:41 PDT 2019

o Do not try to encode a distinguished-name in an Info-Reply if it did not
  appear in an Info-Request.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.500
                --------------------------------------

o Release date: Fri Apr 12 10:31:01 PDT 2019

o Have ltr exit when a user tries to supply a multicast address to trace. We
  don't support LISP-Trace for multicast EIDs (yet).

o Do not turnaround a LISP-Trace packet if you are an RTR and have "lisp
  database-mapping" commands that may longest match.

o Added farinacci/lispers.net/docs/ltr.pdf to document how LISP TraceRoute
  (ltr) works.

o When checking for a local-EID in ltr, make sure you do longest match
  lookups on a EID-prefix from a "lisp database-mapping" command. I created
  a really cool longest-match lookup function for IPv4 and IPv6 that works
  on strings. IPv6 address parsing always a challenge (colon cancer). ;-)

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.499
                --------------------------------------

o Release date: Wed Apr  3 16:04:55 PDT 2019

o Have ltr print "?" instead of -1 for recent-rtts when RLOC-probing has not
  begun to start between an ITR/RTR and an ETR.

o Allow the use of LISP_LTR_USER and LISP_LTR_PW to get ltr to work when a
  password is configured for username root or you want to use an alternate
  username/password to access the API.

o If the destination EID for a LISP-Trace message hits an ETR, but the ETR
  is not assigned the EID but covers it with an EID-prefix in a "lisp database-
  mapping" command, then the LISP-Trace message should be turned around. We
  want ltr to work when it targets a host that is assigned an EID but does not
  run LISP.

o socket.sendto() can fail when LISP-Tracing an IPv6 address when no IPv6
  address can be assigned to any interface. This happens on a GCP VM. Sigh.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.498
                --------------------------------------

o Release date: Mon Apr  1 11:37:27 PDT 2019

o Make JSON smaller in LISP-Trace message. We should be able to go from ITR to
  ETR and return through one RTR in an MTU-sized packet. Want to avoid inner
  header fragmentation.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.497
                --------------------------------------

o Release date: Fri Mar 29 00:01:37 CET 2019

o When passing a MAC address to pcap filters, do not pass the MAC address
  in lispers.net format (dashes between quad-nibbles). Convert to linux
  MAC address format with colons between dual-nibbles.

o And do not pass MAC addresses to iptables/ip6tables.

o Add recent-rtts and recent-hops to LISP-Trace functionality.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.496
                --------------------------------------

o Release date: Sat Mar 16 11:44:57 EDT 2019

o This is an important fix to get IPv6 forwarding to work when the high
  order bits of address are fe:: or fd::. When entered as fe00:: and fd00::,
  do not suppress printing the trailing zeroes. Otherwise packets will be
  encoded as 00fe and 00fd and all sorts of table lookups won't work. Linux
  systems will do this. So users and configurators alike, must also be
  explicit and putting the trailing zeroes before the colon (and double colon
  as well).

o Make LISP-Trace work for IPv6 EIDs. Use a udp46 socket. So we can send
  both IPv4 RLOC-based LISP-Trace messages and IPv6 EID-based LISP-Trace
  messages with the same socket.

o Need to perform an IPv6 UDP checksum on the packet returned to the ltr
  client so the UDP socket interface can read the packet. UDP checksums are
  required for IPv6 but can be set to 0 for IPv4. The kernel will not deliver
  UDP checksum 0 packets to client. Have the originating xTR compute a
  checksum after appending the file trace record to the LISP-Trace packet.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.495
                --------------------------------------

o Release date: Wed Mar 13 19:01:35 PDT 2019

o Fix bugs with command-line parameters when -s is used.

o If there is no instance-ID specified, use the one from the lisp.config
  configuration.

o Print "decap" in the RTR decapsulation path. Did not supply required
  function parameter.

o Added .cshrc to farinacci/lispers.net/build directory so when lispers.net
  docker images are created, there are convienent short-cut alias commands.

o When checking if a dynamic-EID matches an interface that was not configured,
  and non dynamic-EID configured does not mean it should match anything.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.494
                --------------------------------------

o Release date: Wed Mar 13 10:15:28 PDT 2019

o Make LISP-Trace functionality work on xTRs behind NATs.

o If there is a LISP-Trace forwarding issue from an RTR perspective, return
  the LISP-Trace packet back to the ltr client. The Trace messages is sent to
  the translated RLOC and translated port when the client is behind a NAT.
  The ltr client will send RLOC-based LISP-Trace packets to all RTRs it knows
  about from the 0.0.0.0/0 map-cache rloc-set list. It will include its local
  address and ephemeral port in the LISP-Trace payload (non JSON area of
  the packet encoded in binary). The RTRs listen on port 2434 for these
  RLOC-based Trace packets and caches the translated address information from
  the IP header associated with the local address/port pair. When the client
  sends the EID-based LISP-Trace packet, the ITR (co-located with the ltr
  client) will add as the first entry to JSON part of the LISP-Trace message,
  the local RLOC address and client ephemeral port. This allows the RTR to
  find the cached translated information for the client program. And thereby
  allowing a returned Trace message to traverse thee NAT device.
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.493
                --------------------------------------

o Release date: Fri Mar  8 09:56:12 PST 2019

o Have apps/loc8tr accept a negative port number which means to use http
  rather than https.

o Print log file name when displaying Tracebacks when clicking right hand
  corner hostname in any web page display.

o Added apps/ltr.py which is support for a LISP Traceroute facility. ITRs,
  RTRs, and ETRs are equipped to add data to a trace packet while it travels
  from source-EID to destination-EID and returns back. The entire round-trip
  encapsulation path information is provided to the user. Command usage is
  "python ltr.py [-s <source-eid>] <destination-EID>". See ltr.py file header
  for more details.

o Turning on data-plane-logging=yes in the lisp-rtr process was broken when
  either frame-logging or register-reachable-rtrs were sub-commands in the
  "lisp xtr-parameters" command clause. They need to go into the lisp_rtr_
  command[] array.

o Print out the command clause in the log file when a syntax error is detected.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.492
                --------------------------------------

o Release date: Tue Feb 26 11:50:14 PST 2019

o Return string "map-reply" on Received output line from lisp-lig.

o Implement returning dynamic data associated with database-mappings. URL
  https://<host>:8080/lisp/api/data/database-mapping will return a JSON
  formatted array of configured database-mappings. The RLOC-set returns
  RLOC address, RLOC interface, RLOC name, and translated RLOC address.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.491
                --------------------------------------

o Release date: Tue Feb 19 16:46:11 PST 2019

o Include binary lispers.net/lisp/lisp-xtr in release build.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.490
                --------------------------------------

o Release date: Tue Feb 19 14:23:01 PST 2019

o Implement support for the pull-based LISP-Decent mapping system. The
  pull based decentralized mapping system is one where Map-Resolvers and
  Map-Servers are co-located and there is no need for a mapping database
  transport system like LISP-DDT or LISP-ALT. The decision on what map-server
  node to send Map-Register and Map-Requests to is based a hash of the EID
  modulus a configured value. That produces a DNS name where a level of
  indirection points an xTR to multiple A records that are used for redundancy
  and reliability. The DNS entry is called a map-server set. xTRs send
  Map-Register messages to all A records in a map-server set but send a
  single Map-Request message round-robin among A records in a map-server set..

o Change "lisp xtr-parameters" subcommand "decentralizd-xtr = yes|no" to
  "decentralizsed-push-xtr = yes|no" to make it more clear the first phase
  was the push-based multicast LISP-Decent mechanism.

o Introduce "lisp xtr-parameters" subcommands "decentralized-pull-xtr-modulus =
  <modulus>" and "decentralized-pull-xtr-dns-suffix = <dns-suffix>".

o "lisp map-resolver" commands are are required on ITRs and RTRs with a
  dns-name parameter (which contains index prepended to a configured DNS name
  suffix) so each map-resolver set can have a distinct set of configuration
  parameters.

o "lisp map-server" commands are are required on ETRs with a dns-name
  parameter (which contains index prepended to a configured DNS name suffix)
  so each map-server set can have a distinct set of configuration parameters.

o Provide a lisp.config.decent-xtr-pull configuration file template in the
  lispers.net/docs directory.

o Document the pull-based LISP-Decent feature in lisp.conifg.example.

o Note, this feature only works when the EID being looked up is the same
  prefix length of what is being registered. Next phase (with an Internet
  Draft update), support for a coarser EID-prefix registered that matches a
  more specific target EID from the Map-Request will find the same map-server.

o Do not print an instance-ID bracket for Map-Resolver and Map-Server
  addresses. They aren't needed and don't apply in this case.

o Be more descriptive on the format of a E.164 address prefix in file
  lisp.config.example.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.489
                --------------------------------------

o Release date: Wed Feb  6 12:00:39 PST 2019

o Have lispapi.api_init() allow a negative port number to be passed in. When
  the port is postive, use https, when the port is negative, use http.

o Allow log-packets to take a negative port number.

o Move release builds in lispers.net/build/releases.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.488
                --------------------------------------

o Release date: Mon Feb  4 18:44:48 PST 2019

o Have tool "log-packets" accept two new parameters, one is "help" to display
  the usage of the command and the other is <api-port> which is the port
  number used to connect to the lispers.net API when the default 8080 is not
  used.

o Fix and clarify comment text in lisp.config.example.

o Create build/stable as a symlink pointing to a lispers.net release that
  has been tested a lot and regarded as stale. It will be less than or
  equal to the the symlink build/latest.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.487
                --------------------------------------

o Release date: Fri Feb  1 21:09:20 PST 2019
 
o Fix LISP LinkedIn group URL link on landing page.

o Related to the IPv6 parsing problem from release 0.484 when parsing an IPv6
  input string, we have a similar problem with parsing an IPv6 binary string
  from a packet. When the high-order byte is non-zero and the low-order byte
  (of the high-order 16-bits of an IPv6 address) is 0, say in an address like
  fe::1, struct.unpack() is not swapping the bytes hence when we swap we get
  0x00fe. However, when an address is 2001::1, the bytes ARE swapped from
  0x102 to encode the correct bytes of 0x2001. A special test must be done
  to detect the fe::1 case (which also works for fe00::1).
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.486
                --------------------------------------

o Release date: Tue Jan 29 11:08:45 PST 2019

o When looking for Tracebacks in log files use --with-filename versus -c.

o Add 2019 to copyright notice display on web pages.

o Have Dockerfile pick up lispers.net release image from a release directory
  in the git repo at location build/latest/lispers.net.tgz. Defaults to getting
  tarball from Dropbox.

o Readying code for open-sourcing lispers.net git repo.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.485
                --------------------------------------

o Release date: Sun Jan 27 13:43:29 PST 2019

o In lisp_check_decent_xtr_multicast() make sure when we grep out "address"
  lines that in the for loop we check if the line contains "address" in it.
  The -A2 on egrep command could give us an non "address" line.

o Keep one location for release-notes.txt. Pull it from the docs directory
  into the release tarball.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.484
                --------------------------------------

o Release date: Mon Jan 14 16:17:00 PST 2019

o Convert bottle port to integer when passed on command line. Not doing this
  is causing non https connections to user supplied port number to not work.

o There is a strange situation with entering IPv6 addresses. If fe::/8 is
  entered, 0xfe is not the high-order byte of the 128 bit quantity. If fe00::/8
  is entered the high-order byte is 0xfe. But we want the user to enter it
  either way. So detect this odd-byte case in both prefixes and addresses,
  accept "xx::" or "xx00::" and always display "xx::". There were cases when
  fe00::/8 is in the map-cache and a lookup for fe::1 or fe00::1 won't find
  it. The IPv6 print libraries will always print fe00::/8 (which compounds the
  problem) but in longest match lookups only the high-order 8 bits are tested.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.483
                --------------------------------------

o Release date: Wed Dec  5 17:10:43 PST 2018

o Put a comment in lisp_itr_kernel_filter() to indicate that a docker
  container ip6tables command will not work if the host debian system does
  not have "sudo modprobe ip6table_filter". This causes TCP checksum errors
  for TCP packets over IPv6.

o Put a comment in how-to-install.txt letting user know about this little
  nugget.

o Fix crash in lisp_bottle_ipv4_process() when the web server port passed
  in is an integer and not a string.

o In this release we tried allowing the lisp-rtr process to accept and
  process "lisp interface" commands so it can be a PxTR supporting LISP-NAT.
  There were no fixes that went in to try to support this. It can't work
  and is being documented her. The problem is that both the lisp-itr and
  lisp-rtr processes will send RLOC-probes where the RLOC-probe replies
  don't know how to be dispatched to the correct process. It almost worked
  bidirectionally until the ITR's map-cache RLOC for the xTR went
  unreachable and stayed that way.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.482
                --------------------------------------

o Release date: Tue Nov 27 09:59:00 PST 2018

o Allow "-" precede any port number supplied on the RESTART-LISP command.
  Previously "-8080" was supported. Now we can do this trick for any port
  number. This will have the web server listen on the port number without
  using SSL. This is a workaround until someone in the world fixes "curl
  --insecure" on the latest MacOS releases.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.481
                --------------------------------------

o Release date: Mon Nov 19 12:29:51 PST 2018

o Print signature JSON string when Map-Request signatures fail when sending
  a signed Map-Request.

o Reverse the polarity of "nodns" committed in release 0.479. By default,
  the code will not do DNS lookups in the RTR map-cache display where the
  NAT-traversal table displayed the DNS name of a NAT device. The column will
  not appear by default. But when the https://<rtr>:8080/lisp/show/rtr/
  map-cache/dns is entered the column will appear. And if the DNS lookups
  timeout, the column will display "?".

o In lisp_debug_menu_command() make sure we test for "lisp debug" and "lisp
  xtr-parameters" exist as commands before trying to set values.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.480
                --------------------------------------

o Release date: Tue Oct  9 09:35:21 PDT 2018

o Default Map-Request count to 1 for lisp-lig. Sending less packets is better.
  User can send up to 5 to test varying latency to mapping system.

o Support Map-Register encryption. The entire Map-Register payload not
  including the first 4 bytes is ChaCha20 encrypted by an ETR and decrypted
  by a Map-Server. There is no key exchange. Shared passwords are used and
  configured on each side of the security association. A new command called
  "lisp encryption-keys" is introduced on the Map-Server. And a subcommand
  "encryption-key = [<key-id>]string" of the "lisp map-server" command is used
  on the ETR. See the "Command Documentation" button on the lispers.net
  web interface landing page.

o This release has been tested with a newly formatted lisp-sig.pem file format.
  A comment header documenting the crypto-EID is prepended to the Private Key
  PEM encoding and the Public Key PEM encoding is appended. This way if a
  public-key is lost either in the mapping system configuration files or
  the lisp.config file on the xTR, we can salvage the crypto-EID and key-pair.
  This is for an effort to make crypto-EIDs more persistent to reloads and
  other key management failures.

o There is a lispers.net created app program called "make-crypto-eid.py" that
  is available in source form to be used to generate crypto-EIDs and key-pairs.
  The program generates lispers.net configuration commands that can be easily
  inserted into lisp.config files.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.479
                --------------------------------------

o Release date: Wed Oct  3 17:16:41 PDT 2018

o On Alpine Linux, default showing the RTR map-cache page with "nodns" since
  it appears to time-out DNS lookups rather long.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.478
                --------------------------------------

o Release date: Mon Oct  1 12:04:56 PDT 2018

o Have lisp.lisp_get_local_rloc() always return IP address for default
  router's interface regardless if it is a private IPv4 address or not. This
  was causing lisp-lig.py to not include a ITR-RLOC in a Map-Request and
  hence the map-server could not return a Map-Reply.

o Have DNS lookups work for all command-line parameters for lig and rig for
  Alpine Linux.

o Local variable used to set signature failure which didn't set variable
  that tests for sendingn a auth-failure. Therefore, a failed signature
  retunred an RLOC-set. Ooops. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.477
                --------------------------------------

o Release date: Wed Sep 26 14:22:27 PDT 2018

o Have a handy URL to bring up the RTR page with no DNS lookups. This will
  obsolete the env variable mechanism introduced in release 0.475. Use
  https://<router>:8080/lisp/show/rtr/map-cache to get DNS lookups. This
  URL is pointed to by other internal html code. To suppress DNS lookups,
  use URL https://<router>:8080/lisp/show/rtr/map-cache/nodns.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.476
                --------------------------------------

o Release date: Tue Aug 21 09:27:36 EDT 2018

o Add comments to RL-tempalte indicating that if an RTR is behind a NAT that
  it needs its global address configured on the loopback interface so RLOC-
  probe replies can contain the global address.

o In restful call to https://<host>:<port>/lisp/api/data/map-cache, return
  RLOC state in JSON as "state" : "<state-string>".

o When 2 "rloc" clauses are used for a "lisp database-mapping" command, where
  one is an "address" parameter and another is a "interface" parameter for
  the SAME interface, the address RLOC loses its address and registers
  "no-address". Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.475
                --------------------------------------

o Release date: Thu Aug  9 09:33:28 PDT 2018

o When copying lisp.config.example to lisp.config, stop copying after "#----
  ... ----#". This is only a problem if you use a lispers.net supplied
  Dockerfile. This only happens when no lisp.config file exists when you
  start ./RESTART-LISP.

o Add LISP_DNS_LOOKUP in the RUN-LISP script so a user can tell the lisp-rtr
  process when it should do a DNS lookup for NAT hostnames. On certain
  platforms the DNS lookup takes too long and times out the IPC wait time
  to display the RTR output page. If you want to disable DNS lookups, you
  comment out this line in the RUN-LISP startup script.

o When receiving RLOC-probe requests or replies on a UDP socket, log the fact
  they are not processed. They are processed by an ITR/ETR/RTR on the pcap
  receive path so they can examine the IP header TTL for hop-count
  measurements.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.474
                --------------------------------------

o Release date: Thu Jul 26 18:33:17 PDT 2018

o Do not call lisp_check_decent_xtr_multicast() if a lisp.config file doesn't
  exist. Have lisp_startup_core() create the file from lisp.config.example
  before lisp_check_decent_xtr_multicast() is called.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.473
                --------------------------------------

o Release date: Sat Jul 21 11:41:02 CDT 2018

o Fix crash in lisp_process_api() when a URL for a API request does not have
  parameters.

o Handle the case where a "signature-eid" may not be a crypto-EID. That is,
  not an IPv6 address or one with a non-matching EID hash length.

o Map-Requests were not being signed when sent for IPv4 EIDs and a signature-
  EID was configured.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.472
                --------------------------------------

o Release date: Tue Jul 10 12:00:46 PDT 2018

o Return last bidirectional hop-count in RLOC data from map-cache read API.

o Return recent bidirectional hop-count in RLOC data from map-cache read API.

o Return recent RLOC-probe RTTs in RLOC data from map-cache read API.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.471
                --------------------------------------

o Release date: Thu Jul  5 11:03:10 PDT 2018

o Fix displaying local RLOC in RLE as red.

o When a map-server is searching for a signature JSON string in an RLOC-record,
  protect itself from a corrupted JSON format.

o Have the decentralized-xtr support Map-Registering to a multicast map-server
  that is distributed via underlay multicast. Each xTR is configured with a
  single "lisp map-server" command that points to the underlay multicast
  group and a single "lisp map-resolver" that points to localhost.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.470
                --------------------------------------

o Release date: Mon Jul  2 14:20:21 PDT 2018

o When looking up configured group mappings, do longest match. We found a
  longer group prefix but continued through the loop and matched on the shorter
  group prefix so used the shorter one in error.

o When a (*,G) is desired to be joined, do not require a "sources" clause
  in the "lisp group-mapping" command.

o When the app lisp-join.py is running, have it killed when STOP-LISP is used
  and have it show up in the ./pslisp display.

o When a multicast address RLE is configured in a "lisp group-mapping"
  command, the ETR side of the xTR must pcap on it so it can receive packets
  addressed to multicast groups with port 4341. Adding this puts support
  for underlay multicast in the lispers.net implementation avoiding head-end-
  replication when underlay multicast is availble.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.469
                --------------------------------------

o Release date: Tue Jun 26 17:25:37 PDT 2018

o On all variations of Linux systems, have pslisp print process name and not
  "python <process-name>". Then there will be a consistent display among all
  LISP processes that may have been implemented with different programming
  languages.

o Have STOP-LISP stop all lispers.net processes but not any external data-plane
  processes that have a process name that starts with "lisp-".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.468
                --------------------------------------

o Release date: Mon Jun 25 16:24:47 PDT 2018

o If a external data-plane is active, from the map-cache display, show the
  file "show-ztr" if it exists.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.467
                --------------------------------------

o Release date: Thu Jun 21 17:39:25 PDT 2018

o Fix critial API bug introduced in release 0.466. The system is stable as
  long you don't issue and API calls to change "lisp debug" or "lisp xtr-
  parameters". Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.466
                --------------------------------------

o Release date: Thu Jun 21 15:57:22 PDT 2018

o Have tool ./log-packets check for env variable LISP_PW when the local system
  is password protected. Assumes root is username.

o Added shell commands to the Documentation Page and did some reformatting.

o When parsing "json-string" as a keyword in the transmitted message, the
  value fields is a dictionary array and not a string. This allows to have
  nested json support.

o Make sure when a lisp.config command name appears in a comment, we don't
  think it is a replacement versus an append.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.465
                --------------------------------------

o Release date: Wed Jun 20 14:37:39 PDT 2018

o Add 2018 to copyright notice on landing page.

o Tighten up the RLOC-probe request filter so an ETR gets RLOC-probes only
  addressed to its RLOC.

o A new tool called "./log-packets [force]" is available in the lispers.net
  directory to enable or disable data-plane logging. The command is a toggle
  to turn on and off logging of encapsulated and decapsulated packets in an
  ITR, ETR, xTR, or RTR. The command does nothing if control-plane logging is
  enabled. You can use the "force" keyword to go from control-plane logging
  to both control-plane and data-plane logging.

o When restarting the LISP subsystem from the web interface, it is mistakenly
  restarting the lisp-core process with port 443 and not the port that was
  running with the process at the time of restart. Fixed now.

o Do not include a local RLOC in an RLE list for a non-RTR xTR. This can
  happen when a local source sending to a group, also joins the group. This
  could happen for (S,G) or (*,G) mapping entries.

o Have the LISP control-plane send RLE entries from the rle.rle_forwarding_
  list rather than from the rle.rle_nodes list. The former has been filtered
  to not create loops.

o Make sure that the kernel only delivers IGMP packets that are addressed
  to multicast groups. All data groups are sent via LISP. That is add a
  "-p igmp" to the iptables rules for the lisp-itr process.

o Display a local RLOC in a RLE list as red, so it stands out that it is not
  part of the forwarding list.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.464
                --------------------------------------

o Release date: Mon Jun 18 15:47:24 PDT 2018

o When a NAT/firewall device does port mapping based on a distinct 4-tuple, a
  decapsulator looks up the wrong lisp-crypto state since the source-port
  of the packet is different than the crypto-key negotiated port number. Have
  a fall back plan so when the packet source-port plus source-RLOC lookup is
  not found in the decap-key-cache, use source-RLOC. The source-RLOC always
  has a copy of the last negoitated crypto-keys.

o Change 'lisp xtr-parameters" command parameter "register-all-rtrs = yes|no"
  introduced in last release. I want the functionality to default the other
  way. So the new parameter name is "register-reachable-rtrs = yes|no" which
  defaults to "no".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.463
                --------------------------------------

o Release date: Wed Jun 13 11:04:55 PDT 2018

o Fix crash in map-server when a public-key being registered has invalid
  JSON format.

o When a map-server provides a list of RTRs in an Info-Reply message, an
  xTR behind-a-NAT registers them as RLOCs with its global translated RLOC.
  The ITR side of the xTR will know which RTRs are reachable via RLOC-probing
  and the map-cache reflects which RLOCs to encapsulate to. However, remote
  ITRs that may encapsulate to any of these RTRs do not know if those RTRs
  can reach the ETR side of the xTR. The xTR needs to register the RTRs that
  can actually reach it. When the lisp-itr process determines an RTR RLOC is
  not reachable via RLOC-probing, it will send an IPC message to the lisp-etr
  process to indicate that is should be excluded in Map-Register messages. If
  the RTR becomes reachable later, then it will be included.

o A new parameter for the "lisp xtr-parameters" command has been introduced
  called "register-all-rtrs = yes | no" which defaults to "no". Meaning RTRs
  are only included in Map-Register messages when they are reachable.

o In 'ICV failed" log message, display receive port numnber to debug crypto
  errors.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.462
                --------------------------------------

o Release date: Fri Jun  8 09:52:13 PDT 2018

o Don't have remove-lisp-locks.pyo remove file "lisp-ztr".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.461
                --------------------------------------

o Release date: Fri May 18 14:47:27 PDT 2018

o The go data-plane cannot find decryption keys for an xTR that is not behind
  a NAT. Have it do the same logic as the python data-plane. That is, don't
  use port number to find the decap-key entry.

o When a map-server and RTR are behind different NATs, an xTR will register
  the global RLOC of the map-server NAT not allowing the RTR to send packets
  through the NAT. Have the RTR populate its map-cache with the RLOC from
  the NAT-traversal cache when the RLOCs differ. If the NAT-traversal cache
  entry has timed out, then use the RLOC from the registered RLOC. This was
  found when GCP placed different NATs along side lispers.net infrastructure
  components (i.e. g-ms2 and g-rtr1).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.460
                --------------------------------------

o Release date: Tue May 15 12:35:17 PDT 2018

o Have python data-plane add 16-bytes of AEAD to an AES-GCM encrypted packet.
  This is to interopeate with Go data-planes that use the crypto/aes and
  crypto/cipher libraries.

o Instead of displaying "encap-crypto", display "encap-crypto-chacha",
  "encap-crypto-aes-gcm", or "encap-crypto-aes-cbc" depending on what cipher-
  suite is negoitated during xTR key exchange.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.459
                --------------------------------------

o Release date: Tue May  8 18:58:35 PDT 2018

o Compile a go binary lisp-xtr for Alpine Linux. Call it lisp-xtr.alpine and
  include it in a release tarball.

o Make is-lisp-running.py work for Alpine Linux.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.458
                --------------------------------------

o Release date: Wed May  2 11:30:53 PDT 2018

o Fix traceback in lisp_store_nat_info() which prints the hostname which may
  not exist in a Info-Request message.

o For packet counter stats received in the last minute, change color from
  red to light green while keeping dark green color for last second packets.
  Red is used in other parts of the UI to alert user.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.457
                --------------------------------------

o Release date: Mon Apr 30 09:54:05 PDT 2018

o Fix ssl_builtin.py issue #1499 Exception in BuiltinSSLAdapter "The handshake
  operation timed out". The fix is included in CherryPy 8.2.0. This release
  is built with a pip-requirements.txt points to ChrryPy to 8.2.0.

o For this release please do a "sudo pip install cherrypy==8.2.0".

o Fix bug in is-lisp-running.py if the first line of logs/lisp-core.log gets
  corrupted.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.456
                --------------------------------------

o Release date: Thu Apr 26 13:24:35 PDT 2018

o Don't optimized the RLOC-set for private addresses in NAT-traversal logic
  when "nat-traversal = no" is set.

o Do not pass "packet,packet" to len() but "packet.packet". ;-)

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.455
                --------------------------------------

o Release date: Fri Apr 20 15:39:53 PDT 2018

o Introduce the "require-signature = yes | no" command to the "allowed-prefix"
  clause of a "lisp site" command. When configured to "yes", Map-Registers
  must include signatures and are verified before accepting any EID
  registrations. As well as, any Map-Requests must include signatures that are
  verified before returning any mapping system data. This feature implements
  any EID type to be authenticated for registration and lookups and is spec'ed
  in draft-farinacci-lisp-ecdsa-auth-02.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.454
                --------------------------------------

o Release date: Thu Apr 12 10:21:59 PDT 2018

o Don't have is-lisp-running.py use the API to find running version. Use the
  first line in logs/lisp-core.log to determine the running version. It is
  faster and doesn't require web credentials.

o Fix residue bug in lisp_decap_stats.

o When an RLOC goes unreachable, have the lispers.net control-plane tell the
  external data-plane the RLOC is no longer forwarding RLOC-set.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.453
                --------------------------------------

o Release date: Tue Apr 10 14:49:42 PDT 2018

o Put "good-packets" counting in RTR when it decaps and reencaps.

o Fix crash in lisp_process_data_plane_decap_stats() where a test needs to be
  done if a dictionary array is passed versus a json string.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.452
                --------------------------------------

o Release date: Tue Apr 10 10:05:05 PDT 2018

o Make go data-plane go faster. Do not do any string manipulation in the data
  path.

o Report decapsulation statistics from go data-plane to python lispers.net
  control-plane. The ETR and RTR displays via the web interface will show
  the decap counters.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.451
                --------------------------------------

o Release date: Mon Apr  9 09:46:30 PDT 2018

o It is important to note that if you run release 0.450 or more recent with
  the go data-plane and want to use lisp-crypto, you need 'pycryptodome"
  installed.

o Do not crash when 'pycryptodome' not installed. Issue log message to tell
  user that AES-GCM cannot be used unless a "pip install pycryptodome" is
  entered.

o Modify lispers-net-test-install.py to check to see of pycryptodome is
  installed on the system.

o Add pycryptodome to the pip-requirements.txt file so the lispers.net-install-
  ubuntu.py script can install it.

o Fix traceback in lisp_write_ipc_decap_key().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.450
                --------------------------------------

o Release date: Sat Apr  7 11:15:19 PDT 2018

o Go data-plane needs to clear the ICV io buffer or else it cannot interoperate
  with the python lisp-crypto implementation.

o Change ICV for cipher-suites 2 and 5 from sha1 to sha256 to be compatible
  with the (lisp-crypto) RFC8061 defined cipher-suites.
 
o We already supported AES-CBC which is cipher-suite codepoint 2. We now
  support in the python data-plane AES-GCM which is cipher-suite 5. Cipher
  suite 5 interoperates with the go data-plane since it only supports AES-GCM.
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.449
                --------------------------------------

o Release date: Tue Apr  3 15:23:45 PDT 2018

o Do a test for the Debian Kali variant so when lisp-core starts processes, it
  can use the correct file direction syntax.

o The lispers.net go data-plane can now support AES encryption with sha256 ICV
  checks. Slowing down the data-plane.  ;-)  This works for all combinations
  of IPv4/IPv6 inner headers encapsulated with IPv4/IPv6 outer headers.

o Add support in "type" : "statistics" message to report decapsulation errors.

o Fix traceback in lisp_info.print_info(). There are cases when an Info-Request
  message does not contain a hostname.

o Have go data-plane update keys in all RLOC data structures for the same RLOC
  address.

o Call lisp_show_state() no more often than once per 2 seconds. Will reduce
  log size in logs/lisp-xtr.log.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.448
                --------------------------------------

o Release date: Fri Mar 16 13:39:13 PDT 2018

o When processing a statistics IPC message, check to see that the key/value
  pairs that are suppose to be arrays, are actually arrays before referencing
  them.

o Shut down data-plane threads when new database-mappings or interface
  IPC messages come. Otherwise, we have more than one go thread receiving
  packets for the same filters. Which results in duplicates getting
  encapsulated.

o Put in the AF-PACKET socket interface to get zero-copied packets from the
  kernel. In this version, however, duplicate packets are coming to a single
  thread using AF-PACKET v3. Use environment variable LISP_USE_AF_PACKET in
  RUN-LISP to enable AF-PACKET. It is off by default right now, runs
  on eth1 only in the lisp_etr_thread(), and does not receive when an xTR
  is behind a NAT.

o Fix crash in lisp_elp.select_elp_node() to not test for a local RLOC when
  the system cannot get one (a IPv6 RLOC).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.447
                --------------------------------------

o Release date: Tue Mar  6 15:41:39 PST 2018

o Have data-plane send counters since the last time it told the control-plane.

o If a map-cache entry is about to time out and it has been active from an
  external data-plane, send a refreshing Map-Request. This is done when the
  external data-plane sends statistics for one of the RLOCs in the RLOC-set
  for the map-cache entry.

o When a new encap-keying occurred for existing state, we were not setting
  the last-rekey-time hence not determining when processing a Map-Reply that
  new keys need to be told to the external data-plane.
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.446
                --------------------------------------

o Release date: Mon Mar  5 09:43:00 PST 2018

o Display "[on]xTR log" when "RTR logging enabled" in landing page pull-down
  menus.

o Do not take minimum of stored map-cache TTL stored with new one that arrived
  in a Map-Reply. Use the latest. And do not save the last-refresh-time from
  an existing map-cache entry when creating a new data structure form a Map-
  Reply should have a last-refresh-time of now.

o Make curve25519 import required. That way all combinations of chacha20, aes,
  curve25519, poly, and sha256 can be used. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.445
                --------------------------------------

o Release date: Fri Mar  2 18:39:40 PST 2018

o Show the lisp-xtr state when clicking "Map-Cache" in the ITR or RTR Map-Cache
  display title. It basically shows the context of local file show-xtr.
  Whenever there is a change in xtr-parameters, interfaces, database-mappings,
  nat-etr-port, or map-cache, the file is written by the lisp-xtr process.

o A fundamental bug found where 240.0.0.0/8 was interpreted as a multicast
  address. Fix now and can use 240 addresses as unicast addresses.

o Fix slot collision bug in lisp_lml_walk().

o Fix lisp-xtr statistics IPC in lisp_stats_thread().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.444
                --------------------------------------

o Release date: Tue Feb 27 17:06:27 PST 2018

o Do not tell external data-plane about RLOCs that are not IPv4 or IPv6
  addresses.

o Handle instance-ID of 0xffffff in lisp_process_punt() so we don't process
  control packets on this path. Rather use the early part of the lispers.net
  data-plane to do this.

o Handle external data-plane statistics message with an RLOC of "no-address".
  This can occur when the lispers.net control-plane passes down a map-cache
  entry of "native-forward".

o Allow lispers.net control-plane to tell the external data-plane to clear its
  map-cache.

o The fast go data-plane works as an RTR. It can forward packets to xTRs behind
  NATs. The lisp-xtr go data-plane is still disabled by default.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.443
                --------------------------------------

o Release date: Thu Feb 22 14:16:08 PST 2018

o Fix bug where an external data-plane and the lispers.net data-plane encap
  the same packets causing duplicates to and from sources and destinations.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.442
                --------------------------------------

o Release date: Wed Feb 21 20:50:23 PST 2018

o Put multicast replication support in lispers.net go data-plane. Not ready
  for prime time yet. But it works with the decentralized mapping system.

o Make lisp_mapping.rtrs_in_rloc_set() consistent with site_eid.rtrs_in_rloc_
  set().

o Only write IPv4 or IPv6 EID database-mappings to the external data-plane.

o When a new map-cache entry is created, the lispers.net control-plane believes
  there is not an RLOC-set change, so it doesn't tell the external data-plane.
  Fixed now.

o When "decentralized-xtr=yes" is configured and "ipc-data-plane=yes" is
  configured, make sure the lispers.net data-plane replicates multicast
  Map-Register messages.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.441
                --------------------------------------

o Release date: Tue Feb 20 12:20:03 PST 2018

o Put logs.<date> in the logs directory. So the user can put a symbolic link
  in the lispers.net directory to point the logs directory somewhere else. So
  all log files from the running system as well as up to 10 logs from previous
  incarnations of the LISP subsystem are stored. 

o When an ITR sends an RLOC-probe Map-Request with one cipher-suite and gets
  an RLOC-probe Map-Reply with a different cipher-suite, it should use the
  cipher-suite from the RLOC-probe Map-Reply.

o When an ETR receives an RLOC-probe Map-Request with one cipher-suite and is
  configured to use different cipher-suite, it should use the cipher-suite from
  the RLOC-probe Map-Request.

-------------------------------------------------------------------------------


                lispers.net Beta Release Version 0.440
                --------------------------------------

o Release date: Sat Feb 17 04:31:42 PST 2018

o Syntax error when installing "-t mangle" for virtio bug. Need to checksum-
  fill tcp and udp packets.

o When a complete RLOC-set is returned from a Map-Server for an (S,G) lookup,
  have the ITR choose the RTR to cache in its map-cache and have the RTR
  choose the RLE-set for xTRs in public space and xTRs behind NATs.

o Have an ETR register an (S,G) with lisp_hostname and not socket.
  gethostbyname().

o We were not doing a (S,G) lookup on a RLOC-probe reply, therefore thinking
  each RLOC-probe Map-Reply was creating a new map-cache entry. This resulted
  in triggering another RLOC-probe and this process looped using a large
  amount of CPU.

o Ignore Map-Notify in an ITR for an (S,G) if it has an RTR cached. Since the
  ITR cannot get multicast packets encapsulated to xTRs behind a NAT, there
  is no point in tracking membership.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.439
                --------------------------------------

o Release date: Sun Feb 11 16:52:12 PST 2018

o Fix traceback calling lisp_etr_proecss_map_request(). Missing ttl argument.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.438
                --------------------------------------

o Release date: Thu Feb  1 11:47:02 PST 2018

o Integrate a faster data-plane (written in go) into the LISP subsystem. It
  is not ready for prime time yet and is disabled in this release. It is called
  "lisp-xtr". You do not configure this with "ipc-data-plane = yes". If you
  uncomment "#setenv LISP_RUN_LISP_XTR" in the RUN-LISP script, it gets
  started up. But DO NOT do this for this release.

o Turn on and off debug logging in the external data-plane lisp-xtr from the
  lispers.net web interface (or the lisp.config configuration file).

o Get access to the lisp-xtr.log file from the web interface.

o When restarting LISP, the lisp-core process sometimes does not come up due
  to "Address already in use". Make sure the port 4342 socket is shut down
  when the LISP subsystem is shut down.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.437
                --------------------------------------

o Release date: Wed Jan 31 14:02:37 PST 2018

o Process "type" : "statistics" message from an external data-plane.

o Don't IPC write to an external data plane when an RLOC-probe reply does not
  change keys.

o Change "last-packet" in the "type" : "statistics" message to "seconds-last-
  packet" to indicate the value is seconds since last packet.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.436
                --------------------------------------

o Release date: Mon Jan 29 22:06:22 PST 2018

o Include ICV key in "type" equal "decap-keys". Call decryption key keyword
  "decrypt-key" and ICV key keyword "icv-key".

o Include ICV key in in RLOC and RLE records as well as rename it encryption
  key keyword to "encrypt-key". Note this is optional in JSON so receiver of
  message must test for it. Ditto for "icv-key".

o Could not find encryption key so map-cache entry was not including keys
  to an external data-plane.

o Put keyword "port" with an RLOC json entry. Put a keyword "port" with a
  "decap-keys" entry. So we can work through NATs.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.435
                --------------------------------------

o Release date: Sat Jan 27 12:42:39 PST 2018

o Put environment variable LISP_GEO_ZOOM_LEVEL in ./RUN-LISP so when a uer
  clicks on a gps-cooridinate URL, they can get more map detail.

o Have lisp_geo.get_distance() take two geo points. Do not restrict to
  geo-prefix and geo-point.

o Drop ciphertext packet when it is not a multiple of 16 bytes. Print log
  message when "data-plane-logging = yes".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.434
                --------------------------------------

o Release date: Thu Jan 18 12:19:27 PST 2018

o Fix the Cipher Suite constants. The lispers.net uses cipher suite 5 and 6.
  What is coded from old Internet Drafts is 4 and 5.

o In lisp_itr_process_punt() pass into lisp_rate_limit_map_request() a
  lisp_address() type versus string type.

o When writing a "type" : "interfaces", make sure instance-id is transmitted
  as a string.

o Process { "type" : "restart" } message when received on the "lispers.net-itr"
  named socket.

o Introduce a { "type" : "entire-map-cache" } so when a external data-plane
  restart happens the entire map-cache can go in one IPC message from the
  control-plane to the data-plane.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.433
                --------------------------------------

o Release date: Fri Jan 12 15:05:39 PST 2018

o When sending Map-Registers to multiple Map-Servers, use the same xTR-ID.

o Fix crash in lisp_queue_multicast_map_notify() when there is a empty
  rle-list.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.432
                --------------------------------------

o Release date: Wed Jan 10 21:14:57 PST 2018

o Introduce "lisp xtr-parameters" sub-command "decentralized-xtr = yes | no"
  (which defaults to "no"). This is an implementation of draft-farinacci-
  lisp-decent-00 where no third-party managed mapping system is needed. That 
  is, all the xTRs are Map-Servers and Map-Resolvers for their own use. This 
  feature can be used for an emergency use-case scenario where there is no 
  Internet connectivity (for access to infrastructure components like DNS or 
  a LISP mapping system) but local connectivity is available among the xTRs.

o Make sure that named socket /tmp/lisp-lig is closed and removed for any error
  conditions found by lisp-lig.py.

o If a bug is introduced in lisp-lig.py, make sure that STOP-LISP removes file
  /tmp/lisp-lig.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.431
                --------------------------------------

o Release date: Fri Jan  5 11:17:51 PST 2018

o Allow the "lisp group-mapping" command sub-clause to accept "address = 
  0.0.0.0" or "address = 0::0" to mean (*,G) which joins/registers 
  (0.0.0.0/0, G/32) or (0::0/0, G/128).

o Fix bug to print out RLE name in boldface blue. Distinguish between text
  output and html output.

o When the Map-Server proxy-replies for a requested multicast EID, do not 
  skip over RLOC unless the multicast priority is 255. For multicast EIDs, 
  we were checking the unicast priority.

o Really fix a "bad-inner-header" dictionary keyword reference. Should be
  "bad-inner-version".

o Fix traceback bug in lisp-lig.py.

o First code commit for a decentralized mapping system. Sneak preview of
  LISP-Decent.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.430
                --------------------------------------

o Release date: Wed Dec 27 09:02:02 PST 2017

o Do not return a lisp-crypto key in a RLOC-probe reply when an external
  data-plane is being used. Use environment variable LISP_NO_CRYPTO in the
  RUN-LISP script so when data-plane-security=no and the other side negoiates
  a key, that we don't send a key back.

o In all data-plane IPC JSON messages make instance-ID value a string. This
  makes the lispers.net code consistent with the lisp-ipc-data-plane.txt spec.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.429
                --------------------------------------

o Release date: Wed Dec 20 22:18:56 PST 2017

o Fix format string in lisp_map_request.verify_map_request_sig() that caused
  a traceback.

o Make sure we process Info-Reply messages from RTR when ipc-data-plane=yes
  is configured. We want to drop encapsulated packets only after checking
  for instance-ID 0xffffff in lisp_etr_nat_data_plane().

o Send ephemeral port to external data-plane when database-mappings are
  configured.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.428
                --------------------------------------

o Release date: Tue Dec 19 17:14:51 PST 2017

o Refix first bullet in release 0.427. Data-plane punts should work now
  meaning the source-EID will be allowed and a Map-Request will be sent
  for the destination-EID.

o In lisp_etr_data_plane(), do not process packets on when lisp-ipc-data-
  plane=yes is configured to avoid duplicate delivery with an external 
  data-plane.

o In lisp_etr_nat_data_plane(), do not process packets on UDP ephemeral
  socket when lisp-ipc-data-plane=yes is configured to avoid duplicate 
  delivery with an external data-plane.

o Add type="statistics" support so when an external data-plane sends forwarding
  stats to the lispers.net control-plane, it can report it as well as
  keep map-cache state alive and well.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.427
                --------------------------------------

o Release date: Thu Dec 14 15:46:26 PST 2017

o When discovering a source-EID in the lisp-itr process, a check is done to
  see if a map-cache entry exists for the destination-EID. A test for action
  LISP_SEND_MAP_REQUEST_ACTION should be made. This type of map-cache entry
  has no RLOCs. So allow a Map-Request to be sent.

o When sending a new RLOC-probe make sure the lookup in the encap-crypto-list
  is for port 4341 when RLOC-probe destination is an RTR or non-NAT ETR.

o Do not display LISP-ITR/RTR Nonce Crypto State when there are no entries
  in the data structure.

o If an interface is configured with a dynamic-EID prefix, there is no
  requirement that a database-mapping configured have "dynamic-eid=yes" set.
  So allow the lisp-itr system to process a "punt" IPC message.

o When remote re-keying happens, make sure we keep the local public-key.
  Because if we allocate a new one and return it to the other side, the
  other side will think there is a remote re-key. Then we have a re-key 
  loop. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.426
                --------------------------------------

o Release date: Tue Dec 12 17:44:56 PST 2017

o When "ipc-data-plane = yes" is configured, that means another data-plane
  in the system is listening on data encapsulation port 4341. Don't have
  the lisp-core process listen on it as well or the second entity that comes
  up will crash with "Address already in use".

o Don't increment rekey-count when keying for the first time.

o Secret magic password no longer needed to see cyrpto-list data structures.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.425
                --------------------------------------

o Release date: Mon Dec 11 14:48:55 PST 2017

o Display nonce/encap/decap crypto-list data structures (only when a secret
  magic password is supplied). The display does not produce any full key 
  material. The links to these pages are available to superuser accounts only
  and can be found in the RLOC Record column of the ITR, ETR, and RTR pages.

o Remove entries from the nonce crypto-list. They stay in list when a Map-
  Request is sent to the mapping system and the Map-Servers proxy Map-Reply.

o Fix "KeyError: 'bad-inner-header-version'" traceback.

o If an xTR is behind a NAT but using a non-RFC1918 address RLOC, make sure
  it uses the global translated-RLOC for an itr-rloc field in a Map-Request.

o Add uptime, last rekey-time, rekey-count, and use-count to each crypto key 
  maintained and display on new web pages documented above.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.424
                --------------------------------------

o Release date: Tue Dec  5 23:11:27 PST 2017

o When the LISP_PCAP_LIST is specified, we don't set pcap filters for receiving
  RLOC-probe Map-Replies in the lisp-itr process. This causes RLOCs to go
  unreachable even though Map-Replies are being received (but not processed).

o Allow all of lisp-itr, lisp-etr, and lisp-rtr processes to periodically 
  log the lisp-crypto data structures.

o Clean out the lisp_crypto_keys_by_nonce{} array periodically for RLOC-probes
  that are not answered due to real connectivity issues.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.423
                --------------------------------------

o Release date: Fri Dec  1 10:31:15 PST 2017

o If an invalid formatted public-key is registered to the mapping system, 
  avoid calling the ecdsa library, issue a log message, and certainly don't
  crash.

o A "lisp rtr-list" clause does not take all address sub-commands. A bug
  caused the first entry to be overwritten by the last configure RTR address.

o Do not process sent Map-Requests from yourself or sent Map-Replies from
  yourself. The pcap code returns this, the processing code needs to check
  the source address for self.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.422
                --------------------------------------

o Release date: Wed Nov 15 05:50:48 PST 2017

o If LISP cipher-suite 4 or 5 is not negotiated, use ciper suite 1. We were
  erroring out saying we don't support when we do.

o Implement data-plane IPC interface as spec'ed out in lisp-data-plane-ipc.txt.
  Now any data-plane can use the lispers.net control-plane via this simple API.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.421
                --------------------------------------

o Release date: Mon Nov 13 16:05:07 PST 2017

o Handle a corner condition when a "lisp database-mapping" command replaces
  an existing one where a translated RLOC and port is in the RLOC-set. The
  replacement causes a local private address (from "interface=<device>" RLOC
  command clauses) to become an RLOC. And if its time to send a Map-Register 
  (before another Into-Reqeust/Info-Reply exchange occurs), then a private 
  address RLOC gets registered in the mapping system for a short time. During
  that time, ITRs can get their map-caches stuck with private addresses.

o Add "dev eth0" when a IPv6 default route is configured in RL-template. 

o Send RLOC-probe requests and RLOC-probe replies with TTL 64 (or a specific
  architectural constant so we can get through NATs that may reassign
  the TTL to a standard value of 64). So we can determine the underlay 
  hop-count in both directions. We will display it in the map-cache RLOC-State
  column as well as in the RLOC probe information display.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.420
                --------------------------------------

o Release date: Tue Nov  7 17:14:43 PST 2017

o Cosmetic fix, don't display "RTR" in detailed mapping display on map-server
  now that rloc-name of "RTR" is be provided in registrations and RLOC-probes.

o Fix traceback in lisp_packet.encrypt(). Don't call it keys aren't negotiated
  fully yet.

o On startup, do not send Map-Register messages after a one-time 5 second timer
  expires. When nat-traversal is enabled on a slow system behind a slow link, 
  a Info-Reply may have not been received so the global RLOC is not registered
  initially. If a remote ITR does a mapping system lookup during this small
  window of time, it could get a local RLOC in its map-cache it cannot use.

o Add hostname to the initial startup log message from any LISP process.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.419
                --------------------------------------

o Release date: Thu Nov  2 20:33:08 PDT 2017

o Do not use suppression logic for subsequent RLOC-probes if the last one
  was NOT sent for a given EID. This bug is causing RLOC-probes to not be
  sent for unreachable RLOCs. So they never can come back up again.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.418
                --------------------------------------

o Release date: Thu Nov  2 12:32:15 PDT 2017

o The best priority unreachable RLOCs were not being probed to test them
  for reachability. Fixed now.

o Do "NAT-traversal optimized RLOC-set" for Map-Reply messages which are not
  RLOC-probe replies.

o Have ETRs register the RTR RLOC when doing nat-traversal with rloc-name
  "RTR". So it will be clear reading map-caches that a particular RLOC is
  the RLOC of an RTR node.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.417
                --------------------------------------

o Release date: Wed Nov  1 14:48:27 PDT 2017

o Fix traceback in lisp_get_local_rloc().

o Add documentation to how-to-install.txt when logs/lisp-itr.log reports
  "pcap_open_live() not found".

o If signature string in RLOC lisp.config command clause is tampered with, the
  Map-Server should not crash.

o The map-server should not create subscriber state if the Map-Request 
  signature fails verification.

o Add xTR-ID to the Map-Request when a subscription-based Map-Request is
  being sent.

o Time out subscription state in Map-Server.

o When the Map-Server returns an RLOC-set for a ITR making a Map-Request for
  an EID behind a NAT, do not return the translated address. The ITR cannot
  get through its NAT. We were inadvertently returning RLOCs with RLOC-names
  which cause this situation to happen.

o When a private-address RLOC is returned with the RTR RLOC to an ITR, and
  the priority for the private RLOC is better than the RTR's RLOC, for a
  newly created map-cache, mark the private RLOC down while using the RTR
  RLOC. Once the private RLOC is tested and has proven reachability, then use
  the private RLOC. This is the case where the EID is behind the same NAT as
  the ITR. This allows to reduce the amount of time we encapsulate packets to
  a non-reachable RLOC.

o When mapping system returns JSON-type RLOC-records, have an ITR or
  RTR not put them in the map-cache. Log a message that we pruned the list
  provided by the mapping system. Such RLOC-records are control-plane only
  RLOC types.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.416
                --------------------------------------

o Release date: Fri Oct 27 15:39:07 PDT 2017

o Add draft-rodrigueznatal-lisp-pubsub-01.txt PubSub support. The Map-Server 
  will cache subscription requests and Map-Notify EID-prefixes requested when 
  there are RLOC-set changes.

o Add pubsub support to lig. That is, accept keyword "pubsub" on command line
  which makes lisp-lig.pyo continue to run waiting for Map-Notify messages 
  from the Map-Server when the EID it is ligging hash RLOC-set changes.

o Fix traceback in lisp_rloc.store_rloc_from_record().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.415
                --------------------------------------

o Release date: Fri Oct 20 16:23:31 PDT 2017

o Fix a couple of Tracebacks associated with processing the lisp_crypto_keys_
  by_rloc_decap{} dictionary array.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.414
                --------------------------------------

o Release date: Thu Oct 19 20:20:50 PDT 2017

o Fix crash in lisp-rtr process while processing RLOC-probe requests with
  crypto keys in the ITR-RLOCs field.

o Have a non-NAT xTR check to see if address plus port if not found and then
  create a decap/decrypt key for just the address.

o When a subsequent EID is added to the map-cache with the same RLOC that ha
  already been determined unreachable via RLOC-probing, mark the RLOC 
  unreachable in the map-cache.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.413
                --------------------------------------

o Release date: Thu Oct 19 13:53:59 PDT 2017

o Fix short packet unexpected in flow-logging. And display something meaningful
  when the encapsulated packet is a LISP control message.

o Fix an unexplainable crash in lisp_send_map_request(). There could have been
  an RLOC-probe sent to an IPv6 RLOC but since there wasn't any local IPv6
  RLOCs, we could not build the ITR-RLOCs field in a Map-Request.

o Don't use the Map-Request source address (inside of an ECM message) as a
  destination for a Map-Reply. Since now we guaranteed the Map-Request source
  is an EID, use the ITR-RLOC address.

o Print public keys when ICV fails. Happens only when data-plane-logging=yes.

o Do not display "encap-crypto" if shared-key not computed.

o Bad check introduced in 0.412 that caused key to not get encoded by RTR.

o There is no way for an RTR to tell when an RLOC-probe is received, by and in
  of itself, that it is from an ITR that is behind a NAT. One has to assume 
  that it is not and when RLOC-probe state is created to determine reachability
  and encapsulation encryption keys, the port number is known and used
  as part of the lookup in the lisp_decap_crypto_list{}. This way we can find
  the right keys for multiple xTRs behind the same NAT at the same time
  finding the right keys for an xTR that is NOT behind a NAT. This fix also
  works when there is not a symmetric data-path through the RTR. Which means
  that a non-NAT xTR sends through the RTR and the return traffic from the
  NAT-based xTR goes directly to the non-NAT xTR.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.412
                --------------------------------------

o Release date: Sun Oct 15 14:30:54 PDT 2017

o Fix crash in rloc_record.print_record(). Don't try to print keys if keys
  array member is None.

o In release 0.407, code was removed to update a local/private RLOC change. 
  That code needs to remain or an incorrect itr-rloc is used in a RLOC-probe
  Map-Request. This causes reachability to not get reset when an xTR moves
  from one NAT to another.

o Clear the RTR-list in the ITR when the map-cache is cleared by the user.
  That way, a new set of defalut map-cache entries can be created.

o When a source-EID is available to send a Map-Request, use it as the source
  address for the encapsulated (ECM) control message. Only when one is not
  available use the ITR-RLOC.

o Display "uptime since" timestamp for a non-priority RLOC in the ITR map-cache
  entry.

o When an RLOC goes unreachable, set unreachable state for all EIDs that use
  the same RLOC address.

o Added decap statistics to the RTR display. What was implemented in release
  0.410 for the ETR is now available for the RTR. That is, display total 
  receive stats as well as receive errors on decapsulation. Only show per
  receive thread stats when more than one forwarding thread is configured.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.411
                --------------------------------------

o Release date: Mon Oct  9 16:47:16 PDT 2017

o Reformat the LISP-ITR RLOC-Probe Information display to collapse common
  RLOCs for different EIDs into one row of information. And fix a few bugs.

o Do not process an RLOC-probe reply for an RLOC that has a different address-
  family of the arrived packet. You don't know for sure you have connectivity
  to that RLOC unless you probe it in that address-family.

o Indicate when RLOC-probes are suppressed for the same RLOC for a different
  EID.

o Made changes to RL-template to simplify the explanation of it as well as
  give examples of using static route commands with the "src" parameter so
  app source addresss selection happens automatically for EIDs.

o Trigger RLOC-probes for best priority RLOCs when a new map-cache entry is
  created. This tells us within 10 seconds what RLOCs are unreachable and
  reduces packet loss sooner.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.410
                --------------------------------------

o Release date: Wed Oct  4 17:04:11 PDT 2017

o The map-server site cache gets removed when any configuration change occurs.
  When the user wants to enable or disable debug logging, the site cache
  should be left alone. The fix is to not allow the modification of an 
  existing configured site but allows new sites to be configured/added.

o Put in ETR receive stats in the ETR display. Display total receive stats as
  well as receive errors on decapsulation. The total stats is the sum of
  stats for each configured database-mapping EID-prefix.

o By clicking the title of the column label in LISP-ETR Decapsulation Stats 
  table, a superuser can clear the stats counters.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.409
                --------------------------------------

o Release date: Tue Oct  3 12:20:24 PDT 2017

o Fix all occurences in command documentation in lisp.config.example where
  "*" is accepted as a valid instance-id value. Remove all other occurences.

o Add new "lisp database-mapping" parameter for sub-command "prefix" called
  "signature-eid = yes | no". This allows an xTR to use this specific EID
  as a crypto-EID for Map-Request signatures. By doing this, then the single
  lisp-sig.pem file contains the private key that is associated with the
  public key the crypto-EID hashes. This will NOW be required on the RTR
  as well.

o Fix NoneType dereference in lisp_process_register_timer().

o Do not data-encapsulate RLOC-probe replies directly to xTRs behind NATs. 
  Only RTRs should do this, not ETRs.

o Fix traceback in lisp_packet.print_flow() when IPv4 packet is less than 24
  bytes for IPv6 packet is less than 44 bytes.

o On an ITR, make sure you RLOC-probe two xTRs even though they have the same
  RLOC address. Since the ITR does not track port state for these xTRs behind
  the same NAT, it can't tell this from an xTR for two different EID-prefixes.
  So check the RLOC-names, if different, they are different xTRs.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.408
                --------------------------------------

o Release date: Fri Sep 29 11:55:31 PDT 2017

o Send triggered RLOC-probe with correct socket list so RLOC-probe can be
  returned through a NAT.

o Fix flow-log to not display "receive errors" for encapsulated packets. There
  was packet residue on the decap data structure that leaked into the encap
  data structure on the RTR.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.407
                --------------------------------------

o Release date: Thu Sep 28 21:11:04 PDT 2017

o When a translated-port changes for an xTR behind a NAT, the RTR should 
  trigger an RLOC-probe to get RLOC reachability and to get lisp-crypto 
  session keys established.

o The Map-Server should never send a Native-Forward action Map-Reply for a 
  crypto-EID. It should return a Send-Map-Request action Map-Reply. And the 
  ITR should wait <ttl> minutes to resend a Map-Request, where <ttl> is the 
  value in the Map-Reply returned.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.406
                --------------------------------------

o Release date: Thu Sep 28 17:04:01 PDT 2017

o When launching timer threads for triggered messages, we need to stop the
  previous periodic threads or else we send double redundant messages.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.405
                --------------------------------------

o Release date: Thu Sep 28 13:20:35 PDT 2017

o In the flow log output, if a packet is encrypted but had an ICV error, 
  display the fact. This is a quick way to determine if there are any input
  processing errors for packets being decapsulated.

o In the lisp-itr process, when a Map-Resolver is configured, send an Info-
  Request immediately rather than setting a 3 second timer to send one.

o In the lisp-etr process, when a Map-Server is configured, send an Info-
  Request immediately rather than setting a 3 second timer to send one.

o In the lisp-itr process, when an Info-Reply is received from a Map-Server
  with a new RTR-list and default map-cache entries are created, trigger
  an RLOC-probe to get RLOC reachability and to get lisp-crypto session keys
  established.

o In the lisp-etr process, when an Info-Reply is received from a Map-Server
  with a new RTR-list, trigger a Map-Register to all Map-Servers so the
  RLOC-set contains the RTR RLOC-records.

o In the lisp-etr process, do not log "Local interface address changed" and
  "Store translation" when there isn't a change.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.404
                --------------------------------------

o Release date: Tue Sep 26 13:54:28 PDT 2017

o When recording an exception, traceback.print_last() may fail writing to
  standard output. This prevents the traceback from being written to the
  log file of the crashsing process as well as lisp-traceback.log. 

o Do not print "up-state since never" when the state of an RLOC has never
  changed. Print the uptime of the map-cache entry.

o Fix traceback in lisp_mapping.increment_decap_stats().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.403
                --------------------------------------

o Release date: Wed Sep 20 21:24:10 PDT 2017

o For a configuration race condition where a component process is slow in
  processing configuration commands, do not give up if there is a IPC timeout.
  Go to the next command (when processing process bringup) or go to the next 
  process (when processing a config file change).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.402
                --------------------------------------

o Release date: Fri Sep 15 14:12:12 PDT 2017

o Allow for logfile rotation. That is, whenever an external procedure moves
  any processs logfile, a new logfile is created with the same name.
  The feature detects that a file has been moves before creating a new one so
  no log messages are lost.

o For lisp.debug(), add timestamps between ">>>" and "<<<". Helps corelate
  output from regular lisp.lprint() statements.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.401
                --------------------------------------

o Release date: Mon Sep  4 00:52:13 PDT 2017

o Don't write cold right before vacation. Fix traceback in lisp_interface_
  command(). ;-)

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.400
                --------------------------------------

o Release date: Sat Sep  2 12:46:14 PDT 2017

o This release fixes regression bugs introduced in 0.399.

o In lisp_interface_command(), check for instance-ID is a number. And if not,
  set instance-ID to 0. Otherwise, convert string to integer and store in 
  data structure.

o Make RLOC-record display for JSON entry "json: { ... }".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.399
                --------------------------------------

o Release date: Fri Sep  1 21:31:35 PDT 2017

o When map-cache is cleared, make sure arrays lisp_crypto_keys_by_rloc_
  encap{} and lisp_crypto_keys_by_rloc_decap{} are emptied.

o Log "User cleared map-cache with <num> entries" when the user clears the
  map-cache from the web interface.

o Fix crash in lisp_interface_command() when instance-ID supplied by user is
  not an integer.

o Have JSON string displayed when pointer hovers over RLOC-record in map-cache
  on ITR and RTR.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.398
                --------------------------------------

o Release date: Fri Sep  1 10:25:50 PDT 2017

o When an RLOC is a JSON string, print "json" in map-cache display.

o Needed to copy new lisp-cert.pem certificate to lisp-cert.pem.default so
  it is in the release so the user can copy it over (after this release is
  installed) to its own lisp-cert.pem file.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.397
                --------------------------------------

o Release date: Thu Aug 31 15:32:42 PDT 2017

o Have pip-requirements.txt point to pyOpenSSL==16.2.0 instead of 0.14.

o On lisp-itr startup, wait for all EID-prefixes are processed from
  "lisp database-mapping" commands. Don't give up. Just have the thread wait
  and have it check before it begins processing the EID-prefixes polling 
  LISP_ITR_WAIT_TIME seconds each check time. This is for CPU challenged 
  systems or systems that have a lot of work to do when starting up LISP.

o Generate a new lisp-cert.pem file that doesn't contain an expired cert.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.396
                --------------------------------------

o Release date: Tue Aug 29 14:35:20 PDT 2017

o Make sure a iptables rule for checksum-fill is added (and removed) for UDP.

o Make sure that STOP-LISP only returns when all LISP processes are removed.

o Add LISP_ITR_WAIT_TIME to RUN-LISP so a user can decide how long to have
  the lisp-itr process wait for "lisp database-mapping" commands.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.395
                --------------------------------------

o Release date: Mon Aug 28 15:45:42 PDT 2017

o When displaying decapsulation stats, do not display just for the EID-prefix 
  but per-RLOC/per-EID-prefix. Then an ETR can tell the user stats on the
  packet arrival RLOC the ITR chose to encapsulate to.

o In STOP-LISP, cd to the directory that the script was called from. And wait
  1 second for a LISP process to get killed.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.394
                --------------------------------------

o Release date: Wed Aug 23 17:12:14 PDT 2017

o Fixed 2 traceback exceptions when processing a Multicast Map-Notify message.

o The lisp-etr pcap filters became broken (to support IPv6-over-
  IPv4-fragmentation) for IGMP packets. Fix is to put more parens in.

o On an ETR that is doing NAT-traversal, it turns out that an IPv6 packet
  that is encapsulated in IPv4 fragments will be received twice. Once by
  the raw socket interface via lisp_etr_nat_data_plane() where the kernel 
  reassembles and once via the lisp_etr_data_plane() where the lisp-etr
  process reassembles. When behind a NAT, use lisp_etr_nat_data_plane() only
  for forwarding (when packet's source port is 4341) and when not behind a NAT
  use lisp_etr_data_plane() only for forwarding (when packet's destination 
  port is 4341).

o Optimize lisp_reassemble(). That is when first fragment is not a LISP or
  VXLAN encapsulated packet, do not save fragments and therefore do not 
  reassemble them.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.393
                --------------------------------------

o Release date: Mon Aug 21 16:43:21 PDT 2017

o Fix blue font when displaying debug logging from the browser.

o Fix reference to lisp-crypto-encap dictionary array before translated-port 
  is set.

o On an RTR, the map-cache entry indicated "encapsulate" when the RTR was
  actually "encap-crypto" to an xTR that is not behind a NAT.

o When there is no translated port for an RLOC, we need to lookup the 
  decryption key based on a lookup key with port 0. This allows for xTRs to
  talk with lisp-crypto in the following situations, NAT-to-NAT-via-RTR, 
  NAT-to-xTR-via RTR, xTR-to-xTR-behind-same-NAT-locally, and xTR-via-RTR-to-
  XTR-return-locally-to-xTR.

o Remove dictionary array element with it points to [] (an empty array).

o Catch a length error when an internal packet is sent from one process to
  another. Do not know the root cause yet.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.392
                --------------------------------------

o Release date: Thu Aug 17 19:37:17 PDT 2017

o Do not pcap an IPv4 header where bytes 4 through 7 are 0. The lisp-etr and
  lisp-rtr processes are mistakening receiving it as "last fragment" of a 
  fragmented IPv4 datagram. This bug introduced when adding IPv4 reassembly 
  code in release 0.390.

o Put "sudo ip6tables -D POSTROUTING -t mangle" into remove-lisp-iptables.py.

o When an xTR determines it is not behind a NAT, it will not include an RTR
  RLOC in its Map-Register. Thereby, when the Map-Server returns a Map-Reply
  it will send an empty RLOC-set when it can return the global RLOC that the
  ITR CAN reach. Fixed now.

o Print RLOC-names out in blue so they stand out in log files and web pages.

o Print out packet when it can be decapsulated but not decrypted.

o The lisp-rtr processes, since it is co-located with the map-server, non 
  data-plane packets on the pcap interface. So when large Map-Register 
  messages are fragmented, the lisp-rtr process has to reassemble the datagram
  and drop the packets that do not have port 4341 as the source or destination
  port.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.391
                --------------------------------------

o Release date: Wed Aug 16 15:05:48 PDT 2017

o Fix traceback in lisp_process_map_reply() when translated-rloc is not set.

o Have env variable LISP_VIRTIO_BUG also do "checksum-fill" for IPv6 too.
  That is, install both iptables and ip6tables rules.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.390
                --------------------------------------

o Release date: Fri Aug  4 13:53:24 PDT 2017

o When signature fails, display the signature used in string format to compare
  what was in the RLOC-record.

o When an IPv6 packet is received by an ITR and the encapsulation headers
  prepended exceed the MTU, the outer IPv4 header must fragmented. This
  is done because we cannot fragment the inner IPv6 header since the ITR is
  not the originating source of the packet. So the IPv6 packet is encapsulated
  once and the resulting IPv4 packet is split up into fragments. The ETR must
  reassemble the IPv4 fragments, strip the outer IPv4, UDP, and LISP headers, 
  and then deliver one IPv6 packet to the destination.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.389
                --------------------------------------

o Release date: Tue Jul 25 17:58:16 PDT 2017

o Make sure the inner source port of an ECM Map-Request is the translated
  port when the ITR is behind a NAT and make sure the itr-rlocs in the Map-
  Request contains a translated RLOC.

o When the Map-Server sees a private RLOC address in the RLOC-set of an xTR
  mapping, return to the Map-Requester the private RLOC as well as the RLOC
  of the RTR. This is to allow an ITR to determine if the ETR is behind the
  same NAT. And if so, it can encap directly to the local RLOC.

o There is a new lisp.config.xtr-nat template file available so you have an
  example of which "rloc" clause is used as the "translated address" and which
  are used as local private addresses for local communication among xTRs behind
  the same NAT. Send email to support@lispers.net for a new copy.

o Fix bug where a Map-Reply that contains RLOC of other xTRs stores crypto
  keys from the Map-Reply source. This was causing the RTRs crypto-keys to
  be used to encrypt traffic to local RLOCs.

o When a local RLOC with priority 1 goes unreachable, fix the best-RLOC-set
  to include the RLOC with priority 2 (the RTR).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.388
                --------------------------------------

o Release date: Thu Jul 13 16:42:11 PDT 2017

o Change message in STOP-LISP to "Bypass removing LISP iptables, ITR 
  process not running".

o New feature, add "send-map-request = yes | no" to an "eid-prefix" clause of a
  "lisp map-cache" command. This instructs an ITR or RTR for a matching EID to
  send a Map-Request to the mapping system.

o Fix "referenced before assignment" traceback in lisp_itr_pcap_process_
  packet().

o Have lig prefer a private address RLOC so when Map-Request'ing the mapping
  system it can use nat-traversal techniques to get a Map-Reply back. If
  there are secondary addresses on the default route's interface, a non
  private address could be selected which suppresses sending Info-Requests.

o A "[0]no-address" was put into a JSON value for "signature-eid" in the
  source-EID field of a Map-Request. Have the receiver log the fact when
  it happens.

o There is a case where a lisp-sig.pem file exists and we want to sign a
  Map-Request but there is no signature-eid set. When an ITR signs a Map-
  Request the source-EID should be used the signature-eid. If the source-EID
  is not available, no signature is included. This could be the case when a 
  lig is performed by the user and no "source <eid>" parameter is supplied.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.387
                --------------------------------------

o Release date: Tue Jul 11 15:55:13 PDT 2017

o Do a test for env variable LISP_RTR_BEHIND_NAT when processing the RTR-list
  given to an xTR from a map-server's Info Reply. This is causing suppression
  of data-plane Info-Requests to an RTR with a private address.

o If the translated RLOC is the same as the local RLOC, then do not have an
  ETR register the RLOC ot the mapping system with an RTR. This means that 
  remote ITRs can encapsulate directly to this ETR since it is not residing
  behind a NAT. As long as "nat-traversal=yes" is enabled, Info-Requests
  are still sent just in case a NAT is placed in the data path.

o Have env variable LISP_NO_IPTABLES not call remove-lisp-iptables.py in
  STOP-LISP tcsh script so a user can control iptables when they see fit..

o In RESTART-LISP use -E on sudo calls to STOP-LISP and RUN-LISP.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.386
                --------------------------------------

o Release date: Thu Jul  6 14:26:26 PDT 2017

o Allow an xTR to be a router. That means while the system is running the 
  lispers.net code, allow non-EID to non-EID forwarding via the kernel. Also
  allow local site EID-to-EID forwarding via the kernel. Therefore, the 
  iptables rules need to change to do the following. The fall through default 
  is to let the kernel handle all packets. And to have the xTR handle packets 
  from each DROP clause:

    ip[6]tables -t raw -A lisp -j ACCEPT -d <special-addresses>
    ip[6]tables -t raw -A lisp -j ACCEPT -d <local-address> 
    ip[6]tables -t raw -A lisp -j ACCEPT -s <site-eid> -d <site-eid>
    ip[6]tables -t raw -A lisp -j DROP -s <site-eid>

o Remove the LISP_NO_PCAP_FILTERS feature added in release 0.385. The
  experiment is over.

o When LISP_PCAP_LIST is supplied, make sure the interface exists before 
  asking pcappy to punt packets for the interface.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.385
                --------------------------------------

o Release date: Wed Jun 28 14:45:00 PDT 2017

o Get Mac addresses for interfaces which have a hyphen in the device name.

o Change ./pslisp to display both installed and running versions. Bold face 
  the version numbers in the display.

o Set initialized boolean lisp_checkpoint_map_cache to False.

o Check log files for Traceback messages when they may not be written to
  lisp-traceback.log. When you click the hostname in the upper right hand
  corner of any web page, it will tell you if Tracebacks were found in any
  log file.

o Put LISP_NO_PCAP_FILTERS in RUN-LISP. Allows user to control what gets to
  the lisp-itr process. Defaults to off, meaning PCAP filters are performed
  by default.

o In the lisp-itr process, we were creating a new key for every RLOC-probe.
  Reason being is that we were not finding the previous key from the lisp_
  crypto_keys_by_rloc_encap{} because the RTR was using 4341 for the port
  number and the ITR was using 0. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.384
                --------------------------------------

o Release date: Fri Jun 23 15:42:24 PDT 2017

o By default, the lisp-itr process will pcap packets sourced by EIDs on each
  interface on the system. An environment variable LISP_PCAP_LIST is introduced
  in RUN-LISP to allow a sophsicated user to supply their own list of
  interfaces to pcap on. This env variable is commented out in RUN-LISP so the
  user has to manage their own RUN-LISP script which will be overwritten on
  each new install.

o By default, the lisp-itr process will make iptables and ip6tables rules
  to tell kernel to drop packets sourced by EIDs. If the user has control
  over what the kernel does, or has its own custom iptables rules, you can
  tell the lispers.net code to not do any iptables rules. Use the environment
  variable LISP_NO_IPTABLES in the RUN-LISP startup script. This env variable 
  is commented out in RUN-LISP so the user has to manage their own RUN-LISP 
  script which will be overwritten on each new install.

o When displaying k flags in the LISP header, rather than display K1, K2, or 
  K3, display kK, Kk, KK, respectively, to be consistent with other flag 
  bit output.

o Found bug where a kernel decap'ed packet that was encrypted was mistaken
  as a packet with an outer IPv4 header. Of course, it was not, and the IPv4
  checksum failed, so the packet was dropped versus decrypted and forwarded.

o Get Mac addresses for interfaces which have a colon in the device name.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.383
                --------------------------------------

o Release date: Thu Jun 22 13:01:12 PDT 2017

o When building EID 'hash-<eid-hash>' as an EID for a public-key lookup, make
  sure each quad between colons are zero-filled to 16-bits and if there is a 
  leading byte before the quads that is part of the hash, make sure it is 
  zero-filled to 8-bits.

o Put log messages in for "Start RLOC Probing" and "End RLOC Probing".

o Do not encapsulate IPv6 link-local packets (i.e. destination fe80::/16) when
  sourced by an IPv6 EID.

o Fix typo "verficiation" in lisp_process_map_register().

o Default checkpointing map-cache to disable. Use subcommand 'checkpoint-map-
  cache = yes" under the "lisp xtr-parameters" to enable.

o On the xTR side do not store key as <rtr-address>:0 when the default encap
  port is 4341. This will cause the xTR to not find the encryption keys to
  use for the packet before encapsulation. This bug was introduced when the
  encap-side code was added for the RTR.

o What a cool bug! Found a case where a 31-byte key was parsed from a Map-
  Reply. This causes the cipher routines to crash. But the key was encoded as 
  a 32-byte quantity, the length in the Security LCAF was correct, but the key
  had a high-order byte of 0 that wasn't stored internally.  Oops. ;-) This is
  only a problem for keys used with EC25519 which is the default setting in the
  lispers.net implementation.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.382
                --------------------------------------

o Release date: Mon Jun 19 21:00:24 PDT 2017

o The RTR needs to be aware of multiple xTRs behind the same NAT for
  encrypting packets to each with each of their encapsulation keys. The
  support from RLOC-probing was not enough to keep keys separate. Fix now.

o Change from printing first and last 4 bytes of the public keys in log
  output to first and last 2 bytes.

o For log output indicate if keys are for the "encap" direction or the "decap"
  direction.

o Make sure we don't rekey when the translated address and port change for
  an xTR behind a NAT.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.381
                --------------------------------------

o Release date: Tue Jun 13 18:07:21 PDT 2017

o Time out native-forward entries in the map-cache even though packets are
  being sent to EID. Do this for auth-failure, policy-denied, and drop-action
  entries as well.

o When duplicating a command name inside of a "prefix" or "rloc" sub-command
  of the "lisp database-mapping" command, a crash will occur. Fixed now so
  when duplicates are used the last occurence is the stored value.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.380
                --------------------------------------

o Release date: Mon Jun 12 09:47:52 PDT 2017

o Do not try to lookup lisp-crypto keys when no RLOC is supplied in a 
  RLOC-probe reply. This was causing keys for multiple xTRs behind the same
  NAT to not get found in local data structures on an RTR.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.379
                --------------------------------------

o Release date: Fri Jun  9 11:31:46 PDT 2017

o Support lisp-crypto when multiple xTRs are behind the same NAT. The RTR
  was getting confused as to what lisp-crypto keys are associated with what
  global translated RLOCs. The translated port needs to be part of the key
  lookup.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.378
                --------------------------------------

o Release date: Wed Jun  7 11:48:34 PDT 2017

o Fixed so lisp-crypto logging to remove extraneous info and add more relevant
  info.

o No need to do double lookup for keys in lisp_etr_process_map_request() and
  lisp_rtr_process_map_request().

o Print last 3 RTTs computed from rloc-probing. Show it in the "RLOC-Probe 
  Information" page. This provides information to know if the RTT has spiked
  or is staying at an average level. Gives a rough approximation how the
  underlay is performing.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.377
                --------------------------------------

o Release date: Fri Jun  2 14:55:50 PDT 2017

o When a RLOC-set exists with a RTR record, a translated RLOC record, and
  a signature record, and an RTR has sent a Map-Request, just return only the
  translated RLOC. The only RLOC that the RTR needs for forwarding. That is,
  do not return priority 255 RLOCs to the RTR.

o Do not sign RLOC-probe Map-Requests. Right now they are not needed and a
  receiver can't parse it. This broke RLOC-probing.

o There was a bad typo in parsing the LISP data header. When trying to set the
  I-bit, it was not setting bit-6 instead of bit-5. This is an incomptable
  change. All xTRs and RTRs need upgrading!

o Do not distance instance-ID for RLOCs in data-plane-logging output.

o When multiple map-resovlers are configured, send Info-Requests to all of 
  them for robustness. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.376
                --------------------------------------

o Release date: Mon May 29 16:46:20 PDT 2017

o Do not zero-fill bits in EID hash. Allow format to be like conventional IPv6
  address encoding. Also, when computing signature over the instance-ID and
  IPv6 address (in ascii) do not zero-fill the IPv6.

o In a Map-Request make source-EID JSON string include "signature-eid" and
  "packet-eid". An xTR that is signing a Map-Request for itself will have
  a packet-eid equal to the signature-eid. But for an RTR that is signing
  a Map-Request on behalf of the original source EID will use its own IPv6
  EID as "signature-eid" that the signature is computed over. With this change
  the JSON string no longer has key "eid". The key/value pairs now will be
  { "source-eid" : "<eid-packet-source>", "signature-eid" : "<eid-map-
  requester>" : "signature" : "<signature-data-over-nonce-seid-deid>" }.

o Fixed outer IPv4 header length check bug introduced in a recent release.

o Do not use source-EID to find a map-resolver on an RTR. If we did, we 
  would need instance-ID information in database-mapping commands for each
  instance-ID client using the RTR.

o Do not "touch lisp.config" when a clear-cache button is pressed unless there
  are static "lisp map-cache" commands that exist. That will reduce the number
  of times we read and process the configuration file.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.375
                --------------------------------------

o Release date: Sun May 21 15:35:32 PDT 2017

o Do not prepend lisp.config diff changes to the lisp.config file. Put it in a
  new file named lisp.config.diff. 

o Put a button on the System Status page that shows the diff file via the
  web interface.

o Require EID crypto-hash authentication. That means that if an IPv6 EID is 
  registered or requested and it matches a prefix from a "lisp crypto-eid-hash"
  command, then its public-key will be looked up and the signature in the
  Map-Register or Map-Request will be verified. Any other EID type or an IPv6
  EID that is not a crypto-hashed address will be verified only via the PSK
  configured mutually on the ETR and map-server. Note an RTR must be 
  configured with a crypto-EID so when it does lookups for crypto-EIDs, its 
  sigature can be verified. This is the case, when crypto-EIDs reside behind 
  NAT devices.

o For ITRs and RTRs to send signed Map-Requests, they need a private key
  file called 'lisp-sig.pem" in the lispers.net directory. Map-Requests will
  be signed only for IPv6 EID lookups.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.374
                --------------------------------------

o Release date: Thu May 18 07:05:51 PDT 2017

o Fix traceback in processing a Map-Notify-Ack.

o If a ECM Map-Request is received by a map-server with a 0.0.0.0 source 
  address and it is rebuilt to send to an ETR, a 16-byte IP header is
  erroneously built. That is 4 bytes (the source address) is not included
  due to the 0.0.0.0 address received.

o lisp-lig.py was not selecting an ITR-RLOC in a Map-Request. This was 
  happening because it could not find an eth or wlan interface. Make
  lisp.lisp_get_local_rloc() more general to find an address.

o Put hostname in lisp.config comment header. Make it easier when looking at 
  the file knowing who it belongs to.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.373
                --------------------------------------

o Release date: Thu May 11 14:30:29 PDT 2017

o Allow "instance-id = *" sub-command for the "lisp eid-crypto-hash" command
  clause. This way the same crypto hash-length can be used for EIDs for all
  instance-IDs.

o Did some column compaction on the ETR display to reduce required horizontal
  space on display.

o Modify how-to-install.txt for a new ubuntu install problem resolution when
  trying to install python modules 'requests" and "geopy".

o Do not use binascii.unhexlify() for decoding public-key strings. Use 
  binascii.a2b_base64() instead. Same for JSON encoded signature strings.

o Replace the use of RSA with ECDSA. This change will require a "pip install
  ecdsa==0.13". To make ECDSA signature and signature verfiication work, the
  signer and verifier must use curve NIST256p and hash the signature data
  with sha256. Important to get different implementations to interoperate
  (like Go and Python).

o JSON strings should be allowed to have '=" signs in them. Fix parser bug
  to not truncate json strings.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.372
                --------------------------------------

o Release date: Wed May  3 14:01:45 PDT 2017

o Allow configuration of an IPv6 EID cryptographic hash length. We are
  introducing a new map-server command named "lisp eid-crypto-hash". Click
  Documentation button on landing page for details. By default, when the
  new command is not used, the default value for all IPv6 EID-prefixes is 64.
  An IPv6 crypto hash-length can be different per instance-ID VPN.

o Support multi-key support in the lisp-ms process according to draft-ietf-
  lisp-rfc6833bis-04. In the "lisp site" command the "authentication-key" 
  sub-command now takes on the form of "authentication-key = [<key-id-0-255>]
  <string> ... [<key-id-0-255>]<string>". This allows to seamlessly rekey
  xTRs in an incremental way.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.371
                --------------------------------------

o Release date: Fri Apr  7 11:21:39 PDT 2017

o The lisp-itr process is not accepting MAC frames that are multicast 
  addressed. Fixed now.

o Since the source of a Map-Notify that is received by the ITR is IPC'ed
  from the lisp-etr proecss, the source in the message is "lisp-etr". This
  isn't an address that we can store in the lisp_mapping() structure so
  display it as "map-notify" and don't crash.

o When running the lispers.net web server (input to RESTART-LISP is "-8080"
  not over SSL, the bottle API does not understand the "fast=True" argument
  so don't supply it.

o If a Map-Notify is awaiting to be Map-Notify-Ack'ed and another Map-Notify
  is generated for the same EID, you want the one waiting for the ack to be
  removed from the map-notify retransmission queue. Otherwise, we lose
  sequence of the latest state. This was causing the ITR to have an empty
  RLE when members were joined to an (S,G). This bug occurs for unicast EIDs
  as well.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.370
                --------------------------------------

o Release date: Mon Mar 20 16:01:19 PDT 2017

o When processing a an IGMP report, the wrong address family was tagged
  for the group address so the Map-Register group address does not reflect
  the IGMP joined group address.

o When printing out which IGMP packet types we don't support, include the
  type value and type name.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.369
                --------------------------------------

o Release date: Fri Mar  3 10:57:43 PST 2017

o Bold face action when empty RLOC-set returned in lig client.

o Do not use private key file if source-eid is not supplied on command line.
  Otherwise a bad json string is sent in the Map-Request.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.368
                --------------------------------------

o Release date: Thu Mar  2 22:41:43 PST 2017

o Make sure rloc-set is empty when returning a action "auth-failure".

o Do not use privkey_filename when ligging a non-IPv6 EID. 

o Use same ephemeral socket for Info-Requests as lig-requests. So NAT info
  state is created on the map-server so Map-Replies can be returned to the
  translated address and port.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.367
                --------------------------------------

o Release date: Tue Feb 28 17:21:24 PST 2017

o Support for IPv6 crypto-hashed address registration and
  authentication. When an IPv6 EID is registered with an RLOC-record
  that contains a JSON string with the keyword "signature", we treat
  the EID as a Crypto Generated Address and use the low-order 64-bits
  as the hash of the public-key of the owner of the IPv6 address. The
  signature is over string "[<iid>]<ipv6-eid>".  The public key is
  obtained by looking up distinguished-name EID in the form of
  'hash-<hash>' in the mapping database with same instance-ID used for
  the EID is being registered. When this lookup returns an RLOC-record
  that contains a JSON string with the keyword "public-key", we use
  the value to verify the signature from the EID registration. The EID
  that is being registered must ALSO know the Map-Register password it
  shares with the Map-Server. Just because I can authenticate who I am
  does not mean I can register in any VPN, any site, or use this
  Map-Server.

o To validate a Map-Requester, a crypto-hashed IPv6 Source-EID and
  signature must be provided in the Map-Request message. The pair is
  encoded in the source-EID field as a LCAF JSON Type with a JSON
  string of { "eid" : "<ipv6-eid>", "signature" : "<sig>" }. Where the
  JSON value <sig> is the signature over the source-EID and target-EID
  in form of "[<iid>]<ipv6-eid>" as well as the Map-Request 64-bit
  nonce. The requestor's crypto-hahsed EID hash must be registered to
  the mapping system so the public-key can be obtained by the
  Map-Server. If the Map-Server verifies the signature as correct,
  then it will process the Map-Request. Otherwise, the Map-Request is
  replied to with a negative Map-Reply with action "auth-failure".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.366
                --------------------------------------

o Release date: Wed Jan 18 09:26:25 PST 2017

o lisp-lig crashes if it can't find an RLOC on eth0. Bug is in function
  lisp_get_local_rloc(). Stop it from crashing and try eth1 or any wlan
  that could exist to find an RLOC if no IP address configured on eth0.

o Have STOP-LISP no longer depend on killall. Do a ./pslisp internal to
  the script and kill each process individually. 

o Have is-lisp-running.py show LISP subsystem processes and not any process
  with the name "lisp" in it.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.365
                --------------------------------------

o Release date: Fri Jan  6 10:43:54 PST 2017

o Updated lispers.net Copyright date.

o On the map-cache display, the column header "RLOC State" is now a hyperlink
  that takes you to a new page that shows you details about the RLOC-probing
  data structures. This is available in lisp-itr and lisp-rtr processes.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.364
                --------------------------------------

o Release date: Fri Dec 30 12:08:50 PST 2016

o tar is not writing tarball to "-o". Just have lisp-get-bits.py move file
  named "file" to lispers.net conventional filename.

o RTR RLOC-probes sent through NATs are not consistently setting an 
  instance-ID of 0xffffff in the LISP header. This is causing RLOCs to go 
  unreachable erroneously.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.363
                --------------------------------------

o Release date: Thu Dec 29 11:51:26 PST 2016

o Fix lisp-get-bits.py so it can deal with a new Dropbox URL when there are
  characters following "tgz'.

o When configuring "checkpoint-map-cache = no" and it is already off, don't
  try to remove the lisp.checkpoint file (which does not exist). Stops some
  chattiness in log files.

o Default instance-ID is not assigned to packet. When there are no "lisp
  interface" commands configured, and there is a single (single-tenant)
  instance-ID value configured in any "lisp database-mapping" prefixes, that
  instance-ID value should be assigned to the packet.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.362
                --------------------------------------

o Release date: Wed Dec 28 19:11:43 PST 2016

o Fix traceback in lisp_process_rloc_probe_timer(). Found in a-xtr1.

o Put the RL script in the release. Name it RL-template. It does nothing by 
  default other than outputs a line "This RL-template script file needs to be
  modified for your system and copied to file RL". When the fiel is modified, 
  it will start up the lispers.net LISP subsystem with specific parameters
  relative to your system's environment. It also can confiugre local IPv4 and 
  IPv6 EIDs for your xTR and necessary IPv6 default route information.

o I broke multi-tenant-eids. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.361
                --------------------------------------

o Release date: Mon Dec 26 15:56:10 PST 2016

o When "lisp-nat = yes" is enabled and there are EIDs assigned to the loopback
  interface of an xTR, we don't want to translate the address or else we
  can't have it be a LISP site talking to other LISP sites.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.360
                --------------------------------------

o Release date: Thu Dec 22 16:25:50 PST 2016

o Support VPN extra-netting for the Interworking case. See the "Command
  Documentation" button for more details. We allow an EID in a non-0
  instance-ID to use a shared service that belongs to another instance-ID or
  instance-ID 0 (global core).

o Allow the "instance-id" sub-command of the "lisp database-mapping" command
  clause to take multiple instance-ID values. That list of instance-IDs will
  cause an EID-prefix to be registered to each VPN.

o Support a new command "secondary-instance-id" that allows multiple map-caches
  to be used on an ITR and RTR. When LISP-site to LISP-site traffic occurs,
  it happens on the primary instance-ID. When LISP-site to shared-service
  traffic occurs (be it an EID in a LISP-site or a non-EID in a non-LISP site),
  the secondary instance-ID is used to do map-cache lookups.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.359
                --------------------------------------

o Release date: Fri Dec 16 10:02:09 PST 2016

o When an RLOC-probe reply is received by an RLOC-probe request sender and
  the replier is merging registrations with other RLOCs, the request sender
  inadvertently replaces the map-cache entry with the replier RLOC and wipes
  out the other ones. Now fixed.

o When clicking on the "clear cache" button, make sure the RLOC-probe list
  data structure is cleared so we don't have RLOC-probe replies create map-
  cache entries that do not reflect the RLOC-records in the mapping database.

o When a map-reply is received for an existing map-cache entry, do not raise
  the TTL for the entry. RLOC-probes were resetting a 15-minute TTL for a
  map-cache entry to 24 hours.

o When "force-ttl" was configured on the map-server, it was replying with a
  ttl of 15 minutes. That is because force-nat-proxy-reply was overriding
  the force-ttl value.

o Remove RLOCs from rloc-probe-list when map-cache entries timeout.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.358
                --------------------------------------

o Release date: Tue Dec 13 10:59:44 PST 2016

o When showing the site-cache on the map-server, do not display registered
  "no" in red boldface for sites that have EID-prefixes with "accept-more-
  specifics" configured. We want to see zero red on this display when
  everyone is registered.

o When any debug logging is disabled, in the "manage logging" pull-down menu,
  the first option is to "disable all logging". Which is a one-click selection
  to disable all logging.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.357
                --------------------------------------

o Release date: Mon Dec 12 12:07:22 PST 2016

o When displaying the LISP-header when ITR or ETR logging is enabled, display
  8 hex digits (that is 0-fill high-order bits).

o Put colon after "Configured JSON Entries:".

o Do not write entries to lisp.checkpoint files if there is no RLOC.

o Have RUN-LISP define an environment variable LISP_LOAD_SPLIT_PINGS that is
  commented out. But when used, the lisp-itr and lisp-rtr processes will
  load-split ping packets to an EID across all equal-priority RLOCs. That is,
  the first 4 bytes of the ICMP header is used with the source and destination
  addresses for the RLOC hash index. Intended for testing purposes only.

o Updated how-to-install.txt to tell users to use ./RESTART-LISP versus
  ./RUN-LISP just in case they forget to type "sudo ./RUN-LISP".

o Implement support for RFC6832 LISP Interworking feature LISP-NAT. Introduce
  "lisp-nat = yes | no" in the "lisp interface" command clause. See file
  lisp.config.example for details. Supported only for IPv4 EIDs right now.
  This is supported by the lisp-itr and lisp-etr processes. Therefore, this
  cannot be run in a system where an RTR is configured. This feature 
  implements a PxTR but in the case of a PITR, there is no route injection
  packets arrive to the PITR via header translation of previously originated
  packets from a LISP-site.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.356
                --------------------------------------

o Release date: Tue Dec  6 14:53:15 PST 2016

o Display map-cache stat counts in boldface green when packet encapsulated 
  with the last second and in boldface red within the last minute, black 
  otherwise.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.355
                --------------------------------------

o Release date: Mon Dec  5 16:55:47 PST 2016

o Fix traceback in lisp_send_map_referral() when a sockets array is expected
  and was not used when using ephemeral sockets across NATs.

o Extend the functionality of the "interface = <device>" subcommand used
  in the "rloc" clause of the "lisp database-mapping" command. It is no
  longer specific to nat-traversal. If you do not want to configure 
  RLOC addresses in the lisp.config file, just use this command to point
  to an interface and whatever is the first address configured on the
  interface will be used as an RLOC. Only applicable to IPv4 addresses right
  now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.354
                --------------------------------------

o Release date: Fri Dec  2 14:22:00 PST 2016

o In lisp_fix_rloc_encap_state_entry(), display the translated port as well
  as the translated address when there is a NAT-traversal change.

o Fix crash in ETRs, lisp_interface.instance_id should be initialized to 0
  and not None.

o In log output print the rloc-name with the RLOC address when RLOC-probing.
  It makes it easier to identify LISP sites ETRs.

o Boldface rloc-name when printing RLOC-records.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.353
                --------------------------------------

o Release date: Thu Dec  1 11:11:36 PST 2016

o When "nat-traversal = yes" is configured and there is no "interface = 
  <device>" configured, print in debug output ("itr=yes" and "etr=yes" in the
  "lisp debug" command clause). This is flagging to user a misconfiguration.

o Allow multi-tenancy on the same interface. We already support multi-
  tenancy when each tenants resides on a different xTR interface, but know
  we can put multiple tenants on the same interface. An instance-ID for each
  tenant is assigned by the ITR for lookup and encapsulation purposes based
  on the source-EID. When the "multi-tenant-eid" is configured in multiple
  "lisp interface" command clauses (each with the same device name), a longest
  match will be done across them to find the best entry to assign the 
  instance-ID. This can work in conjunction with dynamic-EID discovery.

o Default "checkpoint-map-cache = no" in lisp.config.example.

o Updated lisp.config.example to document the same-inteface multi-tenancy
  feature. You can find it easily on the "Command Documentaiton" button on 
  the landing page.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.352
                --------------------------------------

o Release date: Wed Nov 23 10:46:45 PST 2016

o When decapsulting a packet on an ETR, we were not telling the kernel to
  forward packet. So packets would be decap'ed but not forwarded on local
  interfaces. Packets that were decap'ed for the ETR's EID, WERE being 
  forwarded. Needed to fix up iptables/ip6tables.

o Make ip6tables accept fe80::/16 so ND works when the LISP subsystem is
  enabled.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.351
                --------------------------------------

o Release date: Fri Nov 18 16:01:39 PST 2016

o When an ETR responds to a Map-Request, it doesn't use an ITR-RLOC address
  if it is a private address. It believes in this case, the ITR is behind
  a NAT. However, when private addresses are used and NATs are not used, we
  want to use a private address just like any other address. That is, use
  the private address as the destination for the Map-Reply.

o When an Map-Request is sent for an IPv6 EID, the inner header has an IPv6
  header. If a map-server isn't configured with an IPv6, we inadvertently
  use an IPv4 address in a IPv6 header. We should use the source-EID from
  the incoming ECM.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.350
                --------------------------------------

o Release date: Thu Nov 17 00:40:31 PST 2016

o Configure ip6tables for ff::/8 by syntactically selecting ff00::/8.

o Do not filter out any IPv6 address that has a substring of "::1" from
  ip6tables. This could cause received packets to such an address to not
  be delivered by kernel to application.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.349
                --------------------------------------

o Release date: Tue Nov 15 00:16:38 PST 2016

o Support geo-coordinate encoding from draft-farinacci-lisp-geo-02.txt.

o When a distinguished-name type EID is registered to the map-server you 
  cannot click on the name to get the details of the registration. Whitespaces
  were be suppressed in lisp_address.store_prefix().

o Parse geo-point and geo-prefix syntax when altitude is included.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.348
                --------------------------------------

o Release date: Tue Nov  8 12:51:24 PST 2016

o Fix periodic timer problem with sending RLOC-probe requests in an RTR.

o When RLOC-probing two ETRs sitting behind the same NAT, we are sending
  the RLOC-probes to the same address but different port numbers for each
  RLOC-probe request. This is the right thing to do. But when the RLOC-probe
  replies are returned, we store the state with the first entry we find. 
  That is because we don't find the ETR with a 2-tuple lookup of RLOC and
  translated UDP port. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.347
                --------------------------------------

o Release date: Thu Nov  3 15:10:44 PDT 2016

o Support for JSON RLOC-records. See lisp.config.example for details on
  configuration. Also see Command Documentation button on landing page.

o Allow spaces in distinguished name configuration. Allow spaces in JSON
  string configuration.

o Print "***" in red in both text output and html output when a JSON string
  does not parse correctly. That is an indication that the JSON string is
  in error.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.346
                --------------------------------------

o Release date: Sat Oct 29 09:55:34 PDT 2016

o lig cannot get a local address for Map-Request on MacOS. Fixed now. Also
  fix lisp.lisp_get_local_rloc() so it is more robust for Linux variants.

o When sending a Map-Request for a IPv6 EID, we try to send the ECM with
  an IPv6 header. But if we don't have a local IPv6 RLOC, use IPv4 to send
  the Map-Reqeust.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.345
                --------------------------------------

o Release date: Thu Oct 20 15:28:27 PDT 2016

o Do note replace comments in the lisp.config file that start with the
  string "# lispers.net".

o Instance-ID ranges not handled properly. Fixed now.

o In the lisp-ms process, do not compute negative prefixes for geo-prefixes
  or distinguished-names.

o Make sure when hashing addresses that converting a string based address
  to integer occurs before doing math (like an XOR) on the it.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.344
                --------------------------------------

o Release date: Wed Oct 19 12:14:55 PDT 2016

o Found bug inserting auth-prefixes in the DDT cache. The wrong mask-length
  was being stored. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.343
                --------------------------------------

o Release date: Mon Oct 10 16:36:42 PDT 2016

o Make sure that lig and rig work on raspberry-pi and getchip. Since their
  OSes do not support IPv6 sockets we cannot send packets to 
  ::ffff:<ipv4-addr>.

o Have lig select an interface where a packet will be outgoing so it can
  teset if its behind a NAT. When an EID is configured on a loopback
  interface, it is being selected and if not a private address, the lig
  client doesn't try some nat-traversal logic.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.342
                --------------------------------------

o Release date: Thu Oct  6 19:20:58 PDT 2016

o Fix crash when a geo-prefix is passed to lisp_address.hash_address().

o Fix some slowness in lisp-rig.py. It is doing DNS lookups it really doesn't
  need to do.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.341
                --------------------------------------

o Release date: Wed Oct  5 11:21:40 PDT 2016

o On the landing page for lig if no Map-Resolver is supplied, use "localhost".

o On the landing page for rig if no DDT-node is supplied, use "localhost".

o Do not compute DDT negative prefixes for distinguished-name or geo-prefixes.

o When encoding a geo-prefix as a target-eid in a Map-Request for instance-ID
  0, it must be encoded in a LCAF Instance-ID Type format. Otherwise, there
  will be a crash in lisp_map_request.encode().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.340
                --------------------------------------

o Release date: Tue Oct  4 14:15:33 PDT 2016

o When map-resolver and ddt-root is co-located and a lig request is done
  from behind a NAT, the Map-Reply does not get retunred from the map-resolver.
  Fixed now.

o Allow lisp-lig.pyo and lisp-rig.pyo accept a geo string.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.339
                --------------------------------------

o Release date: Fri Sep 30 14:56:08 PDT 2016

o Instance-ID size for range calculation wrong.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.338
                --------------------------------------

o Release date: Wed Sep 28 21:52:28 PDT 2016

o Allow instance-id ranges to start on any numerical boundary but the range
  must be in a power-of-2 block so we can describe them in LISP control
  messages as prefixes (with mask-lengths).

o Fix crash in lisp-rig.py.

o Allow map-resolver and ddt-root to be co-located in same node. Have the
  lisp-ms process receive Map-Referral messages back from the lisp-ddt process
  via the ephermal socket.

o Fix crash in hexlifying distinguished names.

o Allow DDT delegations work on instance-ID ranges. This will allow for 
  better scaling since each instance-ID value won't need a delegation. We
  can use entire ranges in one delegation.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.337
                --------------------------------------

o Release date: Tue Sep  6 15:52:56 PDT 2016

o Support for getchip $9 computer. Runs debian. Has built-in wifi. Very cool.
  IoT here we come. An IoT device can be a LISP xTR.

o Make script lispers.net-test-install.py exit with return code 0 and also
  capitalize "NOT" when a python module is not installed.

o Update how-to-install.txt to tell user what to do when ffi.h is not found.

o ETR crashes when tuntap can't be created on a debian based getchip device.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.336
                --------------------------------------

o Release date: Thu Aug 18 14:54:18 PDT 2016

o When displaying process information on the System Status page do not show
  the grep process. We were "egrep -v" on "egrep" and if we do "grep" we will
  filter out the output line for Debian machines.

o Fix the above problem in script "pslisp" as well.

o Add PITR support to the lisp-itr process. Just say "itr = yes", and configure
  an EID-prefix 0.0.0.0/0 in a "lisp database-mapping" command. The 
  functionality assumes something else is injecting EID-prefix advertisements
  into the underlying routing system.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.335
                --------------------------------------

o Release date: Sun Aug 14 09:11:37 PDT 2016

o Change pip-requirements.txt to include pyOpenSSL version 0.14 so a raw
  install can work.

o Set SSL context to both v2 and v3. It is needed by the new version 0.14.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.334
                --------------------------------------

o Release date: Thu Jul 28 08:50:41 PDT 2016

o Fix typo in pip-requirements.txt. Change from "pytun==0.2" to "python-
  pytun==0.2".

o Updated how-to-install.txt with a section on what to do if there are
  installation issues.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.333
                --------------------------------------

o Release date: Mon Jun 27 13:19:22 PDT 2016

o Do not print out a rloc-record-name between single quotes. They will be
  confused with distinguished-names when used as EIDs because their format 
  is within single quotes. So display the rloc-record-name between double 
  quotes.

o Fix lisp-core process traceback in lisp_show_status_command(). This occurs 
  when you click the "System Status" button on the landing page when logged
  in with a a non-superuser privledged username.

-------------------------------------------------------------------------------
 
                lispers.net Beta Release Version 0.332
                --------------------------------------

o Release date: Sat Jun 18 12:31:52 PDT 2016

o Made changes to how geo-test input parameters are accepted. In a lispers.net
  system, that may not have a map-resolver configured, we still want to do
  a geo-test if the input parameters are specified in geo-point or geo-prefix
  format. So don't allow the mapping database lookup failure (via lig) to
  error out. Check for the a geo formatted string first.

o Create an interface device called "lispers.net". It is used in the lisp-etr
  process. It is a tuntap tunnel interface. We need to use this so decapsulated
  IPv6 packets can be processed by the kernel. On docker containers and in
  gcloud VMs, a raw IPv6 seems to not be working or not supported. 

o To create tuntap devices, the "pytun" python module is used. You will need
  to "pip install pytun" if you plan to process decapsulated IPv6 packets.

o The pip-requirements.txt file now includes pytun, so to follow the
  how-to-install.txt instructions to install the lispers.net python
  dependencies via "pip install -r pip-requirements.txt". If you use the
  lispers.net docker images, you don't have install any pyhton modules.

o Script lispers.net-test-install.py has been modified to test to see if
  module pytun is installed.

-------------------------------------------------------------------------------
 
                lispers.net Beta Release Version 0.331
                --------------------------------------

o Release date: Wed Jun 15 10:04:14 PDT 2016

o Fix lisp_itr_build_pcap_filter() so when there is no static EIDs and only
  dynamic-EIDs configured, we can hear packets from dynamic EIDs. This happens
  in the lisp-itr process. Found this while testing for support of draft-
  farinacci-lisp-eid-anonymity-00.

o When sending an ECM message for an IPv6 Map-Request, the outer source
  address is an IPv6 address. If an IPv6 RLOC is not configured, and we
  are operating over an IPv4 core network, set the inner source address
  to the inner destination address.

o When a IPv6 Map-Request is sent via an IPv4 ECM message to the mapping
  system, make sure the Map-Reply returns as an IPv4 packet.

o Since RTRs don't have default map-cache entries like ITRs do when they
  are doing NAT-traversal, the RTR has to make the Map-Request UDP source
  port and the ECM UDP source port the same. And the RTR needs to listen
  on the ECM port so Map-Replies can be sent through NATs and translated
  accordingly.

o Fix RLOC-probe replies sourced by an RTR. They need to include the target
  EID from the Map-Request in the Map-Reply.

-------------------------------------------------------------------------------
 
                lispers.net Beta Release Version 0.330
                --------------------------------------

o Release date: Thu May 26 12:37:43 PDT 2016

o Put hyperlinks over geo-prefixes that are displayed on any web-page. Then
  when you click you will see a Google Map of the geo-prefix/circle drawn
  on a geographical map.

-------------------------------------------------------------------------------
 
                lispers.net Beta Release Version 0.329
                --------------------------------------

o Release date: Mon May 23 20:29:29 PDT 2016

o Fix bug where we could possibly over index an array if the action field in
  an EID-record is bogus.

o When count is not specified when executing lig from the landing page, use
  a count of 3.

o When lig is executed from the landing page and count is not specified but
  "no-nat" is, it causes the lisp-lig.pyo process to crash. Now fixed.

o Support EID lookups for the geo-test facility on the landing page. When
  geo-points and geo-prefixes are not specified, the tool assumes an EID
  lookup. The tool will do an EID lookup and search for geo-points or
  geo-prefixes in the RLOC list to display information about the geo location.
  For example if EID [1]'a-house-in-san-jose' is registered to the mapping
  system with geo-point 37-11-41-N-121-49-0-W and EID-prefix [1]'san-jose' is 
  registered to the mapping system with geo-prefix 37-11-41-N-121-49-0-W/100,
  and the user types "[1]'a-house-in-san-jose'" in the first input field
  (the geo-point input field) and "[1]'san-jose'" in the second input field
  (the geo-prefix input field), infomration about the relationship between
  the geo-point and geo-prefix will be displayed. So you can see answer the
  question "is this house in San Jose".

o Add a pointer hover over the input fields of the geo-test so user can be
  helped with the format of addresses and geo-coordinates to use.
 
-------------------------------------------------------------------------------
 
                lispers.net Beta Release Version 0.328
                --------------------------------------

o Release date: Thu May 19 16:11:17 PDT 2016

o Added IANA approved 2001:5::/32 block to implementation. Usage for such
  an address will be determined later.

o Add geo-prefixes to EID-records and RLOC-records. To get closer to supporting
  the use-cases in draft-farinacci-lisp-geo-00.txt. There is a new format
  for geo coordinates. We had a space character between the latitude and
  longitude, now it is a dash as in "37-11-41-N-121-49-0-W". This syntax
  is a "geo-point". A "geo-prefix" is encoded as "37-11-41-N-121-49-0-W/100"
  where 100 is a radius for a circle drawn around the geo-point in kilometers.
  Press the "Command Documentation" button on landing page for more details.

o You will need to install a new python dependency. You can do so by simply
  doing a "pip install geopy". If you laod the newest ubuntu docker image
  from dropbox, you don't have to do this. That is if you are running
  lispers.net code in a docker container.

o Add a "geo-test" section to the landing page, so you can get information
  about geo-points and geo-prefixes. In the future, you can type in EIDs,
  they will be looked up in the mapping database, get their GPS information
  returned so you can answer the question "is Dino in San Jose".

o Do not print "[<iid>]no-address/0" when matching an instance-ID prefix.
  This is a bit misleading since there is really no error. Just print 
  "[<iid>]". You will find this often on the map-server when "accept-more-
  specifics" is configured for a LISP site.

-------------------------------------------------------------------------------
 
                lispers.net Beta Release Version 0.327
                --------------------------------------

o Release date: Wed Mar 30 16:45:07 PDT 2016

o Fixed some typos in lisp.config.example.

o Make encryption-key in JSON IPC message the same format as in the ETR
  decryption-key format.

o Found bug where if map-cache entry was written to the data-plane but the
  encryption-key was derived later, a write was not done to the data-plane.

-------------------------------------------------------------------------------
 
                lispers.net Beta Release Version 0.326
                --------------------------------------

o Release date: Tue Mar 22 10:50:50 PDT 2016

o Make the lisp-etr process write to the named socket "lisp-ipc-map-cache"
  so a data-plane can get a decryption-key. This is the final step to get
  security working in an alternate data-plane.

-------------------------------------------------------------------------------
 
                lispers.net Beta Release Version 0.325
                --------------------------------------

o Release date: Sun Feb 21 16:40:54 PST 2016

o Fix traceback in lisp_rloc.process_rloc_probe_reply().

o Use an XOR for the local and remote public keys for the nonce in computing
  the encryption key and integrity-check key from the DH shared-secret key.
  This is a more robust fix when map-requests and map-replies are lost during
  RLOC probing when exchanging keys.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.324
                --------------------------------------

o Release date: Fri Feb 19 17:12:00 PST 2016

o Put encryption key negotiated by the lispers.net control-plane in IPC 
  message for data-plane to use for encryption.

o We now support poly1305 packet ICV authentication. You can use poly1305
  with either AES or CHACHA20 encryption ciphers. The default is using
  chacha20/poly1305. If you want to change it, you can use any of the 4
  combinations by changing the environment variables in the RUN-LISP startup
  script. This release still uses draft-ietf-lisp-crypto-02 and the default
  cipher suite is:

  Cipher Suite 5:
    Diffie-Hellman Group: 256-bit Elliptic-Curve 25519 [CURVE25519]
    Encryption:           Chacha20-Poly1305 [CHACHA-POLY]
    Integrity:            HMAC-SHA1-96 [RFC2404]

  But uses Poly1305 for Integrity by default. A future release will draft-
  ietf-lisp-crypto-03 where the Cipher Suites are renumbered when we can
  find AEAD libraries for AES. This is kinda low priority because chacha20/
  poly1305 with ECDH curve25519 is fast and state of the art in cryptography.

o Found and fixed a race condition where the wrong encryption and ICV keys
  were being computed when an ETR computed based on a nonce that did not
  get back to an ITR when a lost Map-Reply occurred. The ITR was computing
  based on the latest nonce sent and the ETR was computing based on the
  first Map-Request received during a new-keying or rekeying event.

o This code has a new normalizing function lisp_hex_string() for 64-bit long
  integers. When converting such a number to hex using hex(), sometimes a 
  trailing "L" is appended. That happens when the high-order bit is sent.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.323
                --------------------------------------

o Release date: Tue Feb  2 12:02:22 PST 2016

o Disable pcap'ing MAC addresses when "ipc-map-cache = yes" is configured.
  Since we have another data-plane running, we don't need to run the
  lisp_itr_data_plane() thread in the lisp-itr process. All punts for 
  Map-Requesting and EID-discovery are punted to the lispers.net-itr named 
  socket.

o Change punt API to include both source-eid and dest-eid so we can use one
  mechanism for source-EID discovery and triggering Map-Requests for dest-eid.

o Add "dynamic-eid-timeout = <secs>" so on a per interface basis, when an
  EID is discovered, a configured inactivity timeout value can be configured.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.322
                --------------------------------------

o Release date: Thu Jan 28 11:24:53 PST 2016

o When registering an (S,G) entry, use an IPv6 locator in an RLE entry when 
  available. The core network may be running IPv6 multicast. To do this
  the "rle-address" is a new command parameter to the "lisp group-mapping"
  command clause.

o Remove duplicate RLE entries from a merged registration. It turns out if
  an xTR reboots, it can come up with a new xTR-ID but register the same
  RLE address. That could put a duplicate entry in the merged list causing
  a replication to be duplicated to the same place. Fixed now.

o Add a "no-nat" button to lig so when private addresses are used for lig
  and there may be no nat-traversal in the path, we can get Map-Replies back.
  This could be typical in a container environment.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.321
                --------------------------------------

o Release date: Fri Jan 22 16:57:44 PST 2016

o Protect the lisp-itr process from getting an incorrectly formated MAC-address
  from a punt IPC message.

o Bind to the punt socket in lisp-itr. Otherwise, select.select() will not
  put it on the ready list.

o In script ./STOP-LISP, remove the lispers.net-itr named socket file.

o Put the "Enter EID for Map-Cache ..." line in the ITR and RTR displays
  after the heading "... Map-Cache:".

o Do not byte swap MAC EIDs when received in EID-records. But do swap them
  when receiving data packets.

o Use default instance-id for MAC broadcast-EID lookups to the mapping 
  database. That would be the first instance-id configured in a "lisp database-
  mapping" command clause.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.320
                --------------------------------------

o Release date: Mon Jan 18 15:39:24 PST 2016

o lisp_interface_command() is accepting a net device that doesn't exist on
  the system. And then tries to socket bind to it. This causes a traceback
  in the lisp-itr process. We need to accept interfaces that may not exist
  in the system due to some specific platform requirements. But we will 
  test before binding to not crash the system.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.319
                --------------------------------------

o Release date: Wed Jan 13 17:53:33 PST 2016

o Update dates in copyright text.

o Add punt interface to allow foreign data-planes to punt the discovery of
  new EIDs to the lispers.net control-plane. The punt interface is supported
  by the lisp-itr process and communicates to the lisp-etr process just like
  when a new dynamic-EID is discoverd using the lispers.net data-plane.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.318
                --------------------------------------

o Release date: Mon Jan 11 18:52:57 PST 2016

o Fix crash when processing a Map-Request in the lisp-etr process.

o When the lig and rig buttons are pressed on the landing page and no
  parameters are given, return an error message indicating so.

o Make web interface buttons transparent and not gray. New changes to
  Chrome are defaulting them to gray and making my art look like crap. ;-)

o We were having a RLOC memory replacement problem in the map-cache. So when
  an RLOC-probe-reply was received for one RLOC, it would wipe out the nonce
  (as well as the current state of the RLOC) sent to another RLOC. Thereby, 
  not accepting the RLOC-probe from the second RLOC. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.317
                --------------------------------------

o Release date: Thu Dec 31 11:43:21 PST 2015

o Fix bug where the lisp-itr process gets a traceback trying to encode
  a "None" cipher-suite value in a Map-Request. This only occurs when the
  "curve25519" python module is not installed on the local system.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.316
                --------------------------------------

o Release date: Tue Dec 15 13:23:11 PST 2015

o Fix a bug where multiple discovered dynamic-EIDs were not all put in Map-
  Register messages.

o Have the LISP subsystem startup on Debian like it does for Ubuntu and
  Raspbian. 

o With this release the lispers.net code can run in a docker container running
  Debian Jessie.

o Fix permissions for all files in the lispers.net directory. That is so
  execute permission is only for RESTART-LISP. RUN-LISP, STOP-LISP, and pslisp.
  Also do not make log directories execute permission.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.315
                --------------------------------------

o Release date: Fri Dec 11 11:02:08 PST 2015

o Change format of IPC record when using "lisp xtr-parameters" command
  "ipc-map-cache". Use JSON format now.

o We can now write both unicast and multicast map-cache entries to the 
  named socket. Both RLOC entries for the unicast case and RLE entries for
  the multicast case contain security-keys. So we can do lisp-crypto like
  functions in other data-planes.

o When an xTR is configured to do a L2-overlay, join (send a Map-Register) 
  MAC-based multicast entry (0000-0000-0000/0, ffff-ffff-ffff/48) with
  an RLE RLOC record.

o Fix build procedures. Release 0.314 had a source obfuscation problem. Don't
  use release 0.314. Fixed now.

o In the lisp-itr process, each minute when we start checking for map-cache
  entry expiration send a Map-Request for (0000-0000-0000/0, 
  ffff-ffff-ffff/48) to get a new replication-list. Do this only when L2-
  overlay support is configured.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.314
                --------------------------------------

o Release date: Mon Nov 30 16:25:18 PST 2015

o Have RESTART-LISP cd to dirname of command that invokes RESTART-LISP so
  LISP can be started from a "docker exec" command.

o Introduce a new "lisp xtr-parameters" sub-command called "ipc-map-cache".
  When this is set to "yes", the LISP subsystem will write map-cache entries,
  in the same format as an checkpoint file entry, to a named socket called
  "lisp-ipc-map-cache". The reason for this is so the lispers.net LISP control-
  plane can work with other data-planes.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.313
                --------------------------------------

o Release date: Mon Nov 23 17:11:07 PST 2015

o Even if an RLOC is a private-address, do not look for a translated address
  if "nat-traversal = no" is configured.

o Make sure that the same number of commands for the "lisp xtr-parameters"
  command clause is defined in all of lisp-itr, lisp-etr, and lisp-rtr. I
  introduced a bug when adding the "checkpoint-map-cach = yes | no" command.

o This release has been tested with docker containers. I have docker images
  that are ready to run with installed lispers.net code on ubuntu and centos.

o This image tested two xTRs pinging each other with Chacha20 encryption
  where the 2 xTRs and a MRMS were each in 3 docker containers running
  on MacOS. One xTR and the MRMS was running ubuntu and the other xTR was
  running on CentOS.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.312
                --------------------------------------

o Release date: Tue Nov 10 10:32:32 PST 2015

o Make checkpointing the map-cache work with native-forward entries.

o And make sure mc.best_paths are built for checkpoint map-cache entries.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.311
                --------------------------------------

o Release date: Tue Nov 10 09:06:47 PST 2015

o Print out lispers.net version installed even when no processes are running.
  This is a change to the is-lisp-running.pyo script that is called from
  script "pslisp":

  dino-macbook-> pslisp
  No lispers.net code running, release 0.310 installed

o Create a checkpoint restart mechanism for the map-cache. Every 1 minute
  when the map-cache is walked to test for timeout, the lisp-itr and lisp-rtr
  process will write entries to a lisp.checkpoint file. Upon reload, the
  entries in the file are reloaded into the map-cache. This feature is on
  by default and can be disabled with the "lisp xtr-parameters" sub-command
  "checkpoint-map-cache = no".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.310
                --------------------------------------

o Release date: Wed Oct 14 08:45:38 PDT 2015

o Add a convience option to app lisp-onoff.pyo. If it is executed in a
  lispers.net installed directory, use "localhost" as the system and "root"
  as the username with no password. This way you can get a quick look at the
  boolean configuration variables. Useful for testing.

o Have ./STOP-LISP not require a 'sudo' in front if it to stop running LISP
  processes. Have the script do it internally.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.309
                --------------------------------------

o Release date: Tue Oct  6 11:43:48 PDT 2015

o When locally generated packets are sent, the destination MAC address may be
  the default router that is configured on a lispers.net device. Allow us to
  capture the device the packet was pcap'ed on so we can do multi-tenacy when
  sourcing pings from different addresses that are assigned to different local
  interfaces.

o Support an xTR to use different mapping databases for multiple tenants. So
  if you configure two different EID-prefixes in a database-mapping command,
  and they are configured with different instance-IDs, each of the database-
  mapping entries can map-register and send map-request to separate mapping
  database systems. This was actually supported but the capability did not work
  for locally generated packets (until bullet 1 fixed the problem).

o On an ITR that sits behind a NAT, when it is configured for multiple tenants,
  create the default map-cache entries for each instance-IDs.

o What I have working is an xTR behind a NAT, that is configured with multiple
  instance-IDs/EID-prefixes, configured for different mapping database systems.
  Each mapping database system uses the same RTR. So each map-server are 
  advertising this RTR in their Info-Reply messages. So this xTR can talk to 
  one xTR that regsiters to one mapping system at the same time as talking to 
  another xTR that registers to another mapping system. All when running 
  behind a NAT.

o On an RTR, you can use "lisp database-mapping" commands (see lisp.config.
  example for details), with the "mr-name" subcommand to use multiple 
  mapping database systems. The 2-tuple <iid><source-eid> is used to used
  to select a map-resolver from one mapping system versus another.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.308
                --------------------------------------

o Release date: Thu Sep 17 17:40:27 PDT 2015

o Allow any type of interface device name to be selected as the default
  RLOC interface. This allows new operating systems, with differnet naming
  conventions for interface names to be supported. Case in point, the Mininet
  virtualization manager.

o Add chacha20 cipher support to data-plane-security. That means we can 
  support cipher suite 5, which uses key-exchange ECDH curve25519 with 
  cipher chacha20. This is the state of the art in cryptography. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.307
                --------------------------------------

o Release date: Mon Aug 31 14:15:06 PDT 2015

o Fix pip-requirements.txt syntax error.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.306
                --------------------------------------

o Release date: Tue Aug 25 16:34:20 PDT 2015

o Support Elliptic Curve 25519 for Diffie Hellman key exchange. You will need
  to install the curve25519 library. If your system does not have it installed,
  Cipher Suite 1 will be used instead of Ciper Suite 4. This curve can allow
  small keys with very large prime numbers. So it is fast and very hard to
  guess/brute force private keys.

o If you want to turn off ECDH (I don't know why you would want to, shorter
  keys, faster exchange, generally accepted), you can comment out the
  environment variable LISP_ECDH_25519 in the RUN-LISP startup script and
  Cipher Suite 1 will be used.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.305
                --------------------------------------

o Release date: Thu Aug 13 17:55:21 PDT 2015

o Support L2-overlays. That means we can do dynamic discovery of a MAC 
  address just like we can for the IP-mobility use-case when IP addresses are 
  dynamic-EIDs. Packets are encapsulated in LISP using destination port
  8472 (L2-LISP Internet Draft).

-------------------------------------------------------------------------------


                lispers.net Beta Release Version 0.304
                --------------------------------------

o Release date: Thu Aug  6 21:18:49 PDT 2015

o Have host routes get added for Info-Requests send to port 4342 to the 
  map-server or else we'll get wrong global RLOCs registered with the
  mapping database.

o Print log message when host-routes are added or removed.

o Check to see that 3-tuple of {RLOC, eid, group} are in values in dictionary 
  array before removing them. This fixed a crash I found on g-rtr1.lispers.net.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.303
                --------------------------------------

o Release date: Tue Aug  4 18:16:57 PDT 2015

o Have only one process add host routes for sending Info-Requests in a egress
  multi-homing scenario. Since the lisp-etr process is the only process that
  sends Info-Request to port 4341 to the RTR, it should be the one to install
  the temporal host route.

o If there is a host route selected for forwarding to an RTR/RLOC, and it
  is time to send an Info-Request, if the next-hop is not pointing to where
  you need to send the Info-Request, then remove the data route, install
  the temporal next-hop, send the Info-Request, and reinstall the data route.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.302
                --------------------------------------

o Release date: Mon Aug  3 19:43:01 PDT 2015

o On an RTR there seems to be some residue port information in lisp_packet()
  which causes a reencapsulation to use the wrong translated port information
  when encapsulating to an ETR behind a NAT. Bug found while doing the SOHO
  demo at IETF.

o Fix API routine lispapi.delete_ms_site() to accept site-name only which
  removes the entire configuration of the site including all allowed-prefixes
  previously added.

o Support multiple egress interfaces. That means a lispers.net xTR can use
  multiple outgoing interfaces to reach one or more RLOCs. RLOC-probes will
  be sent for each RLOC out each egress interface. We will track the state
  of the RLOC out each egress interface. And, for now, when an RLOC is 
  selected at forwarding time, we encapsulate packets out the interface with 
  the smallest rtt that was calculated by RLOC-probing. The cost of the 
  feature is a kernel host route for each RLOC. The way to enable this 
  behavior is to configure multiple next-hops for the default route in the 
  kernel using "ip route append default via <next-hop>" commands. Support is 
  provided for next-hops on different interfaces or different next-hops on the
  same multi-access interface. When this feature is enabled in an xTR behind a
  NAT, only the host routes for the RTRs are added to the kernel. Which is 
  typically 1 or 2 and maybe at most 4. So the cost is low for stub devices 
  for the masses. On an RTR that is multi-homed, that is a different story.

o Check a platform specific flag to know when a map-cache entry has been
  active. Checking the flag, also clears it so the next time we check we
  know if there was packet activity during the check interval.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.301
                --------------------------------------

o Release date: Wed Jul 15 16:16:33 PDT 2015

o Add new API routines {enable,disable}_xtr_nonce_echoing(), {enable,disable}_
  xtr_data_plane_logging(), and {enable,disable}_xtr_flow_logging().

o Add new application called lisp-onoff.pyo that allows a one-line type-in
  to enable or disable the "yes/no" values in "lisp enable", "lisp debug",
  and "lisp xtr-parameters" sub-commands. Type in "python -O lisp-onoff.py
  help" for command line requirements.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.300
                --------------------------------------

o Release date: Thu Jul  9 22:02:32 PDT 2015

o When changing RLOCs due to an xTR that moves from one NAT to another, 
  make sure we remove the old RLOC from the lisp_rloc_probe_list[].

o Indent logging for processing for an given RLOC-record.

o When sending an RLOC-probe reply, set P-bit in RLOC record to 1 when
  any RLOC is either a local RLOC address, or one found in the lisp
  local database-entries as a translated RLOC.

o When trying to suppress extra RLOC-probes to the same RLOC address, take
  in consideration that two entries with the same RLOC address (but different
  translated-ports) can go do different ETRs behind the same NAT. This was
  causing RLOCs to go unreachable because we were suppressing RLOC-probes.

o Copy stats and last state-change timestamp when replacing data structures
  when an RLOC-probe reply is proposed. These displayable items need to
  be retained.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.299
                --------------------------------------

o Release date: Mon Jul  6 15:32:26 PDT 2015

o Add performance and convergence improvements for fast moving of an xTR
  behind different NATs.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.298
                --------------------------------------

o Release date: Thu Jul  2 14:05:37 PDT 2015

o Fix crash in lisp-lig when processing a Map-Reply. Introduced when the
  lisp-crypto feature was added.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.297
                --------------------------------------

o Release date: Wed Jul  1 16:30:10 PDT 2015

o Fix bug found in lisp_get_local_addresses() that causes lisp-lig.pyo to
  crash.

o Allow behind-NAT multi-homing in an xTR. That means we can send Info-Requests
  out each interface that is configured in an "lisp database-mapping" rloc
  clause with keyword "interface = <device>". The Info-Requests sent to the
  RTR tells the RTR that the xTR is multi-homed so the RTR can store 
  multiple NAT-Traversal entries (each with name <hoastname>-<device>) as well 
  as multiple RLOC records for the map-cache entry that it retrieves from
  the mapping system. This allows support of an xTR with multiple interfaces 
  that go to multiple NATs or the same NAT. The RTR will load-split packets 
  across both translated addresses based on 5-tuple hashing of the EID header 
  and the use of priorities when active/backup is desired. For outgoing 
  packet load-splitting from the xTR, a default route with multiple next hops 
  is required. Your ECMP mileage may vary depending on your distro used.
  You configure multiple static default routes via the following commands:

      ip route add default via <next-hop> dev eth0
      ip route append default via <another-or-same-next-hop> dev eth1

  The first route (out eth0) is most likely provided by DHCP but if DHCP is 
  also used on eth1, the second default route may not be added, so you must
  do the "ip route append". Work is in progress for outgoing load-splitting.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.296
                --------------------------------------

o Release date: Fri Jun 26 15:51:00 PDT 2015

o Boldface "DF-bit" in log message that drops packets that violate MTU when
  DF-bit is set in packet.

o Put a check in at iptables configuration time (in lisp-itr process), to 
  check if we need to put in a iptables rule workaround for the virtio TCP 
  checksum corruption problem for KVM guest OSes. Check environmnt variable 
  LISP_VIRTIO_BUG. The env variable is in the RUN-LISP startup script (on by 
  default for now).

o In remove-lisp-iptables.py, append " 2> /dev/null" so iptables commands are 
  quiet.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.295
                --------------------------------------

o Release date: Fri Jun 19 15:18:52 PDT 2015

o Allow an ETR behind a NAT to decrypt and decapsulate a packet when an RTR
  negotiates lisp-crypto with the ETR.

o Put in "RLOC action" column "encap-crypto" when the RLOC has been negotiate
  lisp-crypto.

o RTRs need to send RLOC-probes to ETRs that sit behind NATs FROM port 4341
  or else they cannot negotiate cyrpto keys. To get the RLOC-probes through
  the NATs, the RTR needs to encapsulate the RLOC-probes from port 4341 to
  the translated port. The ETR must decapsulate and then process the control
  message.

o When searching logs, now place keyword found in the color of blue. We had
  used red but now since they are used for RLOC addresses, we don't want to
  blend in.

o Don't update state-change uptime when an RLOC-probe reply is received and
  we are already in up state.

o When doing lisp-crypto on an RTR, it needs to store keys in both an encap
  and decap data structure since the lisp-rtr process does both encap and
  decap versus the lisp-itr process that does just encap and the lisp-etr
  process that just does decap. In the later cases, they can have one data
  structure from the lisp.py library.

o With this release we are changing the RLOC-probe interval from 60 to 10
  seconds.

o Found bug where env variable LISP_ADDR_SELECT is being tested for None 
  where RUN-LISP always sets it to $2 (meaning it has a value or null string).
  This results in an symptom where an EID is assigned as an RLOC. Fixed now.

o Remove data structures when "data-plane-security = no" is set and we were
  doing encyrpt-n-encap. This negotiates down to plaintext.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.294
                --------------------------------------

o Release date: Thu Jun 11 22:34:35 PDT 2015

o On "decap" log message on an ETR or RTR print in boldface "decap-vxlan" if
  packet was received with destination port 4789.

o Fix bug while processing API request from lispapi.get_site_cache_entry().

o Trigger an RLOC-probe when RTRs are added in ITRs that sit behind NATs.
  This is so we can get reachability information quickly and can do key
  exchange when data-plane-security is enabled.

o On an RTR if a decapsulated packet was encrypted, make sure the K-bits are
  cleared for the re-encapsulation. Found a bug where residue existed and 
  corrupted packets were sent to the ETR.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.293
                --------------------------------------

o Release date: Mon Jun  8 20:47:32 PDT 2015

o Fix pcap filter problem with dynamic-EID-prefixes. Causing pcap to crash.

o Put back in "-j DROP". Experiment done. We have to keep it in since
  there isn't general support for "not" in iptables rules across all
  platforms. We have to use 'accept' command logic with an implied
  DROP at the end. So an xTR cannot transit packets. The user has to
  add their own iptables rules for which source-prefix/dest-prefix
  pairs the xTR will be transit for. So we to default to not allowing
  IP routing services with a lispers.net xTR running.

o For iptables rules do not allow ACCEPT pairs for dynamic-EID prefixes.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.292
                --------------------------------------

o Release date: Fri Jun  5 15:11:25 PDT 2015

o Fix RLOC state loss problem when RLOC-probing and data-plane-security are
  running concurrently.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.291
                --------------------------------------

o Release date: Wed Jun  3 14:52:03 PDT 2015

o Support for draft-ietf-lisp-crypto-01. LISP can now negotiate various
  crypto Ciper-Suites as well as using IVs and ICVs in data packets. That 
  means there is support for Authenticated Encryption and packet Integrity
  Checks. To enable this is the same as you did in the past, configure under
  the "lisp xtr-parameters" command clause "data-plane-security = yes".

o This version will not interoperate with older versions that implemented
  draft-ietf-lisp-crypto-00.

o Fix an RLOC-probe problem where multiple entries were being stored for the
  same 3-tuple.

o Removed "-j DROP" as last ITR rule when the lisp-itr process starts up. This
  was breaking kernel routing of transit packets. This is likely to be
  temporary.

o Have "pslisp" display the lispers.net release version installed.

o Do not put dynamic-EID-prefixes in the pcap "... (dst net ...)" clause
  because EIDs could be report and we want the lisp-itr process to get packets
  destined to such EID-prefixes.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.290
                --------------------------------------

o Release date: Mon May 18 10:26:07 PDT 2015

o Add the following function calls enable_xtr_rloc_probing() and disable_xtr_
  rloc_probing() to lispapi.py. So an API user can enable or disable 
  RLOC-probing on an ITR or RTR.

o lisp_mapping.do_rloc_sets_match() was not comparing locator-sets properly.

o Make sure if an RTR puts a private address in an RLOC list (because it sits
  behind a NAT), that an ITR that gets an RLOC-probe reply back can get the
  global/public address from the source address of the Map-Reply.

o When an RLOC-probe reply is received, make sure the RLOCs for all EID 
  entries that use the RLOC has RLOC-probe state updated.

o Was processing IGMPv3 (*,G) entries but not sending Map-Register for them.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.289
                --------------------------------------

o Release date: Fri May  1 16:07:32 PDT 2015

o Add code to remove-lisp-iptables.py to remove dynamic-EID state that was
  added to kernel routing table.

o Do not use a vendor specific mechanism to add interface static routes. Use
  a kernel method.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.288
                --------------------------------------

o Release date: Fri Apr 24 12:04:46 PDT 2015

o Do not allocate an address for a next-hop for a hardware FIB route that
  is assigned as a local address. It will cause the hardware to punt packets.

o When programming an interface route for a dynamic-EID, use the vendor's 
  CLI since hardware is dependent on how the type of route is added to the
  kernel and to the hardware FIB.

o Tell hardware to do uRPF check when dynamic-EIDs are configured.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.287
                --------------------------------------

o Release date: Tue Apr 21 18:21:12 PDT 2015

o When programming hardware and when the LISP subsystem exits, remove all
  programmed routes and arp entries for vlan 4094.

o Test for arm7l as a newer version of lisp_is_raspbian().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.286
                --------------------------------------

o Release date: Mon Apr 20 09:05:04 PDT 2015

o Program dynamic-EID-prefixes in kernel with next-hop of a loopback interface.
  This is so we can discover more-specifics that match it by having the
  hardware uRPF fail to punt packets.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.285
                --------------------------------------

o Release date: Tue Apr 14 14:34:01 PDT 2015

o Return a private address RLOC-set when the global RLOCs are different but
  site-ids are the same. This handles the force-nat-proxy-reply configuration
  released in 0.284.

o When the "clear cache" button on the ITR or RTR display is pressed, remove
  routes from kernel when "program-hardware = yes" is configured.

o Print "RTR" in lig output when a RLOC in an RLOC-set has the signature of an
  RTR (priority 254 and multicast-priority of 255).

o Make the length of the URL string input field long enough to display the
  entire URL when supplied by via a dropbox URL from lispers.net.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.284
                --------------------------------------

o Release date: Mon Apr 13 13:54:47 PDT 2015

o Create 'pslisp' in current directory to invoke is-lisp-running.pyo. Easy
  shortcut for users.

o There are corner race conditions where debug logging is disabled at startup
  when it is configured "yes".

o Allow a user of the lispers.net code to use its own SSL certificate and
  private key for the embedded lispers.net web-server. One creates a 
  certificate and a private key and inserts it into file lisp-cert.pem. When
  the system starts up and there is no lisp-cert.pem file, a copy is made
  from lisp-cert.pem.default.

o If the source-EID and target-EID of a Map-Request are behind the same NAT,
  that is, have the same global RLOC address, then have the map-server 
  return just the private addresses in the Map-Reply so the xTRs have shortest
  RLOC paths between each other and don't have to hair-pin through the 
  NAT/firewall device. This happens wehn the the map-server is configured
  to do "force-nat-proxy-reply = yes".

o Fix bug where we should be able to use the same map-server with different
  ms-names so we can use different "lisp map-server" parameters.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.283
                --------------------------------------

o Release date: Thu Apr  9 11:07:46 PDT 2015

o Created and released 'is-lisp-running.pyo' which will display if lispers.net
  LISP processes are running.

o Unit testing fixes for VXLAN hardware programming.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.282
                --------------------------------------

o Release date: Tue Apr  7 13:36:47 PDT 2015

o Fix bug searching for RTR in registered RLOC-set in Map-server. Introduced
  in last release.

o When creating an RLOC-set for each default map-cache entry (one for each IPv4
  unicast and multicast and one for each IPv4 unciast and multicast), do not
  use same pointers or else when you use one, all counters increment. Do
  copy.deepcopy() for a distinct set.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.281
                --------------------------------------

o Release date: Mon Apr  6 20:29:15 PDT 2015

o When using proxy-replying with a partial RLOC-set, after building an RTR
  list locally without private addresses, do a Map-Request source address
  against the new list so an RTR does not get its own address returned from
  a Map-Server. This is a nasty corner case when an RTR is behind a NAT.

o Do not iptables DROP multicast packets. Add in ACCEPT lines for 224.0.0.0/4
  and ff::/8.

o Add environment variable LISP_RTR_BEHIND_NAT so an MS does not return a
  private address for an RTR to an ITR and for an ITR behind a NAT, does
  not install a private address of an RTR in the RLOC set (when it adds
  default routes to the rtr-list). Keep this environment variable set.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.280
                --------------------------------------

o Release date: Mon Apr  6 15:18:40 PDT 2015

o Add 127.0.0.1 and ::1 to the list of iptables rules to accept packets on.
  This is so the web interface locally can work when "https://localhost:8080/
  lisp" is typed.

o Put in some ECDH algorithms for some initial testing. Not available yet as
  a feature.

o Fix crash in lisp_map_server_comamnd() when processing a "lisp map-server" 
  command when there is no "address" or "dns-name" supplied by user.

o Fix dups when an EID host pings the ITR's RLOC from inside of a LISP site.
  Introduced bug with last iptables change.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.279
                --------------------------------------

o Release date: Sat Apr  4 09:08:42 PDT 2015

o Put a bunch of syntax checks into lispapi.add_policy().

o Allow an ITR to source packets from one of its EIDs. So it can get its
  locally originated packets to be encapsulated to remote LISP sites. There
  is no longer the need to use environment variable LISP_SOURCE_FROM_ITR. Note
  a combination of iptables and pcap filter logic has changed.
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.278
                --------------------------------------

o Release date: Wed Apr  1 20:56:15 PDT 2015

o Fix crash in supporting multiple nesting levels of commands when generated
  by API requests.

o Fix crash where lispapi.get_map_cache() crashes lisp-rtr process.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.277
                --------------------------------------

o Release date: Tue Mar 31 23:27:22 PDT 2015

o Make sure that an rloc-name is registered with an RLE entry so we can do
  multicast to multiple xTRs behind a single NAT. We can now have two xTRs
  behind a single NAT register an (S,G) and they each get a copy of the
  (S,G) packet from the RTR that can pierce the NAT.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.276
                --------------------------------------

o Release date: Tue Mar 31 11:12:09 PDT 2015

o When unicast default routes are added when a NAT-traversed RTR-list are
  installed as next-hops, create map-cache entries for (0.0.0.0/0, 224.0.0.0/4)
  and (0::/0, ff::/8). 

o Fix traceback when an IP address is provided for a "lisp policy" rather
  than a prefix.

o Fix traceback when API adds multiple "allowed-prefix" clauses for a LISP
  site.

o When sending Info-Requests the hostname string that is included as AFI=17
  is not null-terminated. Fixed now.

o Support for multiple xTRs that reside behind a single NAT device. The
  mechanism is an implementation solution (versus a protocol solution). 
  The Info-Requests a xTR sends to an RTR already have AFI=17 distinguished
  name included. The name is the hostname of the xTR. Now the xTR will
  automatically include the hostname as an RLOC-name when registering the
  global-RLOC to the mapping system. Now the RTR can keep separate state
  for xTRs that use the same global RLOCs (behind the same NAT). The hostname
  RLOC-name is included when the "interface" parameter of the "rloc" sub-
  command is used for the "lisp database-mapping" command.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.275
                --------------------------------------

o Release date: Fri Mar 27 16:35:24 PDT 2015

o Fix lisp-lig to not crash when the EID typed in is something like "[<iid>]"
  where the instance-id is specified but the EID address is not.

o When a map-cache entry is retrieved via the API, for an RLOC record, return
  two new elements of a dictionary array keyed by "last-rloc-probe-reply"
  and "rloc-probe-rtt". If RLOC-probing is not enabled or a RLOC-probe reply
  was never received, the elements in the dictionary array are not present.

o Add new APIs lispapi.enable_xtr_nat_traversal(), lispapi.disable_xtr_nat_
  traversal(), and lispapi.get_xtr_parameters().

o Add new API lispapi.build_rloc_record() that appends to an array. You can
  pass this as the rloc-set parameter to lispapi.add_itr_map_cache() or
  lispapi.add_etr_database_mapping(). This allows priorities and weights
  to be specified with an RLOC address.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.274
                --------------------------------------

o Release date: Fri Mar 20 14:06:41 PDT 2015

o Create hidden "program-hardware = yes | no" command of the "lisp
  "xtr-parameters" command clause. This is an attempt to program a VXLAN
  hardware forwarder. First platform supported is Arista/EOS.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.273
                --------------------------------------

o Release date: Sun Mar 15 13:07:29 PDT 2015

o Have implied drop from policy check return a negative Map-Reply with action
  "policy-denied".

o Make sure we don't match or set variables with value None or "" through
  API to back-end. It will cause a bogus configuration command clause for
  "lisp policy".

o lispapi.get_system() regression. True for any "api/data" calls. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.272
                --------------------------------------

o Release date: Thu Mar 12 15:19:43 PDT 2015

o Add "lisp policy" commands and support to the LISP subsystem. We can now
  configure various match and set policy statements. The first application
  will be Map-Server proxy-replying. Any Map-Requst that comes to a map-server
  that is configured to proxy-reply, will test various Map-Request parameters
  against any configured "lisp policy" statements. If a match occurs, the
  set actions will be performed. Click the "Command Documentation" button
  for details and description for the "lisp policy" command.

o Add APIs lispapi.add_policy() and lispapi.delete_policy() to reflect the
  new LISP policy support feature.

o Add "policy-name = <policy-name>" to the "allowed-prefix" subclause of
  the "lisp site" command. This is used when the Map-Server is proxy-reply
  for an site's EID-prefix. The policy is applied and if any match condition
  is met, the set actions are performed. That is, a Map-Request can be 
  dropped or process with a set of set actions.

o Found bug when configured to include an RLE and an ELP in a RLOC record,
  that the RLE record overwrites the ELP record so looks like it is not
  included in the Map-Reply.
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.271
                --------------------------------------

o Release date: Tue Mar  3 12:06:11 PST 2015

o Add script lispers.net-install-ubuntu.pyo that performs the steps for a
  first-time install from the file how-to-install.txt.

o Change how-to-install.txt to document the existence of lispers.net-install-
  ubuntu.pyo.

o Add variable "address_is_name" to the following API calls (defaults to 
  False):

       lispapi.add_itr_map_resolver()
       lispapi.delete_itr_map_resolver()
       lispapi.add_etr_map_server()
       lispapi.delete_etr_map_server()

  So when argument "address" is passed in, the configuration file can generate
  "dns-name = <address-as-a-name>".

o Do not put MAC addresses for GRE devices in lisp.lisp_mymacs{}.

o Allow duplicate API calls to return "!" to let API user know that it wasn't
  a failure, but return string "duplicate".

o Don't do a prefix-list array length check for lispapi.build_ms_site_
  allowed_prefix() calls so we can start with an empty array to build
  a group of prefixes.

o In lispapi, timeout requests.get() and requests.put() after 3 seconds of
  no response.

o Add new APIs lispapi.get_itr_map_resolver() and lispapi.get_etr_map_
  server().

o This release supports a new and automatic LISP VPN provisioning system.
  A daemon runs on a container provisioning system that starts the LISP
  subsystem and the lisp-cp-server app provisions the map-server and all
  sites that are suppose to be in a LISP VPN. The lisp-cp-server app is
  a daemon that watches for requests to provision new VPNs and new VPN sites.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.270
                --------------------------------------

o Release date: Fri Feb 27 17:52:31 PST 2015

o Give more information in the error message indicating that a destination
  MAC is associated with a specific Linux device but the pcap interface may
  be different.

o Have to local MACs lisp_mymacs{} array be one-to-many. So a single MAC
  address can map to multiple Linux devices. This way we can support receiving
  packets on multiple interfaces that may have the same MAC address assigned
  or configured.

o Do str.isalnum() for bogus interface names that could be in the system in
  lisp_get_local_macs(). This fixes a traceback in lisp-etr.py.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.269
                --------------------------------------

o Release date: Fri Feb 20 12:51:46 PST 2015

o Normalize lisp_stats() packet count and byte count to append "M" when count 
  over 1 million and "B" when over 1 billion. And yes, "T" for 1 trillion.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.268
                --------------------------------------

o Release date: Wed Feb 18 10:27:02 PST 2015

o Fix API routines to check to see if enable_status does not have value None.
  If the value is None, we have not validated with the device.

o On ETR and RTR copy outer TTL to inner TTL on decapsulation.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.267
                --------------------------------------

o Release date: Tue Feb 17 13:14:49 PST 2015

o Fix lisp_process_map_notify_ack() key error access.

o When a map-cache entry is configured with multiple prefix clauses, the same
  lisp_rloc() pointer is being stored for each one. That is sharing the same
  state across map-cache entries. We want each RLOC per map-cache entry have
  their own state (for RLOC-probing, stats, etc).

o Make sure when a multicast Map-Notify is replace and we build a new RLOC-set
  from the information in the Map-Notify that we preserve the stats for the
  RLOC record. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.266
                --------------------------------------

o Release date: Fri Feb 13 22:37:56 PST 2015

o Do not try to tail logs/lisp-flow.log when it does not exist. Tell the user
  the file does not exist when they click on the link to look at it after
  a "log flows" button click.

o Have packet-count and byte-count show up in stats displays and have the
  packet rate and bit-rate show up when you hover.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.265
                --------------------------------------

o Release date: Fri Feb 13 11:15:35 PST 2015

o In the "system status" display, create a new button labeled "log flows"
  which takes the memroy-based flow-log and writes it out to logs/
  lisp-flow.log. There is a link on this page to take you to the flow log
  page if user clicks on it.

o Do not log flows as "encap" for decapsulated packets in ETRs. And don't
  log flows as "encap" for packets that are natively forwarded.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.264
                --------------------------------------

o Release date: Thu Feb 12 15:49:20 PST 2015

o Do not log flow for natively received packet on an ITR.

o Fix flow-logging for RTRs. Particularly when doing replicated encapsulation.

o Fix bug where we are not finding an IPv6 RLOC during lisp-itr process
  startup.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.263
                --------------------------------------

o Release date: Tue Feb 10 18:52:43 PST 2015

o Found crash in lisp_process_map_notify(). Not enough parameters supplied
  on call to lisp_ms().

o When you touch the file ./log-flows, it will signal to the lisp-itr and 
  lisp-etr processes (the next time it encaps or decaps) to write to the logs/
  lisp-flow.log file. This is a privledged but relatively hidden way to cause
  dumps for low volume traffic.

o Fix NAT-traversal bug. If DHCP server gives a non private address and 
  "nat-traversal = yes" is configured, we want to send Info-Requets. We
  were not sending them when I was sitting at Cocola in Standford Shopping
  Center. The DHCP server was allocating 1.0.0.115/24 to my laptop.

o Fix flow-logging for decapsulated packets that come through NATs. Since
  pcap is not used for such packets the outer header is not available. So
  adjust the line display to reflect that.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.262
                --------------------------------------

o Release date: Mon Feb  9 23:00:20 PST 2015

o Throughout all logging messages, print EIDs and EID-prefixes in green and
  RLOCs in red. This will make scaning through long logs easier on the eyes
  and get your brain to the information you need quickly.

o Display UDP/TCP port numbers when applicable in the flow-logging display.
  Display ICMP seq numbers for protocol 1 packets.

===============================================================================

                lispers.net Beta Release Version 3.0.1
                --------------------------------------

o Release date: Wed Feb 18 10:30:37 PST 2015

o o Found crash in lisp_process_map_notify(). Not enough parameters supplied
  on call to lisp_ms(). Fixed in development branch release 0.263.

o Fix NAT-traversal bug. If DHCP server gives a non private address and
  "nat-traversal = yes" is configured, we want to send Info-Requets. We
  were not sending them when I was sitting at Cocola in Standford Shopping
  Center. The DHCP server was allocating 1.0.0.115/24 to my laptop. Fixed in
  development branch release 0.263.

o Fix flow-logging for decapsulated packets that come through NATs. Since
  pcap is not used for such packets the outer header is not available. So
  adjust the line display to reflect that. Fixed in development branch
  release 0.263.

o Fix bug where we are not finding an IPv6 RLOC during lisp-itr process
  startup. Fixed in development branch release 0.264.

o Do not log flows as "encap" for decapsulated packets in ETRs. And don't
  log flows as "encap" for packets that are natively forwarded. Fixed in
  development branch release 0.265.

o Fix lisp_process_map_notify_ack() key error access. Also fixed in 0.267.

o When a map-cache entry is configured with multiple prefix clauses, the same
  lisp_rloc() pointer is being stored for each one. That is sharing the same
  state across map-cache entries. We want each RLOC per map-cache entry have
  their own state (for RLOC-probing, stats, etc). Also fixed in 0.267.

o Make sure when a multicast Map-Notify is replace and we build a new RLOC-set
  from the information in the Map-Notify that we preserve the stats for the
  RLOC record. Also fixed in 0.267.

o Fix API routines to check to see if enable_status does not have value None.
  If the value is None, we have not validated with the device. Also fixed in
  0.268.

o On ETR and RTR copy outer TTL to inner TTL on decapsulation. Also fixed
  in 0.268.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 3.0
                -------------------------------------

o Release date: Mon Feb  9 12:07:30 PST 2015

o Based on development branch release 0.261. This is a renumber build of
  0.261.

o Features include:

(1)  Allow 2-click install of a new lispers.net release. You don't need to
     ssh into the system to download a new release, install it and restart
     the LISP subsystem.

(2)  Add support for E.164 telephone numbers as EIDs. You can attach any of the
     currently supported RLOC types to it. So if you want to make a IP address
     from a telephone number or find the Geo-Coordinates of a telephone number,
     these can be used as RLOCs for a E.164 EID. E.164 EIDs are encoded as 
     AFI = 8 per the Address-Family Indicator registry spec.

(3)  Rotate log directories so we don't use up so much disk space. Keep the
     last 10 log directories.

(4)  Multi-tenancy support. You can use the "lisp interface" command to assign
     an instance-id to a unix device interface. So multiple VPNs can be 
     attached to a lispers.net system. Works for VLANs as well.

(5)  Added support for RLOC-probing in ITRs, ETRs, and RTRs. Works through 
     NATs.

(6)  Added support for nonce-echoing in ITRs, ETRs, and RTRs.

(7)  Support for signal-free LISP multicast. Works through NATs too.

(8)  Encapsulating to IPv6 RLOCs works more robustly now.

(9)  Added dynamic-EID support for VM and IP addresss mobility use-cases. So 
     we can dynamically determine when an EID lands on a lispers.net LISP site.

(10) Added frame-logging and flow-logging support for xTRs.

(11) Added support so lispers.net can run on Arista, A10, and Raspberry PI
     platforms.

(12) Added new RLOC type called "rloc-record-name" so it can encoded and
     stored in the mapping system and an ITR/RTR. Helpful for ease of use
     and documentation for managing a LISP network.

(13) Allow DNS-name for map-resolver and map-server configuration.

(14) Support new EID type called "distinguished-name". Allows user to register
     a free-flowing ascii name as an EID-prefix in the mapping database. 
     Allows chained lookups to a user's specification. Could be a tailored
     way to do NFV service chaining.

(15) Created a set of applications that can retrieve a news feed headline
     and multicast it to receivers running the receiver applications. The
     applications are pure multicast based by can work on the overlay but
     encapsulating to unicast RLOCs (via signal-free multicast). Works 
     through NATs.

(16) Add IPv4 fragmentation support in ITRs and RTRs so when a packet is 
     received and encapsulation headers put the packet size over 1500 bytes, 
     fragment inner header and encapsulate each fragment.

===============================================================================

                lispers.net Beta Release Version 0.261
                --------------------------------------

o Release date: Mon Feb  9 10:14:23 PST 2015

o When an API call is duplicated with the same arguments. Do not write a
  duplicate command clause to the configuration file.

o Support new feature called "flow-logging = yes" under the "lisp xtr-
  parameters" command clause. This is supported on ITRs, ETRs, and RTRs.
  The LISP subsystem will store flow data for encapsulated packets. Every
  1000 packets encapsulated or decapsulated forks a thread to write the
  flow data to logs/lisp-flow.log. The flow-logging feature can be enabled
  and disabled by modifying lisp.config or by using the "managed logging"
  pull-down menu on the landing page. You can show the lisp-flow.log file
  via the web interface by selectin the "show logging" pull-down menu. From 
  the text file or web interface, addresses displayed in red are RLOCs
  and addresses displayed in green are EIDs.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.260
                --------------------------------------

o Release date: Thu Feb  5 10:58:16 PST 2015

o Changed hover over display for Echo-Noncing. Don't display nonces anymore.
  They have little use to the user and hard to correlate with other events
  that are long gone in logs. Just display when request-nonces and echo-nonces
  have been last sent and received.

o Do not have request-nonce mode and echo-nonce mode duration periods when
  things are working. Have a requester exit request-nonce mode when the first
  echo is returned. Have the echoer exit echo-nonce mode after the first
  echo has been sent. A duration period is maintained by the requester side
  when no echos are returned. So if the request-nonce or echod-nonce gets lost,
  then the requester resends with new nonce. Therefore, there is no necessity
  for the echoer to have any period.

o When you hover your pointer over an EID-prefix that is configured with
  "accept-more-specifics" in the "LISP-MS Site Information" table display,
  the count of number of registered entries appears.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.259
                --------------------------------------

o Release date: Wed Feb  4 23:02:35 PST 2015

o Fix how-to-install.txt to indicate there is no password for user account
  "root" when the LISP subsystem is installed for the first-time.

o traceback.print_last() crashes when there is a hard exception that cannot
  print a traceback. Put a try/except clause around it.

o When the number of EID-prefixes that need to be registered will exceed
  a 1500 byte Map-Register message, break it up into 20 EID-prefix chunks.

o If user wants to supply a very coarse "lisp database-mapping" EID-prefix,
  the system may not be able to select local RLOCs to run. To allow this to
  be overwritten, when the user types "./RESTART-LISP <interface>", the
  addresses on the interface are excluded from the database-mapping tests.

o Change pcap filter to exclude arp and rarp. When "src net ..." is used it
  includes ARP and RARP packets. The lisp-itr process does not need to see
  these packets.

o When echo-noncing, deal with nonce echo-request collisions. Tie break by
  having the higher RLOC addressed system stay in request-mode and the lower
  RLOC addressed system go in echo-mode.

o Timeout echo-nonce mode so we can start in echo-request mode.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.258
                --------------------------------------

o Release date: Fri Jan 30 13:48:30 PST 2015

o Fix random "lisp map-resolver" configuration to produce a map-resolver
  entry of 0.0.0.0.

o Fix the ITR pcap filter do do "not (host ....".

o Add subcomamnd "echo-nonce-capable = yes | no" for the subclause "allowed-
  prefix" of the "lisp site" command.

o Do not set auth bit in Map-Reply when the Map-Server is proxying replying.
  Do the same when a Map-Resolver is sending back a native-forward Map-Reply.
  The only LISP entity that should said the auth-bit are the ETR(s) since it
  usually is authoritative for the EID-prefixes for the site it is connecting
  the overlay to.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.257
                --------------------------------------

o Release date: Thu Jan 29 11:06:03 PST 2015

o Change how the lisp-itr process starts up. Have the pcap filter and kernel
  iptable filters built once. And then start a thread per device we find that
  we are capturing on. This will cause less stress in the iptables facility
  in the kernel.

o Also fix race condition where we need to finish lisp_itr_startup() so
  configuration commands can execute but also do initialization procedures
  after waiting for "lisp database-mapping" commands to complete (to build
  the pcap filters).

o Fix lispapi.build_ms_site_allowed_prefix() to check for proper type of 
  prefix_list array passed in. Have lispapi.add_ms_site() make sure that
  prefix_list passed in was built by lispapi.build_ms_site_allowed_prefix().

o The lispapi.add_ddt_auth_prefix()  was building a prefix clause for the 
  "lisp ddt-authoritative-prefix" command. This was causing a crash in the
  lisp-ddt.py process.

o Simplity the pfilter for the lisp-itr.py process. Use "src net" with a bunch
  of ORs and "not host" with a bunch of ORs.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.256
                --------------------------------------

o Release date: Tue Jan 27 12:18:59 PST 2015

o Test for html data returned when an API function calls internal function
  __get_data().

o Test all occurences for dictionary key "address" because an API call may
  not include them. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.255
                --------------------------------------

o Release date: Mon Jan 26 22:00:02 PST 2015

o When "nonce-echoing = yes" is set and it is then deconfigured with
  "nonce-echoing = no", clear out the nonce state so RLOC-probing does not
  get suppressed.

o When processing a Map-Reply make sure the lisp_rloc.last_rloc_probe_nonce
  is copied to new data structure so when next RLOC-probe reply comes in, we
  have the up to date nonce for the last Map-Request RLOC-probe we sent.

o Fix API internal routine __unicode_to_ascii() to check to see if there is
  HTML returned versus JSON. Because if the bottle server has crashed, a
  error "500" is returned but it is returned in HTML format.

o Fix server processing of API call lispapi.add_ddt_auth_prefix(). Was crashing
  server.

o Do a syntax check of the addresses in the rloc-set for the lispapi.add_itr_
  map_cache() API call.

o Do not try to decode a null string returned from the server to the API.

o When echo-noncing is disabled do not suppress RLOC-probes. So if the xTR
  has it disabled but an echo-nonce occured on a remote xTR, this was causing
  RLOC-probes to be suppressed. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.254
                --------------------------------------

o Release date: Sat Jan 24 08:26:34 PST 2015

o Use "kill <pid>", instead of "killall"  to remove a process when enable 
  status for a LISP component is set to "no".

o Changed how-to-install.txt to include installing tcsh and indicating you
  need to be in a tcsh shell before typing RUN-LISP, STOP-LISP, or 
  RESTART-LISP.

o Add "dns-name" to the "lisp map-resolver" and "lisp map-server" command 
  clauses. This allows the address of each to be obtained dynamically, rather 
  than hardcoding the address. Each time the map-resolver or map-server is 
  used, a DNS lookup will be done on the name to see if the addresses have 
  changed. This level of indirection allows for xTRs to be auto-configured to 
  a certain extent.

o Have the ETR and RTR pcap on multiple local addresses so it can be one
  system with multiple RLOCs. And when answering RLOC-probe requests, set
  the L and P bit for all RLOCs in the RLOC-record of the Map-Reply. The ITR
  will know which one it probed by matching the Map-Reply nonce with the
  Map-Request nonce stored for each RLOC probed.

o Fix crash in lisp_map_cache_command() when the API can create a "lisp 
  map-cache" command clause with no "rloc" subclause.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.253
                --------------------------------------

o Release date: Fri Jan 16 12:02:45 PST 2015

o Avoid using command line redirection when interally calling "./RESTART-LISP"
  so we can make sure the web interface can restart on various platforms.
  Now works on Raspberry PI and gcloud platforms.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.252
                --------------------------------------

o Release date: Thu Jan 15 16:55:39 PST 2015

o Have an encapsulator set the DF-bit in the outer IPv4 header so there is
  no fragmentation by routers between the ITR and ETR. Then, we don't get
  into an issue where the ETR has to reassembled encapsulated packets.

o Fix typo in how-to-use-apps.txt.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.251
                --------------------------------------

o Release date: Wed Jan 14 16:30:30 PST 2015

o Fix "netstat -rn" address-family switch for non MacOS systems when hovering
  over locally obtained RLOCs on the top of the various displays.

o Do not delay at lisp-core process startup when other processes come up. Send
  them commands immediately.

o Add wlan0 to the device list to obtain RLOCs. This is so a Raspberry PI that
  is not ethernet connected but has a wifi interface can get an RLOC.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.250
                --------------------------------------

o Release date: Mon Jan 12 08:43:24 PST 2015

o Fix traceback in lisp_mapping.select_rloc(). Introduced in fix for last 
  bullet in release 0.249 release notes.
 
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.249
                --------------------------------------

o Release date: Sun Jan 11 10:42:50 PST 2015

o Support ITR fragmentation of inner packet when prepending encapsulation 
  headers puts the packet length > 1500 bytes. Each fragment will be 
  encapsulated. The ETR will decapsulate each fragment and deliver the 
  fragments to the destination EID for reassembly.

o Now will print "Fragment" instead of "Send" when a received packet
  is fragmented then encapsulated. And each fragment will have a debug
  log so we can look at fragment length and fragment offset fields of
  the inner IPv4 header.

o Allow the ITR to fragment an received packet that was fragmented by the
  source. That means, we need to retain the frag-offset value for the received
  packet as we chop it up into more fragments.

o Drop packets that need fragmentation but the source has set the DF-bit.

o When using static map-cache entries, do not send refresh-based Map-Requests.

o When doing packet hashing for RLOC selection, do not use 5-tuple for
  fragmented inner header packets. Use a 3-tuple of the inner header instead.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.248
                --------------------------------------

o Release date: Tue Dec 23 09:08:56 PST 2014

o Fix crash in lisp_rloc.add_to_rloc_probe_list()

o Support Raspberry PI platform running a variant of debian linux called
  raspbian. Right now the raspbian OS doesn't not support AF_INET6 sockets.

o Fix problem parsing strings with all of instance-id, distinguished-name,
  and slash mask-length formats.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.247
                --------------------------------------

o Release date: Wed Dec 17 17:20:17 PST 2014

o Fix crash in lisp_process_map_notify_ack. Do not try to cancel timer if
  one was not allocated.

o TTL=0 Map-Register when an ETR leaves an (S,G) is not being processed by
  the Map-Server. Getting "Ignore deregistration request from 71.6.80.11"
  because we do a RLOC-set test of the Map-Register source but are not 
  considering RLEs. So check the RLE for the Map-Register source and accept
  deregistration if found.

o First authenticate to all targerts in the lisp-provision-*.pyo applications
  so if there is a password or connection problem, we tell the user before
  they enter a lot of input.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.246
                --------------------------------------

o Release date: Tue Dec 16 17:28:10 PST 2014

o Fix IGMP pcap filter in lisp-etr.py.

o Allow a group-mapping to be instance-id specific so you can register 
  different (S,G)s in different VPNs. Add "instance-id" subclause to
  the "lisp group-mapping" command clause.

o Allow different (S,G) entries to be regisered to different mapping systems
  by using "ms-name" like in "lisp database-mapping" commands. Add "ms-name"
  subclause to the "lisp group-mapping" command clause.

o This release supports two new applications (you can find in lispers.net-
  x86-apps-release-0.246). The two new apps are:

  Usage: python lisp-news-sender.py <source> <group>
  Usage: python lisp-news-receiver.py <source> <group>

  The receiver app will join <group> and the ETR will register a (S,G) entry
  to the mapping database. The receiver will listen for news headlines from
  the sender app. You will need to use the "lisp group-mapping" command
  clause to cause the <group> to be mapped to the source S for a registered
  (S, <group>). The reason the user needs to supply <source> because in the
  future we'll support IGMPv3 (when all the OSes have IGMPv3 support) so we
  can eliminate the "lisp group-mapping" requirement in the ETR.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.245
                --------------------------------------

o Release date: Fri Dec 12 12:17:48 PST 2014

o When multiple preifx clauses are used in a single "lisp database-mapping"
  command and each point to different ms-name or mr-name references, only
  the first ms-name or mr-name is used. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.244
                --------------------------------------

o Release date: Wed Dec 10 14:03:24 PST 2014

o Allow '<distinguished-name>' as a eid-prefix parameter to all API calls.
  Here is an example to add a distinguished name as a database-mapping entry:

  lispapi.add_etr_database_mapping("0", "'us-site'", "", [])

o Also the passing of '<rloc-record-name>' as a locator in the API.

o Have lisp-lig and lisp-rig support looking up Distinguished-Names from both
  command line and web interface. This means we can process Map-Requests with
  AFI=17 in the Map-Requests target-eid field and do longest match lookups
  in the site cache.

o Increase size of IPC buffer so we can fit in more EIDs in a Map-Register
  message.

o Support AFI=17 Distinguished-Names in the Map-Resolvers referral-cache.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.243
                --------------------------------------

o Release date: Sun Dec  7 13:25:47 PST 2014

o Fix potential tracebacks in lisp-itr and lisp-rtr when multicast replication
  is done and a call to lisp_packet.encode() is done while missing an argument.

o When a process starts up, write the version number to the log.

o Do not encode a mask-length in an EID-record for a distguished-name. Because
  when a distinguished name is long, the mask-length could be greater than
  255 (and the width of the mask-length field in an EID-record is 8 bits).

o Have lisp_get_active_interfaces() grab active nterface names from a 
  Fedora ifconfig so we can pcap on explicit interfaces.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.242
                --------------------------------------

o Release date: Sat Dec  6 00:00:45 PST 2014

o Use distinguished names (AFI=17) for EID prefixes. An ETR can register
  a ascii name in an EID-record of a Map-Register.

o When a "eid-prefix = <prefix>" of a "lisp database-mapping' command 
  specifies <prefix> as '<prefix>' (single quotes designates a distinguished-
  name) then a AFI=17 EID-prefix is sent in a Map-Register message.

o Single quote all names in displays configured with AFI=17 EID-prefixes and
  "rloc-record-name" distinguished-names.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.241
                --------------------------------------

o Release date: Mon Nov 24 11:59:45 PST 2014

o Fix traceback found on mrms1.dino.vxnet.com when a authentication key-id
  is not supported.

o When a key-id of 0 is encoded, make sure the authentication length is 0.

o Make sure the authentication key-id defaults to sha2 for the "lisp map-
  server" command.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.240
                --------------------------------------

o Release date: Sun Nov 23 15:17:54 PST 2014

o Do not display rloc-name twice in individual registration area on the
  detail site page.

o Put rloc-name on RLOC line in lig output.

o Put rloc-name in quotes in debug output.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.239
                --------------------------------------

o Release date: Fri Nov 21 22:17:37 PST 2014

o Fix overindexing of value arrray in lisp_process_command().

o Get rid of "Linux Cooked Headers" by pcap'ing for each configured and
  plugged in interface. Then we can get real headers. Do not pcap on "any"
  anymore in the lisp-itr process.

o Add "rloc-record-name" to an "rloc" clause of a database-mapping comamnd.
  This allows an ascii string to accompany an RLOC in an RLOC-record. Uses
  null-terminated string in AFI=17. When "rloc-record-name" is configured,
  an AFI-List Type LCAF is encoded to encode both an RLOC address and a
  RLOC name. Works with all other combinations of RLOC LCAF types (i.e. geo,
  elp, and rle).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.238
                --------------------------------------

o Release date: Thu Nov  6 20:42:13 PST 2014

o Allow a refresh registration to change the RLOC-set when the site-EID entry
  is not currently registered. In this case, you want the new RLOC-set to
  take over. This is a design bug introduced in release 0.237. Found and fixed
  now.

o Add lispers.net-test-install.pyo to release distribution. So one can call
  the script to test to see if a first-time install was complete according
  to the how-to-install.txt instruction file.

o Update how-to-install.txt to place steps in a more logic order which will
  cause less conditions to be considered.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.237
                --------------------------------------

o Release date: Thu Nov  6 16:03:05 PST 2014

o Introduce a refresh-bit in the Map-Register. This will fix a race condition
  where an EID has moved to a new locator-set but the periodic Map-Register
  timer fired in the old locator-set which makes the Map-Server think the
  EID moved from "old to new, then back to old". When the refresh-bit is
  set, a locator-set is not replaced in the Map-Server. It is okay in existing
  implementations to not set the refresh-bit. It will be interpreted as a 
  trigger rather than a refresh but the race condition is rare if the periodic
  timer is increased. The refresh-bit (F-bit below) is in the following header
  location:

   0                   1                   2                   3          
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1        
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+       
   |Type=3 |P|S|I|        Reserved       |F|T|a|m|M| Record Count  |       
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+     

   To enable this functionality, use the new subcommand "refresh-registrations"
   under the "lisp map-server" command clause.

o Do not display "0x" for the xTR-ID field in the detailed site-EID display
  when the xTR-ID is not set. Display "0x0".

o Do not send a duplicate Map-Notify to the source of a Map-Register. Upon
  a change in the locator-set (from null to a new locator-set), the source
  of the Map-Register may be in that list. You don't to notify it for the
  change as well as acknowledge the Map-Register. Or you'll have two messages
  going to the same place with the same content.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.236
                --------------------------------------

o Release date: Wed Nov  5 21:11:15 PST 2014

o Have the Map-Server send Map-Notify messages to an old RLOC-set that had
  been registered when a new RLOC-set is registered. A Map-Notify message
  will go to each xTR in the RLOC-set that previously registered with the
  'map-notify-requested' bit set. This feature will allow xTRs at a LISP site
  to know when EIDs have moved away from its site.

o Add documentation header to lispapi.txt for API users to send email to
  support@lispers.net for questions on using the API, bug reports, or
  feature requests.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.235
                --------------------------------------

o Release date: Sun Oct 26 16:03:21 PDT 2014

o On the Map-Server web page if you click the hotlink for a MAC address or
  E.164 EID, it flashes the main page and does not take you to the detailed 
  site registration page for the EID. (S,G) MAC entries have the same problem.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.234
                --------------------------------------

o Release date: Tue Oct 21 16:33:38 PDT 2014

o For any html page output, print hostname as web page title to show on 
  window and tab labels.

o For lisp-lig,py and lisp-rig.py, do not require a local hostname to be
  in the /etc/hosts file. Get a local address not by a DNS lookup but by
  using lisp.lisp_get_local_addresses().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.233
                --------------------------------------

o Release date: Thu Oct 16 10:54:29 PDT 2014

o When an ETR registers with T-bit set and supplies a registration timeout TTL
  and then the EID moves to an ETR that registers with T-bit clear, the
  default timeout (of 3 minutes) does not get cached in the lisp_site_eid
  entry (in the Map-Server).

o When "force-ttl" is configured for an "accept-more-specific" site entry,
  have native-forward Map-Replies returned by the Map-Server used the
  force-ttl value. That is, rather than returning 1 minute in the negative
  Map-Reply, return the configured force-ttl value (in seconds).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.232
                --------------------------------------

o Release date: Tue Oct 14 13:52:35 PDT 2014

o Unit testing complete for echo-noncing. Feature is opened up for beta
  testing.

o Add "Last State Change" to map-cache display. Put in column where "RLOC 
  State" and "RLOC Action" reside.

o Display Map-Register registered TTL (or default TTL with T-bit is clear) in
  the detailed registered display.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.231
                --------------------------------------

o Release date: Tue Oct  7 06:53:24 PDT 2014

o Allow the interface name on "./RESTART-LISP" be entered without a colon. So
  a "./RESTART-LISP 8080 en1:2" is typical to get the second address on en1
  to be the default RLOC but "./RESTART-LISP 8080 en1" gets the first address.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.230
                --------------------------------------

o Release date: Thu Oct  2 10:33:36 PDT 2014

o Do not return from lisp_itr_data_plane() when refreshing a map-cache entry.
  Use the one we found for the lookup. That will result in not dropping a
  packet when we have fast timers runnig from the Map-Server.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.229
                --------------------------------------

o Release date: Tue Sep 30 20:19:49 PDT 2014

o In the "lisp interface" command clause, allow a new parameter called 
  "dynamic-eid-device = <routed-device>" so when a dynamic-EID is allowed to 
  be disocvered on "device = <unix-device>", that the interface 
  <routed-interface> can be associated  with the kernel route that is added.

o Found bug where we should return after sending a Map-Request rather than 
  proceeding with process a null map-cache entry.

o Add hidden "lisp xtr-parameters" command "frame-logging = yes | no" so we 
  can see what pcap has given the lisp-itr process.

o When pcap sends up ARP packets to the lisp-itr process, do not process them.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.228
                --------------------------------------

o Release date: Thu Sep 25 07:39:07 PDT 2014

o When a Map-Register is received by a Map-Server with a TTL=0, do not change
  "registered" to no if it is from an RLOC not in the registered RLOC-set.

o Make sure the "Refresh map-cache entry ..." log message comes out before
  the Map-Request logging.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.227
                --------------------------------------

o Release date: Mon Sep 22 13:56:52 PDT 2014

o There was a traceback in lisp_mapping.select_rloc(). It will affect ITR
  forwarding. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.226
                --------------------------------------

o Release date: Sun Sep 21 08:17:04 PDT 2014

o Allow user to supply "<device>:<number>" on the RUN-LISP script (which is
  also called by RESTART-LISP) to select the interface the LISP subsystem 
  will use as an RLOC. The value <number> is what was already supported by
  selecting the nth address on the interface. The syntax is now: "RUN-LISP
  <web-server-port> [[<device>:]<number>]. This new syntax for the 3rd
  argument is the value for environment variable LISP_ADDR_SELECT in the
  RUN-LISP startup script.

o Allow registration of overlapping EID-prefixes. When a more-specific of
  a configured accept-more-specific EID-prefix is registered, and then an
  even more-specific one is registered, it will be rejected, because it is
  matchig the registered prefix and not the configured prefix. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.225
                --------------------------------------

o Release date: Fri Sep  5 14:19:53 PDT 2014

o Support Nonce Echoing. Introduce a new "lisp xtr-parameters" subcommand
  called "nonce-echoing = yes | no". When this is set on the ETR, it will
  return Map-Replies with the E-bit set, indicating it is capable of nonce
  echoing. When this is set on the ITR, the E-bit in the LISP data header
  will be set periodically to test the forward path from ITR to ETR. If
  no nonce echo is returned, the ITR will put the RLOC in "no echoed-nonce"
  state which will not be used for encapsulation. When a nonce echo is 
  returned, it is timestamped so we can suppress an RLOC-probe
  to allow RLOC-probing to scale better. If RLOC-probing says the RLOC is up
  and Nonce-Echoing indicates the RLOC is down (or vice-versa), the RLOC will
  remain in unreach-state or no-echod-nonce" state and not used for
  encapsulation. This feature is not fully tested so at this point it is
  recommended to keep "nonce-echoing = no" or do not include the command
  in the "lisp xtr-parameters" sub-command clause.

o When "rloc-probing = yes" or "nonce-echoing = yes", when you hover your
  pointer over an RLOC in the map-cache table display, you will get information
  relative to RLOC-probing and/or Nonce-Echoing, respectively.

o Fix refresh bug where a map-cache returned of type None may not put a
  boolean value in variable "refresh".

o Do not use pcap filter keyword "inbound" on ubuntu Linux. It breaks 
  capturing packets from EIDs. This keyword has only proven useful on
  fedora Linux.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.224
                --------------------------------------

o Release date: Wed Sep  3 09:37:31 PDT 2014

o There are cases where a Map-Server should not expect a Map-Notify-Ack to be
  returned after sending a Map-Notify message. When a Map-Notify message is
  sent to acknowledge an ETR's Map-Register, the ETR will typically not send
  a Map-Notify-Ack (lispmob and IOS behave this way). So don't put the Map-
  Notify state in a retransmission queue and don't retransmit Map-Notify
  messages when no Map-Notify-Ack will be returned.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.223
                --------------------------------------

o Release date: Wed Aug 27 13:53:19 PDT 2014

o Dot files were mistakenly added to lispers.net tarballs. This was true for
  get-pip.py and how-to-install.py. Found by Paul. Fixed now.

o Do not drop packets when we are refreshing a map-cache entry. And do not
  apply the Map-Request rate-limiter when refreshing.

o Parse VLAN encapsulated MAC frames. And construct a device name "vlan<tag>"
  for input processing in the lisp-itr process.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.222
                --------------------------------------

o Release date: Fri Aug 22 15:23:37 PDT 2014

o For the map-cache and referral-cache, print TTL values in secs, mins, or
  hours depending on the value. This is a more user friendly display.

o Have the lisp-itr process send a Map-Request to the mapping database
  system every map-cache TTL-seconds before timing out the entry. Do this
  only when there is data activity for the map-cache entry (data has arrived
  within the last 1 minute). Put this functionality in the lisp-rtr process
  as well.

o Add a new subclause command "dynamic-eid = <prefix>" to the "lisp interface"
  command. Now we can control which interfaces dynamic-eid discovery can occur
  on. Plus we fix a bug. We don't discover incorrectly a decapsulated packet
  on the ETR as the source sending natively. See more details in lisp.config.
  example or click "Command Documentation" button on landing page.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.221
                --------------------------------------

o Release date: Wed Aug 20 13:23:42 PDT 2014

o Allow a Map-Server, when it is proxy Map-Replying, to force the TTL value
  of an EID-record. The value in RFC 6830 indicates the value is in units of 
  minutes. To allow in units of seconds, set the high-order bit.

o Print EID-record TTL in the smallest units possible. That is in "secs" when
  TTL is less than one minute, in "hours" when the TTL is a multiple number 
  of hours, and otherwise, print "mins".

o We have a problem where a VM cannot ping an xTR when the source and 
  destination addresses of the ping are EIDs. The solution is for the 
  lisp-itr to not receive such packets so the kernel can deliver packets
  to the application. And at the same time, packets with source addresses
  that are EIDs from configured database-mappings in the xTR are past to 
  the lisp-itr process and not processed by the kernel.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.220
                --------------------------------------

o Release date: Tue Aug 19 10:06:21 PDT 2014

o Change lisp.lisp_is_linux() to use Use platform.uname()[0].

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.219
                --------------------------------------

o Release date: Mon Aug 18 15:44:44 PDT 2014

o Extend login timeout from 10 minutes to 1/2 hour. This will reduce the
  number of SSL negotiations while debugging systems. Dino needs this. ;-)

o Display MAC addresses, when available, on the "Receive ..." data-plane-
  logging log message. Gregor needs this.

o Have pcap filters tell kernel to pass up packets only for inbound packets.
  This is so when the lisp-itr process sends a native-forward packet through
  a raw socket, it doesn't see the same packet (with ttl minus 1) come back.
  Found by Paul and has been around for a long time.

o If packet received is from an EID destined to an EID where the ITR has
  a databaase-mapping for it, natively send it on raw socket for transit
  "internal to site" delivery. Found by Paul.

o Boldface "ttl expiry" in log messages. They should stand out.

o Add MAC address 000300010006 to list of mapped to eth0. QEMU seems to use
  this address and it is not mapping to any interface. Gregor needs this to 
  proceed.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.218
                --------------------------------------

o Release date: Sat Aug 16 11:09:12 PDT 2014

o In lisp-get-bits.py, test to see if the system has wget installed. Found
  by Donn.

o There are cases where we parse an address and don't store the host mask-
  length in the internal lisp_address() format. That will cause address
  compares to fail in various places. Case in point is when an ECM is
  received and compared across a registered RLOC-list that contains xTRs
  behind NATs and RTR addresses. Found while testing with Donn and Paul.

o Test for NoneType when calling lisp_rloc.copy_rloc_probe_state(). Found
  a traceback in rtr1 with this.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.217
                --------------------------------------

o Release date: Fri Aug 15 21:05:59 PDT 2014

o Fix UDP/TCP hash for IPv6 packets. Do not need to fold in addresses in
  lisp_hash_ports(). Done by caller.

o Also UDP is port 17 and not 11 (I coded it as 11 but didn't prepend 0x).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.216
                --------------------------------------

o Release date: Fri Aug 15 16:30:45 PDT 2014

o Do not program iptables if system is not running on a Linux platform.

o Do not consider port numbers when packet is not UDP or TCP. We saw in testing
  that ICMP packets were being load-split across RTRs when it should latch
  to one based only on source and destination EID addresses. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.215
                --------------------------------------

o Release date: Thu Aug 14 16:34:12 PDT 2014

o Make file STOP-LISP have permission 755. I must have done something to
  change the permissions when I did the 0.214 build. Fixed now.

o Use chain PREROUTING and not OUTPUT so when packets come in on interfaces
  they can be dropped for source EIDs. But when an ITR needs to forward
  based on a native-forward entry, the packet needs to go out.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.214
                --------------------------------------

o Release date: Wed Aug 13 17:12:36 PDT 2014

o Updated how-to-install.txt with comments from Donn after he did a install
  from scratch installation.

o Updated lisp.config.example to fix NAT-traversal description. Thanks Donn
  for catching this.

o Added iptables interface in the lisp-itr process so a packet recieved by
  a configured source-EID is not natively forwarded by the kernel as well
  as passed to the lisp-itr process for encapsulation. If that kernel forwarded
  packet gets to destination somehow, there are duplicates delivered. Also
  support ip6tables for IPv6 source-EIDs.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.213
                --------------------------------------

o Release date: Sat Aug  9 14:36:16 PDT 2014

o When a single dynamic-EID is discovered, send a Map-Register with record
  count equal to 1. We were setting the record count to the number of static
  plus dynamic-EIDs (and not including the statics in the Map-Register which
  is the correct behavior).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.212
                --------------------------------------

o Release date: Thu Aug  7 15:06:06 PDT 2014

o When dynamic-eid is configured in a database-mapping entry with static
  EID-prefixes, the static EID-prefixes are not being registered.

o Don't allow netifaces.ifaddresses() to crash if IP addresses are not known
  for special interfaces.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.211
                --------------------------------------

o Release date: Thu Jul 31 07:51:48 PDT 2014

o Install interface host routes in the kernel when a dynamic-EID is discovered.
  And remove them when the dynamic-EID stops sending.

o Add MAC address 0000-0001-0006 as eth0 in lisp_mymacs so we can test a
  VMware VM sending to another VM on the same machine.

o Require "nat-traversal = yes" when doing NAT-traversal. Up to now, we were
  doing NAT-traversal whenever an xTR was configured with RFC 1911 private
  address EID-prefixes. But there are cases where people want to test private
  addresses when they are not behind NATs. So, in this case, when "nat-
  traversal = no" and private address EIDs are configured, no NAT-traversal
  logic will be executed. So EVERYONE MUST UPGRADE THEIR CONFIGURATION FILE
  to "nat-traversal = yes" IF THEY WANT NAT-TRAVERSAL TO WORK.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.210
                --------------------------------------

o Release date: Wed Jul 23 08:06:14 PDT 2014

o Have the lisp-core process open a UDP socket for the LISP data port so when
  an ETR or RTR receives an encapsulated packet the kernel will not send
  a ICMP port unreachable back to the source (i.e. ITR/PITR/RTR). This issue
  occurs because an ETR/RTR use pcap to receive packets so it can data from
  the outer IP header (for copying TTL/TOS to the inner header). No packets
  will come to the lisp-core process since we won't read on this socket.

o Found transient bug where we were sending a Map-Register for each EID-prefix
  configured rather than batching them all in one Map-Register.

o Added dynamic-eid support. When the parameter "dynamic-eid = yes" is
  configured under the "prefix" subclause of a "lisp database-mapping" command,
  the configure EID-prefix is used to discover more-specific EIDs. Those
  dynamic/more-specific EIDs are registered to the mapping system. The lisp-itr
  process will do the discovery when packets arrive and the lisp-etr process
  will register the dynamic-EIDs. The lisp-etr process will also decapsulate
  packets destined for dynamic-EIDs and deliver them locally to the host.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.209
                --------------------------------------

o Release date: Tue Jul  8 16:56:56 PDT 2014

o Allow encapsulting with IPv6 RLOCs with a new raw socket that can send
  UDP packets with checksum of 0. We can now support encapsulating packets in
  IPv6 on all of the ITR, ETR, and RTR. Thanks, in advance for Albert and 
  Florin for finding the problem and testing the solution.  ;-)

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.208
                --------------------------------------

o Release date: Mon Jul  7 12:05:29 PDT 2014

o Made changes to how-to-install.txt based on comments and testing from Mark
  Berly.

o If the lisp-itr process cannot find a input interface from pcap'ed packets,
  do not process them. For some reason on Albert's system, we are getting
  duplicate packets from pcap. One packet arrives with ttl 64 with the same
  IPv4 ident as the one after with ttl 63. The ttl 63 indicates input interface
  is "eth0" but the former indicates "?". This means the packet is not received
  with eth0's MAC address.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.207
                --------------------------------------

o Release date: Mon Jun 30 20:39:18 PDT 2014

o Change algorithm to avoid use of unreachable RLOCs. Keep them in the best
  list (which is based on priority and not reachability status) and jump over
  them at data-plane time when selecting an RLOC. This allows for easier and
  more reliable cross data structure management.

o When RLOC-probing an RLOC, use only ITR-RLOCs for the same address family.
  And even if the destination EID-prefix is the opposite address-family, use
  the source RLOC for sending the Probe to be the one from the ITR-RLOCs.
  Found by Albert during interoperability testing with lispmob.

o Only process P-bit in RLOC record if the source of the Map-Reply is from
  that RLOC. Then we can distinguish between IPv4 and IPv6 RLOC reachability.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.206
                --------------------------------------

o Release date: Tue Jun 24 16:44:34 PDT 2014

o When an target EID is encoded in LCAF format (when an non-zero instance-ID
  is used) in a Map-Request, the receiver is decoding the EID with a mask-
  length of 32. Target EIDs do not always have mask-lengths of 32 when used
  in RLOC-probe Map-Requests.

o When building the best RLOC set for the data-plane, do not include RLOCs
  not in UP state.

o Do not send RLOC-probe Map-Request if a translated RLOC is not found.

o Do not set the RLOC-record Probe bit if the RLOC in the RLOC-set you are
  RLOC-probing for is not a local address (i.e. don't have an xTR say another
  xTR for the LISP site is probing, it does it for itself).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.205
                --------------------------------------

o Release date: Tue Jun 24 13:29:01 PDT 2014

o Fix traceback in lisp-core.py found in mrms1.

o When an ETR and RTR is running on the same system, have the lisp-core process
  send the received RLOC-probe to the RTR process.

o RLOC-probing works through NATs now.

o Do not store null address EIDs in the map-cache if an RTR or PETR returns
  a RLOC-probe Map-Reply with no EID encoded (or null EID encoded).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.204
                --------------------------------------

o Release date: Tue Jun 24 09:24:52 PDT 2014

o When the ETR is restarted during an encrypted stream, at the next RLOC-
  probe, it will do a new DH exchange and encode its g/p/public-key and
  say that it is sending it, but the ITR doesn't get the encoding. The ITR
  should backoff and not encrypt subsequent packets.

o Fix the bug above when the ETR intentionally wants to do DH exchange that
  it really encodes it so the ITR can encrypt with the new shared key.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.203
                --------------------------------------

o Release date: Mon Jun 23 18:23:24 PDT 2014

o Added "lisp xtr-parameters" command "rloc-probing = yes | no" to enable
  RLOC-probing on an ITR and RTR.

o Support for sending RLOC-Probe Map-Requests and putting RLOCs in state
  'unreachable" when RLOC-Probe Map-Replies are not returned. RLOC-probe
  round-trip-times are stored for display in the map-cache display.

o Do not rekey for every Map-Request sent. So when we are doing RLOC-probing,
  only do a new DH exchange, when there is no remote key cached or when a
  rekey is requested by network management.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.202
                --------------------------------------

o Release date: Tue Jun 17 11:02:15 PDT 2014

o We this release we begin using "pip" as an installation mechanism for
  installing the lispers.net python module dependencies. There is a new
  how-to-install.txt and all first-time installation materials are included
  in a typical lispers.net release.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.201
                --------------------------------------

o Release date: Mon Jun 16 15:50:13 PDT 2014

o Have pcap filter up packets for IPv6 source-EIDs so lisp-itr can receive
  IPv6 packets from application.

o When an RLOC-probe request is received, simply respond with an RLOC-probe
  Map-Reply. Sending RLOC-probes will be done in another release.

o On lisp-etr, during decapsulation, use a layer-2 raw socket so the IPv6
  header can stay in tack. We will deliver the MAC frame on the loopback
  interface with a source and destination MAC address of the first one found
  by searching interfaces. This will allow the IPv6 layer in the kernel to
  process the packet and route it appropriately.

o Issue an log message when any local address changed from an RLOC to an EID
  as a result of configuring a new "lisp database-mapping" command. Requested
  by Jimmy.

o Set Map-Register trigger timer so a Map-Register is sent when a map-server
  is configured AFTER a database-mapping command. Job found a single 
  Map-Register being sent after the lisp-etr process started up.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.200
                --------------------------------------

o Release date: Wed Jun 11 18:04:07 PDT 2014

o Fix tracebacks in where print_elp() is not called with an argument. This
  will cause crashes when lispapi.get_map_cache() or lispapi.get_site_cache()
  is used on the ITR/RTR or MS. Found on mrms1 with 0.199.

o Do not return in the API forwarding stats for RLOCs that are registered as
  sites in the Map-Server. The forwarding stats are tracked and incremented
  on xTRs.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.199
                --------------------------------------

o Release date: Wed Jun 11 17:08:34 PDT 2014

o Try to keep the system up and running when there is no IPv4 RLOC found.
  Tested by Jimmy.

o Add Map-Server APIs lispapi.get_site_cache() and lispapi.get_site_cache_
  entry(). Now the configured and dynamic site entries from a Map-Server can
  be returned to the python programmer.

o Allow the user to type "./RUN-LISP -8080" or "./RESTART-LISP -8080" so
  the internal lispers.net web server can run on port 8080 without SSL. This
  is useful for development testing when testers have complications installing
  OpenSSL.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.198
                --------------------------------------

o Release date: Fri Jun  6 17:19:23 PDT 2014

o Add more logging so we can boldface the iid and interface being used for
  forwarding on the decapsulting ETR side.

o And when a "lisp interface" is configured but the OS does not support
  SO_BINDTODEVICE, indicate so with a log message.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.197
                --------------------------------------

o Release date: Fri Jun  6 09:25:22 PDT 2014

o Put initial phase in for multi-tenancy. That is you can assign an instance-ID
  per interface. So when an ITR receives a packet on an interface, it will 
  assume the source and destination EID is within the instance configured
  by the instance-id parameter on the new "lisp interface" command. If there
  is no "lisp interface" command, the first database-mapping instance-ID is
  used.

o Updated lisp.config.example to document the "lisp interface" command. And
  to change a bit of formatting to make the "Command Documentation" more
  readable.

o On the ETR side, use SO_BINDTODEVICE to direct decapsulated packets to
  the interface configured with the instance-ID from the LISP header.

o Capture more source-EIDs in pcap since we will have more with multi-tenancy.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.196
                --------------------------------------

o Release date: Thu May 29 17:34:50 PDT 2014

o When MAC addresses are printed, when there is an extraneous "L" and a 
  high-order zero-fill situation, the high-order 4-bits of a MAC address
  are not printed and the "L" is printed.

o If we started the LISP subsystem by doing a "sudo ./RESTART-LISP 443", then
  when the web interface restarts the subsytem, make sure 443 is passed again.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.195
                --------------------------------------

o Release date: Mon May 26 17:10:02 PDT 2014

o In script lisp-provision-site.py, make sure we enable "map-server = yes"
  when configuring a LISP site for the first time when the configuration
  is blank.

o Losing tty when exiting from an ssh session which causes an invocation
  of "sudo ../RESTART-LISP" to not allow a restart from the web interface.
  If "Defaults requiretty" is in /etc/sudoers, tell the user to remoev it
  if they want to restart the LISP subsystem from the web interface.

o Have the web interface launch of "sudo ./RESTART-LISP" happen in a spawned
  process to a return page can be displayed to the user that the LISP subsytem
  is restarting.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.194
                --------------------------------------

o Release date: Thu May 22 11:45:22 PDT 2014

o Some times installations don't work from web interface. Do not use "sudo"
  for "tar".

o Do not use a subshell to call "./RESTART-LISP" and have it write its stderr
  to the restart file as well.

o Fix script lisp-save-logs.py to create a directory so log rotation can work.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.193
                --------------------------------------

o Release date: Sun May 18 13:38:24 PDT 2014

o Need "sudo" on internal call to "./RESTART-LISP".

o Force the SSL-server to do SSLv3. I think this was JohnZ's problem on a
  system that supported only SSLv3 and the LISP bottle server was using 
  SSLv2. I found this while testing old versions of Fedora.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.192
                --------------------------------------

o Release date: Mon May 12 14:13:08 PDT 2014

o When restarting the LISP subsystem, write the restart output to a log file
  in logs/lisp-restart-<date>.log".

o Do not check shell status if install was complete. Check to see if image
  is in current directory.

o Per Jimmy's feature request, rotate log directories. What we do is keep no 
  more than 10 logs directories, so when the 11th is created, the oldest is 
  removed. Note this will remove all old log directories. So if you do not
  want this to happen, move those filenames before loading this code.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.191
                --------------------------------------

o Release date: Fri May  9 16:39:46 PDT 2014

o In build 0.178 I had this bugfix:

  o Found really nasty shift bug. If you shift a 128 bit quantity 120 bits to
    the left and the high order bit is set, it creates a 136 bit quantity and 
    you lose the high-order byte of an IPv6 address. Sigh. Python issue.

  I was totally wrong. It turns out that an address entered by a user ff::/8
  should be internalized as 0::/0. Because IP6 syntax high-order zero fills
  the address to 0x00ff. So if you really want the high-order bits to be set
  for a /8 prefix, you must type in ff00::/8. This is true for any < 16 bit
  quantity you want in the high-order bits. This will be fixed in release
  2.0.2 as well.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.190
                --------------------------------------

o Release date: Fri May  9 10:58:42 PDT 2014

o Make file STOP-LISP have permissions 755 so when called by RESTART-LISP it
  actually runs.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.189
                --------------------------------------

o Release date: Fri May  9 10:38:33 PDT 2014

o In the "show sites" page, when you click on the E.164 EID, make sure the
  URL works. I can't use a "+" in an URL. Fixed now.

o Fix lig output. We were printing the same IID twice in an (S,G) output
  string.

o Build script lisp-py-depend-install.py which will take the lispers.net-
  py-depend.tgz file untar it, untar each module, build each module, and
  test if it can be imported. This should obsolete the need to maintain
  the documentation file how-to-install-py-depend.txt.

o Remove packets.pyo from release since it is now obsolete.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.188
                --------------------------------------

o Release date: Mon May  5 14:04:57 PDT 2014

o This is first mainline release after 2.0 was built.

o Create startup script RESTART-LISP, which will do a "sudo ./STOP-LISP" and
  a "sudo ./RUN-LISP". There is a 1 second delay between the STOP-LISP and
  the RUN-LISP.

o Change button name from "show status" to "system status" on landing page.

o Have system status page allow a super-user to restart the LISP subsystem.
  There is a new button for this that asks for verification before doing so.

o Change lisp-get-bits.pyo to accept a "force" parameter so you are not 
  prompted to be asked to install the image.

o Create a button to install lispers.net code. You can paste in the dropbox
  URL (or any URL where a lispers.net image resides), and install it, then
  you are asked if you want to restart the system. This will streamline, yet
  to another degree loading images, when you want to do them manually. The
  entire process from paste to system up is about 15 seconds. Assuming dropbox
  is moving data quickly.

o Fix build to include symbols when obfuscating lispapi in the main build.
  It was correct in the apps build but if you untar the apps tarball and then 
  the main tarball in the same directory, you cannot call lispapi.api_init(). 
  Which pretty much makes the API useless. This is also fixed in release 2.0.1.

o Add support for E.164 telephone numbers as EIDs. You can attach any of the
  currently supported RLOC types to it. So if you want to make a IP address
  from a telephone number or find the Geo-Coordinates of a telephone number,
  these can be used as RLOCs for a E.164 EID. E.164 EIDs are encoded as 
  AFI = 8 per the Address-Family Indicator registry spec.

===============================================================================

                    lispers.net Release Version 2.0.2
                    ---------------------------------

o Release date: Fri May  9 16:33:18 PDT 2014

o In build 0.178 I had this bugfix:

  o Found really nasty shift bug. If you shift a 128 bit quantity 120 bits to
    the left and the high order bit is set, it creates a 136 bit quantity and 
    you lose the high-order byte of an IPv6 address. Sigh. Python issue.

  I was totally wrong. It turns out that an address entered by a user ff::/8
  should be internalized as 0::/0. Because IP6 syntax high-order zero fills
  the address to 0x00ff. So if you really want the high-order bits to be set
  for a /8 prefix, you must type in ff00::/8. This is true for any < 16 bit
  quantity you want in the high-order bits.

-------------------------------------------------------------------------------

                    lispers.net Release Version 2.0.1
                    ---------------------------------

o Release date: Mon May  5 09:30:55 PDT 2014

o Fix build to include symbols when obfuscating lispapi in the main build. 
  It was correct in the apps build but if you untar the apps tarball and
  then the main tarball in the same directory, you cannot call 
  lispapi.api_init(). Which pretty much makes the API useless.

-------------------------------------------------------------------------------

                    lispers.net Release Version 2.0
                    -------------------------------

o Release date: Thu May  1 14:32:16 PDT 2014

o Last development build was 0.187. This is a renumber of that build.

o This is the second feature release 2.0 of the lispers.net LISP 
  implementation. This software-only product implements a comprehensive set 
  of features conforming to the LISP RFCs published in early 2013 as well
  as some newer Internet Drafts published in 2013 and early 2014. The last
  feature release 1.0 was shipped in November of 2013. It will shortly become
  obsolete and no builds after 1.0.8 will be made.

o Code has been tested on CentOS, Fedora, and Ubuntu Linux distributions, as
  well as heavily on MacOS..

o Features include:

(1)  Add data-plane security support compliant with draft-farinacci-lisp-
     crypto-00.txt.

(2)  Support for multiple "Map-Server and Map-Resolver sets". This allows an
     ITR, ETR, or RTR to use different mapping systems at the same time.

(3)  Allow anycasting of a Map-Resolver so ITRs and RTRs can always get to
     the closest Map-Resolver. By using environment variable LISP_ANYCAST_MR
     before typing in "sudo ./RUN-LISP" you can achieve this on a Map-Resolver.

(4)  Provide script lisp-get-bits.pyo so users can new releases and install
     them in seconds.

(5)  Add dozens more API calls to configure a lispers.net system. You can now
     configure/provision an entire DDT distributed system of Map-Resolvers,
     Map-Servers, and DDT-nodes.

(6)  Provide a user-friendly way to find python Traceback messages in any
     lispers.net process. Just click on the hostname in upper right hand 
     corner of any page.

(7)  Create a "apps" release with python scripts that allow provisioning of
     an xTR, a LISP site, or an entire VPN with all sites. 

(8)  Allow lispers.net systems to be reachable via port 443 instead of port
     8080.

(9)  Single-tenancy VPNs are supported. The first database-mapping command with
     a "instance-id" parameter will be the instance-ID used for the VPN.

(10) NAT-traversal support for encapsulating unicast and multicast EIDs. There
     is auto-detection when NAT-traversal is used. No need for configuration.
     Both the Map-Server and RTRs support control-plane Info-Requests and
     data-palne Info-Requests, respectively. The Map-Server can be configured
     with an RTR list to provide to an xTR so it can choose what RTR it uses
     to pigeon-hole through a NAT device.

(11) Add support for draft-farinacci-lisp-signal-free-00.txt. That is LISP
     sites can join IPv4 and IPv6 multicast groups to specific sources which
     are registered with the mapping system. And ITRs will unicast or multicast
     encapsulate to get such multicast packets to joined sites. There is no
     multicast routing protocols needed to support this. For this release,
     IGMPv1, IGMPv2, and IGMPv3 is supported so host applications can signal
     to the ETR at the LISP site.

(12) Add support for when a multicast group is joined, it is mapped into an
     (S,G) route and registered to the mapping system. This allows IGMPv1 and
     IGMPv2 only applications to work on the LISP overlay.

(13) Various configuration and table mangaement features. You can clear the
     configuration file, you can archive the configuration file, you can clear
     the map-caches on ITRs and RTRs. This can only be done if you are logged
     in as superuser.

(14) Various logging releated features like showing line count of log files,
     allowing you do enter the number of tailed lines of a log file, allowing
     you to search for a string in the number of tailed items you specified,
     the ability to get logging from the data-plane components lisp-itr, lisp-
     etr, and lisp-rtr without printing packets that are forwarded, 
     encapsulated, and decapsulated.

(15) Added rate-limiting of Map-Requests in the ITR and RTR. There will not
     be more than 1 Map-Request sent per 5 seconds.

(16) Add a join and leave tool for IPv4 and IPv6 groups. Create a file in
     format "join-<ipv4-or-ipv6-group-address>" and the ETR process will
     keep joining the group. Add a file "leave-<ipv4-or-ipv6-group-address>"
     and the ETR process will continually leave the group.

(17) Support fast convergence of RLE changes. When an ETR at a LISP site joins
     or leaves an (S,G) entry, the ITR that supports site with source S or
     the RTRs used for NAT-traversal will receive Map-Notify messages and 
     change their map-caches entries to reflect the new RLE. This happens in
     1/2 RTT.

(18) Add APIs to read the ITR and RTR's dynamic map-cache. What is returned
     are unicast and multicast entries with pretty much all the data you
     see on the web-page including statistics.

(19) Support a "system" API to return information about a lispers.net system
     such as uptime, lispers.net version number, LISP subssytem uptime, etc.

===============================================================================

                lispers.net Beta Release Version 0.187
                --------------------------------------

o Release date: Thu May  1 11:39:45 PDT 2014

o Fix script lisp-map-cache.pyo to print "Empty map-cache" when [] is returned.

o Have script lisp-provision-xtr.py allow to provision an xTR behind a NAT
  when the script is run either behind a NAT or from a system in public
  space where http on port 8080 or 443 is allowed through a NAT/firewall.
  That means the script configures an "interface = <device>" for "lisp 
  database-mapping" comamnd clauses.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.186
                --------------------------------------

o Release date: Wed Apr 30 17:30:44 PDT 2014

o When the LISP api cannot connect to a system or when it gets an 
  authentication failure, do not crash the API. Found by Z.

o Fix crash when ITR negotiates a shared-key but the ETR does not return a
  public-key or does not encode DH parameters.

o When doing a RLOC match for setting the Local bit, make sure that the 
  instance-ID in the RLOC structure is NOT tested. This was causing the Local
  bit to be not set and for DH parameters to not be included in the Map-Reply
  RLOC-record. The fix went into lisp_address.is_local().

o Fix problem where the API processors can't add configuration commands to
  lisp.config because they mistakenly think the command is already there by
  looking erroneously at the diff section of the configuration file.

o Provisinging script lisp-provision-xtr.pyo was not enable ITR and ETR, as in
  not setting "etr = yes" and "itr = yes".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.185
                --------------------------------------

o Release date: Tue Apr 29 09:09:18 PDT 2014

o Fix bug in script lisp-map-cache.py to display an (S,G) when the dictionary
  array has key "group-prefix" in it.

o Fix bug in he NAT-traversal logic in the Map-Resolver for processing lig
  requests. When we processed the first proxy-NAT Map-Reply, we removed the
  info source from the data structure so if the count was more than 1 on the
  lig client, we were not replying. Found by Florin.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.184
                --------------------------------------

o Release date: Mon Apr 28 15:41:16 PDT 2014

o Created new py-depend tarball with bottle 0.12.5. We are seeing intermittent
  tracebacks since we added "fast=True". You can find the new tarball at:

  https://dl.dropboxusercontent.com/u/20601620/lispers.net-py-depend-0.x.tgz

o Change STOP-LISP to "killall Python" as well as "killall python". Z had
  some struggles with this based on how he installed python on MacOS.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.183
                --------------------------------------

o Release date: Wed Apr 23 15:36:55 PDT 2014

o Add "en1" to the device list to search for local addresses. JohnZ uses his
  ethernet port on his Mac so we should grab that address.

o Fixes to lisp-sys-info.py and lisp-map-cache.py to accept a return response
  from the APIs when not authenticated to access the system.

o Release an apps tarball with this release.

o Fix typo Donn found in lisp.config.example.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.182
                --------------------------------------

o Release date: Tue Apr 22 09:13:12 PDT 2014

o Create new lisp-cert.pem file in anticipation of release 2.0 and to get 
  clean after the Heartbleed breach.

o Create script "lisp-sys-info.py" that will use the lispapi.get_system() API
  call. Command line parameters are a list of hostnames. If no command line
  parameters used, you are prompted for hostnames. Here is example output:

  dino-macbook-> py lisp-sys-info.py rtr1 rtr2
  Connecting to APIs ... 
  Querying rtr1 ...  done
  Querying rtr2 ...  done

  System info for 'rtr1':
    Hostname: DINO-VM11-RTR1, uptime:  13:55:50 up 1 day, 22:00
    System Load: load average: 0.01, 0.02, 0.05
    LISP-Version: 0.181, LISP-uptime: 1 day, 11:09:13
    LISP-RLOCs: 199.119.73.222, 2607:1f00:0:4::222
  System info for 'rtr2':
    Hostname: DINO-VM12-RTR2, uptime:  13:55:50 up 1 day, 21:58
    System Load: load average: 0.04, 0.05, 0.05
    LISP-Version: 0.181, LISP-uptime: 1 day, 11:08:17
    LISP-RLOCs: 199.119.73.221, 2607:1f00:0:4::221

o With this release there is a 0.182 apps release.

o Create a script "lisp-map-cache.py" that does a similar function as "lisp-
  sys-info.py" but is intended to be sent to a list of xTRs so each of their
  map-caches can be displayed in tabular format.

o Set map-cache entry mapping-source and TTl when it is created via a 
  Map-Notify. This is only the case for (S,G) map-cache entries.
    
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.181
                --------------------------------------

o Release date: Sat Apr 19 23:43:14 PDT 2014

o Add some logging code in the agent process indicating that an API request
  was received.

o Make sure data-plane-logging log messages come in bold face. 

o Do not register link-local multicast groups. Even when they are IGMP
  reported. Found on mrms1 Bonjour/MDNS group 224.0.0.251 being registered
  by dino-macbook.

o On "show status" page, create a button to archive the current configuration
  file. The function was already there but there was no easy way to do it
  unless you knew the URL.

o For Map-Reply source column in map-cache display, print "static" instead
  of "--" for statically configured map-cache entries. And for a TTL that
  was never set, print "forever".

o Fix bug where I was doing a partial match on the URL to find configuration
  data. That is if you did a "https://localhost:8080/lisp/api/map-" it would
  return statically configured map-cache entries. But the command is actually
  "lisp map-cache" so what the tail of the URL should be is "map-cache".

o Support "system" API to return information about a lispers.net system. The
  API call is lispapi.get_system() which returns an dictionary array with
  values. The URL is "https://<host>:8080/lisp/api/data/system".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.180
                --------------------------------------

o Release date: Tue Apr 15 16:04:29 PDT 2014

o The Map-Server was not sending Map-Notifies for the 2nd through n (S,G)s
  that were in the same leave message. We need to use a different nonce so
  we don't think a pending Map-Notify exists for the current (S,G).

o When processing a multicast Map-Notify and a new RLE node is added to the
  LISP, make sure we get the translated port to store in the map-cache. Just
  like we do when processing a Map-Reply.

o Add API support for retreiving map-cache from ITR and RTR. Added functions
  lispapi.get_map_cache() and lispapi.get_map_cache_entry(). The later does
  a longest match lookup to return a single entry and the former returns
  entire map-cache. The internal infrastructure is setup now to do future
  table traversals/lookups for other tables (like the site-cache and 
  referral-cache). Will code on a needed basis.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.179
                --------------------------------------

o Release date: Sat Apr 12 10:21:09 PDT 2014

o Suppress printing data-plane packet errors unless "data-plane-logging = yes"
  is configured. Found some noise in xtr1's logs.

o When an RLE changes, have the Map-Server send a Map-Notify with a Multicast-
  Info LCAF to the configured RTR-list.

o Found bug where multicast Map-Notify messages are not sent when the first
  RLE entry is added.

o RTR now has to listen on port 4342 for Map-Notify messages. The lisp-rtr
  process will do the same functionality as the lisp-etr process does in
  terms of processing and acknowledging Map-Notify messages.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.178
                --------------------------------------

o Release date: Wed Apr  9 15:25:43 PDT 2014

o If there is no "lisp xtr-parameters" clause with no "data-plane-logging"
  command line, the lisp-core process will crash. Found by Paul and fixed now.
  To get the "enable data-plane logging" or "disable data-plane logging" 
  button to take effect you must have the "data-plane-logging" command in
  the "lisp xtr-parameters" command clause.

o Put a "clear cache" button on the ITR and RTR map-cache displays. Only
  "superuser = yes" will be able to use the button.

o Allow "join-<ipv6-group>" to register IPv6 (S,G) entries to the mapping
  database. This is without MLD support on the box. This is a short-cut to
  just rough test IPv6 (S,G) EIDs. The "lisp group-mapping" command already
  accepts IPv6 (S,G) entries.

o Removed debug code in lisp-ms.py. The display problem is due to a 
  configuration file change where a longest match data structure was pointing
  to an old group parent pointer. Since (S,G)s are a trie in a parent trie
  based on G, when all (S,G)s for parent G go away, the G in the parent trie
  needs to go away. Fixed now. Nasty.

o Found really nasty shift bug. If you shift a 128 bit quantity 120 bits to
  the left and the high order bit is set, it creates a 136 bit quantity and 
  you lose the high-order byte of an IPv6 address. Sigh. Python issue.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.177
                --------------------------------------

o Release date: Mon Apr  7 17:46:56 PDT 2014

o Add a line in the "manage logging" pull-down menu to enable or disable
  data-plane-logging. Will only work when ITR, ETR, or RTR logging is also
  enabled.

o Do not issue log message in lisp_map_cache_lookup() unless "data-plane-
  logging = yes". This is causing ITR and RTR logs to fill up.

o Rate-limit data-triggered Map-Request in lisp-itr and lisp-rtr to 1 per
  5 seconds. We will add a more elaborate rate-limiting algorithm later.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.176
                --------------------------------------

o Release date: Mon Apr  7 10:49:01 PDT 2014

o When processing a "interface = en1", do not copy string address into
  lisp_address in lisp_myrlocs[0] because there may have been no RLOCs
  retrieved at startup. This caused a Traceback reported by Paul.

o Found crash in lisp_send_multicast_map_notify() in mrms1. This is great
  news actually because it is telling me that Paul is sourcing multicast. ;-)

o Set "fast=True" on bottle.run() call. This will supporess reverse DNS lookups
  and give generally better performance access to the web interface. Tested
  by Paul with positive results. We'll try it now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.175
                --------------------------------------

o Release date: Sat Apr  5 15:27:14 PDT 2014

o Fix Traceback in lisp-rtr.py when processing an Info-Request.

o Do some fixup to not display entire packet on decap/forward ETR messages. 
  Will help performance and not clutter up debug log output.

o Make pcap filter capture packets to destination port 4341 and not either
  source or destination port. Because when an RTR is encapsulating to an
  xTR from port 4341, the receive code that listens to the ephemeral port
  will receive the packet. We don't want the pcap path to also receive it.

o When looking for a local address on an interface, also consider "eth1". 
  Florin found this problem on his system when doing lig with no eth0 
  interface.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.174
                --------------------------------------

o Release date: Fri Apr  4 17:53:27 PDT 2014

o Fix traceback in lisp_process_igmp_packet() in lisp-etr.py when processing
  IGMPv3 packets from VLC.

o Replace hostname in NAT-traversal cache and send log message when hostname
  changes.

o Created new xTR parameter "data-plane-logging = yes | no". So if ITR, RTR,
  or ETR debug is enabled, it will issue control-plane debugging but not
  log any data packets it is encapsulating, decapsulating, or forwarding.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.173
                --------------------------------------

o Release date: Thu Apr  3 20:43:45 PDT 2014

o Fix critial bug. We were not formatting an Info-Request and Info-Reply
  message properly. We left out 32-bits of 0s. This is a non-compatible
  change. Everyone must upgrade.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.172
                --------------------------------------

o Release date: Thu Apr  3 15:08:26 PDT 2014

o Fix hostname problem in the show display. Didn't overwrite the default value
  with the Info-Request value.

o Add debug code to figure out why the "show sites" command is not displaying
  more-specific (S,G) entries.

o Fix a couple of occurences where calling lisp_mapping() should pass in []
  for a empty rloc_set.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.171
                --------------------------------------

o Release date: Thu Apr  3 14:55:15 PDT 2014

o In the new "NAT-Traversal Info-Request Sources" table, display the uptime
  in red if greater than or equal to 30 seconds.

o Add hostname in Info-Request so RTR can display who is coming through a NAT.
  Fix "NAT-Traversal Info-Request Sources" to display hostname and DNS name
  of NAT (translated address).

o Changed the title "NAT-Traversal Info-Request Sources" to "NAT-Traversed
  xTR Information".

o When a new port number is learned from an Info-Request in an RTR, it must
  go through its map-cache to change each RLOC or RLE-node's encapsulation
  port.

o Found traceback in lisp-etr.py in mrms1. There seems to be IGMP reports 
  coming to the box. But they are incorrectly formated.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.170
                --------------------------------------

o Release date: Tue Apr  1 16:53:58 PDT 2014

o Recoded duplicate RLOC detection in merged set. Have tested when there are
  3 ETRs registering for an (S,G), one that is not behind a NAT, and the other
  2 which are behind a NAT registering with the same RTR RLOC.

o When an RLE contains RLOCs that are behind NATs as well as ones that are
  not make sure we replicate the ones that are behind NATs from port 4341 to
  the translated port. Florin (and I) were not seeing packets replicated by
  the RTR for Jimmy as the ITR source for 7.7.7.7.

o Add the "NAT-Traversal Info-Request Sources" to the RTR output. This will
  allow us to see what xTRs are using the RTR for data-plane NAT-traversal.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.169
                --------------------------------------

o Release date: Tue Apr  1 10:12:47 PDT 2014

o Have the ETR process leave a group quickly when a file named "leave-<group>"
  exists in the current directory also with file "join-<group>" existing. This
  is used as a test tool for the same reason "join-<group>" was created.

o Removed debug code from lisp-ms.py. It looks like registration entries are
  timing out fine now in mrms1.dino.vxnet.com.

o Rewrite lisp_get_partial_rloc_set(), we are not returning the RTR-list to
  Jimmy's ITR.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.168
                --------------------------------------

o Release date: Mon Mar 31 17:34:28 PDT 2014

o Change "enable/disable debugging" button to "manage logging". And only 
  list to turn on or off the LISP components that are enabled.

o In the "show logging" pull-down menu, show which log files debugging is
  turned on for. If the log file is listed and [off] is displayed, then it
  is a component that was once on, issued logs and is now turned off.

o If there is a mix of NAT-related RLOCs with non-NAT in an RLE list for a
  multicast entry that is registered, when all the NAT entries go away, the
  Map-Server will not return an RLOC-set to a requester.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.167
                --------------------------------------

o Release date: Mon Mar 31 14:58:21 PDT 2014

o Introduced bug in 0.165. Had polarity for test wrong when comparing 
  duplicates in rloc-sets.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.166
                --------------------------------------

o Release date: Mon Mar 31 14:53:40 PDT 2014

o On the Map-Server, display if an RLOC in the RLOC-set is an RTR. We will
  use the convention of 254/0/255/0 as the up/uw/mp/mw values. 

o Fix bug in lisp_rloc.copy_rloc_records() that caused mrms1 to get a
  Traceback.

-------------------------------------------------------------------------------


                lispers.net Beta Release Version 0.165
                --------------------------------------

o Release date: Mon Mar 31 14:26:09 PDT 2014

o After decapsulation, do not do a database-mapping lookup if the inner
  destination address is a multicast address. Found by Florin.

o When merging locator-sets in the map-server, do not merge duplicate records.
  I found in mrms1 that there were two RTR records for the same RTR in the 
  merged set.

o Leave some debug code in to test timeouts of site entries. There is an
  intermittent failure I cannot pinpoint.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.164
                --------------------------------------

o Release date: Sat Mar 29 18:40:04 PDT 2014

o If any LISP process cannot obtain any local IP addresses (to be used as
  RLOCs), then have the process shut down.

o Add eth1 through eth6 to the device list to search for IP addresses.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.163
                --------------------------------------

o Release date: Fri Mar 28 17:51:56 PDT 2014

o Give force-nat-proxy and force-proxy-reply preference over proxy-replying
  that is being requested. This happened for the (S,G). The ETR requests
  for proxy replying so it took precedence over the configured force-nat-proxy-
  reply. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.162
                --------------------------------------

o Release date: Fri Mar 28 17:07:12 PDT 2014

o Found a nasty problem where RLE entries were being shared by the parent
  as well as the child. That was leading to strange merge symptoms on the
  Map-Server.
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.161
                --------------------------------------

o Release date: Fri Mar 28 11:54:26 PDT 2014

o When merging individual registrations for (S,G) entries, merge in all RLOC
  records (that means both the RLE record and the RLOC record that has the
  RTR address).

o Do not display "no-address" in RLOC columns. Could be confusing that there
  is some error.

o Have a "exclude none" mean a "join all" ala Florin's comments.

o Fix replication on RTR. As an RTR we were checking the RTRs presence in
  the RLE list. Since it was not found, it dropped the packet. Now if it
  doesn't find itself and the RLE nodes are level 128, put them in the
  forwarding list to be used for replication.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.160
                --------------------------------------

o Release date: Thu Mar 27 18:28:17 PDT 2014

o Put stats in database-mappings so in the ETR display, we can show the number
  of packets being decapsulated.

o Make the database-mapping table show different contents when shown from the
  ITR display versus the ETR display.

o Fix up some IGMP logic. Process IGMPv1 reports as well as IGMPv2 leaves.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.159
                --------------------------------------

o Release date: Tue Mar 25 17:07:25 PDT 2014

o Allow multiples sets of map-resolvers and map-servers use the same address
  if one wants to use different parameters for each set. Right now the
  data structure uses address and not a (name, address) tuple for the 
  dictionary array.

o Make sure one ms-name or mr-name for a "lisp database-mapping" command is
  applied to all EID-prefixes.

o Change column header from "RLOC Address" to "RLOC Record" because in some
  cases, there is no RLOC address for the EID but maybe just geo-coordinates,
  ELPs, or RLEs.

o Do not display an instance-ID in the ETR display. Because it is not 
  relevant. The IID is decided based on the database-mapping command and in
  the future based on the interface an IGMP report is recevied on. Found by
  Florin.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.158
                --------------------------------------

o Release date: Sat Mar 22 09:44:49 PDT 2014

o Duplicate entries are being registered in the map-server. This happens for
  registering (S,G) routes. Add method lisp_address.zero_host_bits() and use
  it when adding prefixes to lisp_cache()es. Found by Paul.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.157
                --------------------------------------

o Release date: Fri Mar 21 09:49:02 PDT 2014

o Support processing multicast Map-Notify messages. A multicast Map-Notify
  message is one that has (S,G) encodings in the EID-records of the the
  message and RLE encoded RLOCs in the RLOC-records of the message. It is
  required for a multicast source-site to configure the map-server with
  "want-map-notify = yes" to indicate that all EID-prefixes it is registering
  will not only be ack'ed by the map-server but when the S in (S,G) matches
  the EID-prefix being registered, then a multicast Map-Notify is sent by the
  map-server to the lisp-etr process. The lisp-etr process gets the message
  to the local lisp-itr process to update the (S,G) map-cache entry when
  there are RLE changes. This completes the first feature phase of implementing
  draft-farinacci-lisp-signal-free-multicast-00.

o Fix which socket lisp-etr sends on so it can receive Map-Notify messages
  from the Map-Server.

o Remove internal lisp-etr feature added in release 0.149. Based on the 
  Map-Notify bug in the above bullet, I had to undo this feature. To get the 
  equivalent functionality for testing, use multiple VMs on your OS.

o Bold face "to <address>" and "from <address>" in debug output for quick
  spot viewing.

o Bold face "site not found" in debug output so easy to spot when someone is
  registering to a map-server when they shouldn't be.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.156
                --------------------------------------

o Release date: Fri Mar 14 16:10:39 PDT 2014

o Display output statistics for a map-cache entry with no RLOCs. For instance,
  a native-forward entry.

o Change "Forward" to "NAT-Forward" in debug output when lisp_etr_nat_data_
  plane() is forwarding versus lisp_etr_data_plane().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.155
                --------------------------------------

o Release date: Fri Mar 14 09:53:08 PDT 2014

o Free lisp_packet() in lisp_itr_data_plane() and lisp_rtr_data_plane().
  Thought this was the reason for the performance issues on rtr1. But it
  doesn't hurt to remove the memory when we know for sure, it won't be used
  again.

o Do not swap fragment field on Linux machines. So the UPCt were right, Dino 
  was right, but UPC guys (and Jimmy) were on stock Linux machines and Dino
  was on MacOS so IP_HDRINCL raw sockets behave differently when it comes
  to swapping bytes in a 16-bit quantity in the IPv4 header.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.154
                --------------------------------------

o Release date: Thu Mar 13 16:17:59 PDT 2014

o When keyword search is not found, do not display a blank page.

o Count the number of occurences matched when doing a search through logs
  and display when presenting the before and after data with the matched
  lines.

o Allow URL ".../lisp/search/log/<log-file>/<num-tail-lines>/<keyword>" to
  get you directly to a search display.

o Remove "show process status" button and combine output in "show version".
  Change "show version" button to "show status".

o Move "show configuration" and "clear configuration" to the "show status"
  output page. Now we have less clutter on landing page.

o Made a few estetic changes to "show status" output.

o Turn off automatic rebinding for a send socket. Use it for testing only.
  If not careful, it breaks NAT-traversal continuity.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.153
                --------------------------------------

o Release date: Wed Mar 12 18:13:36 PDT 2014

o Added new feature to "show logging". On each page where the log is shown,
  there is a search bar. For the number of lines being tailed from the log
  file, we will search for your keyword, display 10 lines before and after the
  matched keyword and highlight the matched keyword in red. For every 
  occurence, put a <hr> in the html output.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.152
                --------------------------------------

o Release date: Wed Mar 12 15:22:59 PDT 2014

o (S,G) entries are being deleted but the parent pointer is being lost so
  when they are reregistered, they are not put in the site cache. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.151
                --------------------------------------

o Release date: Tue Mar 11 17:13:25 PDT 2014

o Register (S,G) RLE entries with global addresses. And make the ITRs replicate
  to RTRs. The RTRs will replicate to RLEs they can access.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.150
                --------------------------------------

o Release date: Tue Mar 11 15:51:29 PDT 2014

o Use default instance-id (from database-mapping command) as a temporary
  measure to allow (S,G)s to be registered within a specific VPN. I will
  want to test this from my laptop. That is combine all many features into
  one test deployment. That is registering (S,G)s with a VPN across NATs.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.149
                --------------------------------------

o Release date: Tue Mar 11 11:17:27 PDT 2014

o Add support for draft-farinacci-lisp-signal-free-multicast-00.txt.

o Create 'lisp group-mapping" command which will take an IGMPv2 report for
  a group address and allow n number of sources to be configured so (S,G) pairs
  are registerd to the mapping system.

o Have lisp-etr register (S,G) entries to the mapping system ala draft-
  farinacci-lisp-signal-free. Register with the merge-bit=1, want-map-
  notify=0, and proxy-map-reply=1. Use RLE for encoding RLOC addresses and
  use Multicast-Info LCAF for EID encoding. Use level 128 for RLE encoding
  of ETR's RLOC address.

o Have the map-server merge multiple (S,G) registered mapping entries and 
  have it proxy-reply to the ITR.

o ITR and RTR can encapsulate multicast packets in unicast to ETR's RLOCs
  registered with level-128 RLE encodings.

o Put a feature in the lisp-etr process. Where if you create files in the
  lispers.net directory in the format of "join-<group>", then an internally
  groups are joined to the protocol machinery used to register to the mapping
  system. This is used as a test tool.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.148
                --------------------------------------

o Release date: Thu Mar  6 09:11:58 PST 2014

o When a public address is on an "interface = <device>" and xtr-parameter
  "nat-travesal = yes", store the global RLOC in the RLOC record of a 
  database-mapping command so it can be registered.

o When displaying ELP nodes, use "R" when the address is an RLOC and "r" when
  the lookup-bit is set to make it look like a EID. It was reversed.

o When reteriving a local address from the kernel to do the control-plane, 
  make sure we do not pick an address that is used as an EID. Otherwise, when
  we originate control-packets, the pcap will receiveing and try to forward
  the packet. This will generally lead to a melt down and usage of high CPU
  utilization. ;-)

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.147
                --------------------------------------

o Release date: Mon Mar  3 03:14:27 PST 2014

o Action value for map-cache entry not returned to lisp_rtr_data_plane() so
  rtr1 was not natively forwarding a packet it decapsulated for a non-EID
  destination.

o In RTR output print "decap" when a packet is received.

o To reduce vertical real estate in the map-cache display, only display two
  lines of RLOC stats and use the hover pointer to display what we have now
  (which is packets, bytes as well as pps and bit-rate).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.146
                --------------------------------------

o Release date: Thu Feb 27 15:14:52 PST 2014

o Do not call socket.gethostbyname() if a numeric address is past to lisp-lig
  and lisp-rig. This will avoid the DNS problem Jimmy is having on CentOS.

o On the ETR database-mapping table display when "no-address" is associated
  with an RLOC and there are other RLOC-records, put in a "<br>" in the output.

o (S,G) entries are not getting the instance-ID stored for group but are for
  the source. So registrations for [254](S,G) in mrms1 are not happening.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.145
                --------------------------------------

o Release date: Tue Feb 25 11:09:58 PST 2014

o Need to swap the frag-offset 16-bit field in the IPv4 header. The raw
  socket interface used in lisp-etr during decapsulation requires it. I will
  need for the UPC guys to test this. This could be a generic Linux versus
  MacOS difference.

o Also with this release we noticed that net.ipv4.ip_forward needs to be set to
  0 in Linux kernel on the xTR. Otherwise, the ITR gets duplicate packets when
  receiving from an EID source.

o Fix bug where incorrect EID syntax for lig and rig when entered via web
  interface or command line will cause a traceback in lisp-lig.pyo and lisp-
  rig.pyo. Found by Jimmy when he accidentally typed in a prefix instead
  of an address.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.144
                --------------------------------------

o Release date: Sun Feb 23 23:08:33 PST 2014

o Convert lisp.debug() output in red angle brackets for the web interface
  "show logging" output.

o Decode packet encapsulated from ITR behind NAT. We need to check the source
  UDP port for 4341 to parse correctly. Found in xtr1.dino.vxnet.com.

o Some debug code to find out why we are getting duplicate ICMP echo-replies.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.143
                --------------------------------------

o Release date: Sat Feb 22 12:55:50 PST 2014

o Change "show logging" pull-down menu to display, by default 100 lines in
  pretty format. For each line in the menu item, show the number of lines
  in the log file. Now the URL will be "lisp/show/log/<process>/<num> so
  if the user wants more than 100 lines they can type it in the URL.

o Fix byte-swap problem when lisp_etr_nat_data_plane() is decapsulating
  packet. Since the kernel is stripping outer header, we need to know there
  is no lisp_packet.outer_version set from parsing since the lisp-etr process
  didn't get the outer header. Since we don't have this and want to send to
  a raw socket, we must swap the bytes in the total-length field of the IPv4
  header.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.142
                --------------------------------------

o Release date: Fri Feb 21 13:54:57 PST 2014

o Fix lisp_mapping.select_rloc() to return 4 values in some corner cases. This
  was causing tracebacks in the ITR and RTR data path.

o Have Map-Server NAT-proxy Map-Reply with TTL of 15 minutes (for now). That
  will allow mobility for the "power-down and connect later" use-case when
  moving behind NATs.

o Print out LISP header in lisp_etr_nat_data_plane().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.141
                --------------------------------------

o Release date: Fri Feb 21 11:58:09 PST 2014

o After clearing the map-cache in the ITR and RTR, have the web page have
  a link back ot the "/show/itr/map-cache" and "/show/rtr/map-cache"
  displays.

o When displaying negative map-cache entries, the Map-Reply source was 
  being displayed in the RLOC address column. Fixed now.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.140
                --------------------------------------

o Release date: Thu Feb 20 18:25:27 PST 2014

o Create a not-so-advertised hidden URL to allow a user to create an archive
  of the running configuration file lisp.config. It will be saved to 
  lisp.config.archive in current directory.

o Have lig accept "[<iid>]<eid>" format so we can send Map-Requests for an EID
  in any VPN (instance-ID). Do same for "rig".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.139
                --------------------------------------

o Release date: Wed Feb 19 11:42:19 PST 2014

o In the lisp-itr process, get the incoming interface by interogating the
  destination MAC address when capturing packets to encapsulate. We need the 
  input interface so we can assign an instance-ID for the encapsulated packet.

o Have lisp.debug() output display arrows in red so I can find them and take
  them out of production code easier.

o When the lisp-core process sends an IPC message and receives a response
  from a process it is not expecting, drain the IPC queue, so we can get
  in sync again.

------------------------------------------------------------------------

                lispers.net Beta Release Version 0.138
                --------------------------------------

o Release date: Wed Jan 29 20:58:53 PST 2014

o Change Info-Request message interval from 20 to 15 seconds.

o If we are using "interface = <device>" for a database-mapping RLOC, update
  the lisp_myrlocs() as well so sending packets in the control-plane can
  match the private address used that is being translated. The registration
  side (ETR-side) can get new global RLOCs to the mapping system within 15
  seconds of reconnecting to a new NAT.

o On the ITR side, send 15-second interval Info-Requests to the Map-Resolver
  so we can install a default route to the RTR the Map-Server tells us about.
  We will install an IPv4 and IPv6 default route with the rtr-list returned
  from the Map-Server. The ITR only sends control-plane 4342 Info-Requests.

o Fix typo in lisp.config.example "nat-traversal" mis-spelling. This is causing
  lisp.config files to be built with bad command syntax.

o Show configured databaase-mappings in the lisp-itr process so we can inspect
  what the translated local RLOC is from Info-Requesting to the Map-Resolver.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.137
                --------------------------------------

o Release date: Mon Jan 27 10:44:24 PST 2014

o Swap the 16-bit flags field and the 16-bit AFI field in the ELP LCAF Type.
  This brings the lispers.net implementation conformant with draft-ietf-lisp-
  lcaf-04.txt. This is not a compaible change with release 1.0. So we will
  not interoperate ELP between 1.0 and post 1.0 releases.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.136
                --------------------------------------

o Release date: Fri Jan 24 10:12:52 PST 2014

o Allow a "interface = <device>" specification for an "rloc" subclause so
  an ETR can obtain its local private address anytime it changes. Store
  the device name and print in the "show database-mapping" ETR display. This 
  allows a lispers.net to move from one NAT to another (or get an address 
  reassignment from the same NAT), keeps it registration up with the 
  Map-Server, and its encapsulation port state up with the RTR that is sending
  packets to it. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.135
                --------------------------------------

o Release date: Wed Jan 22 20:36:19 PST 2014

o When we decapsulate a packet get instance-ID from LISP header and store
  in inner source and destination lisp_address()es.

o Fix string to be "empty" instead of "emp" when parsing an Info-Reply packet
  and printing its contents.

o Copy inner destination IID to LISP header in ITR and RTR.

o Support clearing the ITR or RTR map-cache. But do not put this in an 
  easily accessible button. We want this to have judicial use. So like
  the corollary 'lisp/show/itr/map-cache' and 'lisp/show/rtr/map-cache' URLs
  there will be 'lisp/clear/itr/map-cache' and 'lisp/clear/rtr/map-cache' URLs
  as well.

o Send an Info-Request to the first Map-Server when it is configured. But wait
  3 seconds for all the database-mapping commands to be configured. This way
  we can see if there were any locally configured RLOCs that are private
  addresses.

o Send Info-Requests to the RTR with source port as ephemeral rather than from
  4342, otherwise, the lisp-core process would have to process data packets
  coming to the ETR behind a NAT. The NATs will translate ephemeral ports just
  fine and when they translate back for returning packets, the packets will
  go to the lisp-etr process who is listening on that ephemeral port.

o Create lisp_etr_nat_data_plane() that deals with decapsulated packets 
  differently compared to when they come in via the pcap interface when
  NAT-traversal is not used. Since the packets are coming in on a ephemeral
  socket, the kernal will strip the outer network layer header and UDP header
  leaving the LISP header and EID payload for the lisp-etr process.

o Have RTR update the map-cache's RLOCs when the port number changes for
  a cached global RLOC address.

o In the 16-bit fragment field in the IPv4 header we were swapping because
  HDRINCL documentation says it needs swapping where the UPC guys showed it
  didn't and hence the frag-flags and frag-offset fields were messed up.

o Make lisp-get-bits.py check to see if file exists before overwriting it.
  If user says don't, we exit the script. Otherwise we remove the file and
  continue with installation.

o Do not print "all" on map-resolver and map-server display. It could be
  confusing when multiple MR or MS sets are not used.

o Put local RLOCs on ITR and ETR display on one line to save more vertical
  space.

o Move EID lookup before the map-cache table display in the ITR and RTR's
  web pages.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.134
                --------------------------------------

o Release date: Fri Jan 17 11:18:43 PST 2014

o NAT-traversal is working on an ETR. That means at the time we want to 
  send a Map-Register we find a local private address, we will construct
  and send a Info-Request. When the Info-Reply is returned we cache the
  translated information (and print it out in the "show database-mappings"
  display). If a local non-private address is found and we have the 
  "lisp xtr-parameters" subcommand "nat-traversal = yes" set, we will also
  do the above procedure. RTR support is not complete. So right now, a
  global RLOC is registered with the mapping system but the translated port
  is not.

o We are taking a different approach (simpler with better performance) on
  doing NAT-traversal then what is described in draft-ermagen-lisp-nat-
  traversal-04.txt. We will use the same packet formats with the exception to 
  Data-Map-Registers and Data-Map-Notifies which we believe are not needed. 
  The basic design goes like this:

  (1) ETR sends Info-Requests on port 4342 to the Map-Server to obtain its
      global RLOC and a list of RTRs that the Map-Server provides from a
      configured list.

  (2) ETR sends Map-Register messages to the Map-Server with a combined 
      locator-set that contains its global RLOCs and the RLOCs for the RTRs
      it has learned from (1).

  (3) ETR sends Info-Requests on port 4341 to the RTRs it learned from the
      Map-Server so NAT/stateful-firewall state can get created.

  (4) When a Map-Request comes to the Map-Server for the ETR's registered
      EID-prefix, the Map-Server will proxy-reply. It will send the RTR-list 
      to the requestor if the requestor was not one of the RTRs. If the 
      requestor was an RTR, the Map-Server returns the global RLOCs of the ETR.

  (5) For encapsulation to the ETR from the RTR, the RTR gets the RLOC from
      the mapping database and couples it with the translated port it learned
      about in the Info-Requests sent to 4341 by the ETR. That is how packets 
      will get through NATs/stateful-firewalls.

o Print tracebacks to stdout as well as the logfile. Good for manual testing
  when looking at xterm output.

o Print all information from a Info-Reply so we can tell what the Map-Server
  returned.

o Put a "clear configuration" bottom on the dashboard page so super-users
  can clear the configuration. A verification message is asked before
  clearing and a copy of lisp.config is stored in ./lisp.config.before-clear.

o Do not process a packet in lisp_itr_data_plane() from a source that matches 
  a database-mapping entry and is our address obtain via lisp_get_local_
  addresses(). We were seeing Map-Requests sent by lisp-itr being received
  in the data-plane. Will drop packets with a destination port 4342 in
  this case. In other cases, we may want to forward locally sourced packets
  from the local EID (when an xTR pings an EID that it needs to encapsulate).

o Put in a temporary instance-ID/VPN classifier. We'll be single tenancy and
  use the last database-mapping instance-ID as the default instance-ID for
  lookups in lisp-itr.

o Create Map-Server command "lisp rtr-list" command to return the RTR list
  in Info-Reply messages. Used for NAT-traversal.

o Have ETR send Info-Requests to port 4341 to learned RTR-list from Map-Server.
  This opens up state in NAT devices.

o Create an encapsulation port cache per global RLOC so the encapsulation ports
  are available when the RTR receives a Map-Reply from the mapping system
  with the global RLOCs of the ETR behind a NAT.

o Add Map-Server feature "force-proxy-reply-for-nat = yes | no" which will 
  cause the Map-Server to return a Map-Reply with the global RLOCs for an ETR 
  behind a NAT when an RTR sends a Map-Request and returns the RLOCs of the 
  RTRs when a non-RTR sends the Map-Request.

o Fix traceback that Albert found while doing interoperability testing with
  NX-OS and IOS.

o Add APIs lispapi.add_ms_map_server_peer() and lispapi.delete_ms_map_server_
  peer().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.133
                --------------------------------------

o Release date: Sun Jan 12 21:59:56 PST 2014

o Created xTR provisioning script lisp-provision-xtr.py so database-mappings,
  map-resolvers, and map-servers can be configured in a vanilla system. So
  Now you can confiugre map-servers, map-resolvers, and xTRs individually or
  you can configure a VPN which configures all LISP components as one unit.
  These scripts are lisp-provision-site, lisp-provision-xtr, and lisp-
  provision-vpn respectively.

o Before doing an API put or remove of any clause, grab the configuration
  file lock. Found while doing provisioning tests with beta testers.

o Fix a couple of undefined names pyflakes found.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.132
                --------------------------------------

o Release date: Tue Jan  7 09:38:48 PST 2014

o With this release, we are also releasing an apps release compatible with
  the API changes herein.

o Add 'port' as an argument to lispapi.api_init() so we can connect via SSL
  to systems that filter port 8080.

o Write Map-Server site provisioning script 'lisp-provision-site.py". You
  can add multiple a site with multiple allowed EID-prefixes and all bell
  and whistle knobs.

o Created new API lispapi.build_ms_site_allowed_prefix() to build an array
  of allowed-prefixes to be passed to lispapi.add_ms_site(). Now we can
  use simple calls to build the allowed-prefix and attributes, package them
  all up to one API call from client to server. More scalable, less 
  programmer error-prone.

o Fix lisp-provision-vpn.py to use new lispapi.build_ms_site_allowed_prefix()
  API.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.131
                --------------------------------------

o Release date: Wed Jan  1 16:10:23 PST 2014

o In lisp-rig, get local addresses so an IPv6 destination EID target can
  use a source IPv6 EID in the ECM message. Also fixed in releaes 1.0.8.

o Have exception and traceback information written to logs/lisp-traceback.log.
  This will reduce CPU utilization for scanning for crashes and thread
  tracebacks that may occur. Requested by Paul.

o Found problem with RUN-LISP. Check to see if logs are in the logs directory
  and not in the current directory before saving them. There was some residue
  *.log files in current directory that made the logic work. But there was
  a lurking bug there.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.130
                --------------------------------------

o Release date: Mon Dec 30 16:38:34 PST 2013

o Make sure source EID for a Map-Request that is encapsulated in an ECM is
  the same address-family as the target destination EID. Fixed it this in
  lig, rig, and internally. Also fixed in 1.0.7.

o Fix Traceback when a short IPv6 address is supplied without double-colon.
  Also fixed in 1.0.7.

o Put a try/except clause around dequeuing a map-notify entry. This is to 
  see how often this condition comes up. Also fixed in 1.0.7.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.129
                --------------------------------------

o Release date: Fri Dec 27 10:28:55 PST 2013

o Make sure when doing replacement semantics for the lisp.lisp_db_list[], that
  we replace new contents if it is different than existing contents.

o Botched a auth-key fix in 0.128. This is resulting in Map-Registers not
  being built properly.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.128
                --------------------------------------

o Release date: Thu Dec 26 20:06:54 PST 2013

o Allow LISPAPI_PW_<host> to be set as an environment variable so the 
  value of the environment variable can be used as a password when the
  initial API is called: lispapi.api_init("<host>", <user>).

o Add description to calling parameters for lispapi.add_ms_site(). This is
  so the provisioning script can put the VPN name in the description field
  for the "lisp site" clause.

o Put parameters from a lispapi.lisp_ms_add_site() call in order in the
  resulting "lisp site" command clause in lisp.config.

o Fix bug where a auth-type may not be defined when a auth-key is. And make
  lispapi.add_ms_site() default to a "sha2" authenication-type.

o Fix duplicate database-mapping entries in internal data structure. Make
  lisp_database_mapping_command() do replacement semantics.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.127
                --------------------------------------

o Release date: Mon Dec 23 10:17:27 PST 2013

o I hated the format of the "API Documentation" button output that pydoc
  generated html performed. And now that Jimmy reported bugs on it I have
  decided for pydoc to generate a text file and just have it get displayed.

o Display lispers.net subsystem uptime at the footer next to the version 
  number. In the spirit of more information being available with less clicks.

o This is just a note based on a conversation with Paul. No code changes
  were made for this issue. We are distributing a lispapi.pyo file with the 
  lispers.net tarball. If network applications are written, they can be 
  compiled into .pyo files. When they are the import of lispapi can occur 
  from the lispapi.pyo file. Here is an example to illustrate the issue:
      
   dino-macbook-> ls lispapi*
   lispapi.pyo*
   
   dino-macbook-> python
   Python 2.7.5 (default, Aug 25 2013, 00:04:04) 
   [GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin
   Type "help", "copyright", "credits" or "license" for more information.
   >>> import lispapi
   Traceback (most recent call last):
     File "<stdin>", line 1, in <module>
   ImportError: No module named lispapi
   >>> 
   
   dino-macbook-> python -O
   Python 2.7.5 (default, Aug 25 2013, 00:04:04) 
   [GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin
   Type "help", "copyright", "credits" or "license" for more information.
   >>> import lispapi
   >>> 

o In all web-page footers, put a link to http://www.lispers.net now that there
  is something (not much) there.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.126
                --------------------------------------

o Release date: Thu Dec 19 21:53:46 PST 2013

o Jimmy feature request. Specify the format of an EID when it is required
  in an input form on any web page. When the user hovers the cursor over
  the input rectangle, a pop-up will display documenting what valid formats
  are supported.

o Add 10 more APIs to configure sites in map-servers, database-mapping entries
  in ETRs, map-servers in ETRs, map-cache entries in ITRs/RTRs, and 
  map-resolvers in ITRs. The following are the calls:

      add_ms_site() and delete_ms_site()
      add_etr_database_mapping() and delete_etr_database_mapping()
      add_itr_map_resolver() and delete_itr_map_resolver()
      add_itr_map_cache() and delete_itr_map_cache()
      add_etr_map_server() and delete_etr_map_server()

o Create python script lisp-provision-vpn.py that will configure xTRs, 
  map-resolvers, and map-servers to create a VPN. All that needs to run
  at each component is the lisp-core process. This script will provision
  and configure the VPN at each component. Each xTR will register with the
  configure (iid, eid-prefix) which will be accepted by the map-server. Data
  can start flowing by sending Map-Requests to the provisioned map-resolver.
  Next steps is to read, via the API, the dynamic data structures that are
  created during protocol operation. Later add more DDT support and allow
  to configure shared-secret keys between ITRs and ETRs.

o Add APIs lispapi.enable_itr_security() and lispapi.disable_itr_security()
  to turn on and off data-plane AES encryption.
   
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.125
                --------------------------------------

o Release date: Tue Dec 17 15:24:24 PST 2013

o If lisp.config does not exist when the lisp-core process starts up, then
  create a copy from ./lisp.config.example. This can happen when a first
  time install is done by the user and they do not create a lisp.config
  file. At least the web interface and API can come up to query the system.

o When an Map-Resolver gets a Map-Request, and the Map-Server is co-located
  with no DDT configured, and the EID is not registered, return a negative
  Map-Reply with a 1 minute TTL. If the EID is not found in the site database,
  return a negative Map-Reply with a 15 minute TTL. Found by Jimmy. Also fixed
  in release 1.0.6.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.124
                --------------------------------------

o Release date: Mon Dec 16 20:54:30 PST 2013

o Do not cause Tracebacks when forwward references are used in configuration
  files for ELPs, GEOs, and RLEs. Found in ln2.n-mesh.com.

o When LISP_ANYCAST_MR is in effect, get the address from lo:0 to listen
  on with port 4342. Fixed also in release 1.0.5.

o Print out what we are listening on at lisp-core process startup. Fixed also
  in release 1.0.5.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.123
                --------------------------------------

o Release date: Sat Dec 14 10:10:10 PST 2013

o Do not return 2-tuple in one place in lisp_timeout_site_eid(). This is
  causing traceback in the lisp-ms process in mrms1.dino.vxnet.com. Also
  fixed in release 1.0.3.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.122
                --------------------------------------

o Release date: Sat Dec 14 09:48:24 PST 2013

o Write script lisp-get-bits.py. This will download a lispers.net image
  from a URL specified, as if you want to install it, will untar, and will
  ask if you want to restart the LISP subsystem. Calling syntax is:

      Usage: python lisp-get-bits.pyo <url-for-lispers.net-image>

o Fix Traceback in lisp-ms.py. The fix in 0.121 was not enough. Should be
  fixed now. Fixed also in release 1.0.3.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.121
                --------------------------------------

o Release date: Fri Dec 13 10:36:24 PST 2013

o Change web-page footers to support@lispers.net.

o In RUN-LISP first check if python 2.7.x is on the system before continuing.

o Have lisp-depend.py import Crypto.Cipher.

o Allow environment variable LISP_ANYCAST_MR to be defined in RUN-LISP so
  the lisp-core process can listen on a specific address (an anycast address)
  for port 4342. This is required so responses that are returned by Map-
  Resolvers can get back to map-requests sources behind firewalls/NATs. This
  is required for a scalable and robust deployment of a mapping system. This
  is also fixed in release 1.0.2.

o If we cannot parse a Map-Request do not set lisp_map_request.target_group
  to None. Found in mrms1 while the beta guys were testing. Also fixed in
  release 1.0.3.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.120
                --------------------------------------

o Release date: Tue Dec 10 16:10:55 PST 2013

o First build for next future feature release 2.0. 

o Add data-plane security support. When configured on an ITR and RTR, it
  will encrypt-then-encap to an ETR or RTR. The ETR or RTR will decap and
  then decrypt. Diffie-Hellman keys are negotiated in the Map-Request and
  Map-Reply packets. There is no needed mapping system functionality to make
  this work.

o Add command clause "lisp xtr-parameters" used on ITRs, ETRs, and RTRs.
  Introduce sub-clause command "data-plane-security = yes | no" to enable
  data-plane encryption. The setting defaults to "no".

o Updated lisp.config.example file to document new command clause.

o Do not have a Map-Referral over-write a static referral entry. Such as the
  ddt-root configured in the map-resolver. Fixed also in release 1.0.1.

o When an EID matches an AMS site entry, do not return the site configured
  EID-prefix. It may be course than a previously returned EID-prefix. Return
  the host based EID. Fixed also in release 1.0.1.

o When a (0.0.0.0/0, 224.0.0.0/4) and a 0.0.0.0/0 allowed site eid-prefix
  is configured, one entry overwrites the other so only the (S,G) is displayed
  in the "show site" display page. Both are added to the lisp_cache() data
  structure but in the sorted array used to display, they were one in the 
  same entry making the user think one was not configured properly. Fixed
  also in release 1.0.1

o Allow RUN-LISP to take an argument "dont-timeout" so when the lisp-core
  process is started, we set an environment variable in the RUN-LISP script
  so web authentication can be disabled. That is, don't timeout the SSL cookie.

o There are cases when the DDT is mis-configured where a coarser EID-prefix
  is returned in a Map-Referral when a Map-Resolver has a more specific entry.
  This could be by misconfiguration or by using static referral-cache entries.
  This problem causes an infinite Map-Request/Map-Referral loop. Put in loop
  control where we try this 8 times and then give up. Fixed also in release
  1.0.1.

o Added to how-to-install.txt that python 2.7.x is required for lispers.net
  code to run. Found by Jimmy.

o We can now send Map-Registers and Map-Requests for an EID-prefix to a 
  specific Map-Server and Map-Resolver. This allows one xTR system to use
  multiple mapping systems. You can configure a "ms-name" in the "lisp
  database-mapping" command clause (inside the "prefix" sub-command) to choose
  a map-server (or map-server set) to Register to. For Map-Requests the source
  EID in a packet matches a "lisp database-mapping" command clause (inside the
  "prefix" sub-command) that selects the "mr-name" to select a map-resolver 
  (or map-resolver set) to send Map-Requests to.

o To support multiple mapping systems, added "ms-name = <map-server-name>" to
  the "lisp map-server" command clause to name a clause. Also added "mr-name =
  <map-resolver-name>" to the "lisp map-resolver" command clause so you can
  name the map-resolver clause.

o Change the displays to show ms-names and mr-names. Added descriptions of
  the command changes to the lisp.config.example file.

o Fixed traceback in lisp_send_merged_map_notify(). Fixed also in 1.0.2.

o When a Map-Register is received and we match a prefix that is not configured
  for "accept-more-specifics", debug the fact. Rather than just saying "Site
  not found ...".
  
===============================================================================

                   lispers.net Release Version 1.0.8
                   ---------------------------------

o Release date: Fri Jan 10 09:07:46 PST 2014

o In lisp-rig, get local addresses so an IPv6 destination EID target can
  use a source IPv6 EID in the ECM message. 

-------------------------------------------------------------------------------

                   lispers.net Release Version 1.0.7
                   ---------------------------------

o Release date: Mon Dec 30 16:40:47 PST 2013

o Make sure source EID for a Map-Request that is encapsulated in an ECM is
  the same address-family as the target destination EID. Fixed it this in
  lig, rig, and internally.

o Fix Traceback when a short IPv6 address is supplied without double-colon.

o Put a try/except clause around dequeuing a map-notify entry. This is to 
  see how often this condition comes up.

-------------------------------------------------------------------------------

                   lispers.net Release Version 1.0.6
                   ---------------------------------

o Release date: Mon Dec 23 10:22:47 PST 2013

o When an Map-Resolver gets a Map-Request, and the Map-Server is co-located
  with no DDT configured, and the EID is not registered, return a negative
  Map-Reply with a 1 minute TTL. If the EID is not found in the site database,
  return a negative Map-Reply with a 15 minute TTL. Found by Jimmy.

-------------------------------------------------------------------------------

                   lispers.net Release Version 1.0.5
                   ---------------------------------

o Release date: Mon Dec 16 20:44:03 PST 2013

o When LISP_ANYCAST_MR is in effect, get the address from lo:0 to listen
  on with port 4342.

o Print out what we are listening on at lisp-core process startup.

-------------------------------------------------------------------------------

                   lispers.net Release Version 1.0.4
                   ---------------------------------

o Release date: Mon Dec 16 10:35:15 PST 2013

o LISP_ANYCAST_MR code, for some reason, did not get built in release 1.0.2.
  It is in for this build.

-------------------------------------------------------------------------------

                   lispers.net Release Version 1.0.3
                   ---------------------------------

o Release date: Sat Dec 14 10:24:30 PST 2013

o If we cannot parse a Map-Request do not set lisp_map_request.target_group
  to None. Found in mrms1 while the beta guys were testing.

o Do not return 2-tuple in one place in lisp_timeout_site_eid(). This is
  causing traceback in the lisp-ms process in mrms1.dino.vxnet.com.

-------------------------------------------------------------------------------

                   lispers.net Release Version 1.0.2
                   ---------------------------------

o Release date: Thu Dec 12 14:57:55 PST 2013

o Fixed traceback in lisp_send_merged_map_notify().

o Allow environment variable LISP_ANYCAST_MR to be defined in RUN-LISP so
  the lisp-core process can listen on a specific address (an anycast address)
  for port 4342. This is required so responses that are returned by Map-
  Resolvers can get back to map-requests sources behind firewalls/NATs. This
  is required for a scalable and robust deployment of a mapping system. 

-------------------------------------------------------------------------------

                   lispers.net Release Version 1.0.1
                   ---------------------------------

o Release date: Sun Dec  8 11:27:44 PST 2013

o Do not have a Map-Referral over-write a static referral entry. Such as the
  ddt-root configured in the map-resolver.

o When an EID matches an AMS site entry, do not return the site configured
  EID-prefix. It may be course than a previously returned EID-prefix. Return
  the host based EID.

o When a (0.0.0.0/0, 224.0.0.0/4) and a 0.0.0.0/0 allowed site eid-prefix
  is configured, one entry overwrites the other so only the (S,G) is displayed
  in the "show site" display page. Both are added to the lisp_cache() data
  structure but in the sorted array used to display, they were one in the 
  same entry making the user think one was not configured properly.

o There are cases when the DDT is mis-configured where a coarser EID-prefix
  is returned in a Map-Referral when a Map-Resolver has a more specific entry.
  This could be by misconfiguration or by using static referral-cache entries.
  This problem causes an infinite Map-Request/Map-Referral loop. Put in loop
  control where we try this 8 times and then give up. 

-------------------------------------------------------------------------------

                    lispers.net Release Version 1.0
                    -------------------------------

o Release date: Wed Nov 27 09:58:02 PST 2013

o Last development build was 0.119. This is a renumber of that build.

o This is the first feature release 1.0 of the lispers.net LISP implementation.
  This software-only product implements a comprehensive set of features 
  conforming to the LISP RFCs published in early 2013.

o Code has been tested on Fedora, Ubuntu, and MacOS Linux distributions.

o Features include:

(1)  Unicast support for IPv4, IPv6, and MAC EID address formats in all of 
     xTR, RTR, Map-Resolver, DDT-nodes, and Map-Server LISP network components.

(2)  Multicast support for IPv4, IPv6, and MAC EID group addresses in all 
     of xTR, RTR, Map-Resolver, DDT-nodes, and Map-Server LISP network 
     components.

(3)  Unicast and multicast RLOCs for address-families IPv4, IPv6, and MAC
     addresses as well as the Geo-Coordinates, Explicit-Locator-Path (ELPs),
     and Replication-List-Entries (RLEs) LCAF types.

(4)  Support for the EID Instance-ID type and Instance-ID range for VPN
     support for all address-family combinations.

(5)  lig and rig support for all combination of addresses above. lig and
     rig are supported behind NATs to public infrastructure as well.
      
(6)  Support for python APIs to read and write from/to data structures. 
     Support for a configuration file format for configuring 10s of thousands
     of entries in a scalable fashion.

(7)  An easy to use web interface for showing status of each LISP component
     and data structures which include click-through for more detailed
     information as well as color-coded alerts. Full debug logging support is
     easily accessible and scalable.

(8)  Multiple user accounts can be created with super-user or regular user
     privledges. User passwords typed in browser are never sent in plaintext
     across the network since the web interface is over SSL. 

(9)  The LISP Mapping Database is supported by a Map-Resolver, DDT-node,
     and Map-Server components that run as modular multi-threaded processes 
     which can run on separate machines (or VMs) or colocated.

(10) The data-plane is a software only LISP xTR data-plane that requires no
     dependency on the Unix, Hypervisor, or hardware underneath it.

(11) RTR data-plane support is also provided and can be used as a re-
     encapsulating LISP unicast or multicast router, part of an ELP-node, or 
     part of an RLE-node.

(12) The xTR and RTR data-planes support port 4341 LISP layer-3 encapsulation,
     port 8472 layer-2 LISP/VLXAN encapsulation, and port 4789 VXLAN 
     encapsulation.

===============================================================================

                lispers.net Beta Release Version 0.119
                --------------------------------------

o Release date: Tue Nov 19 13:22:58 PST 2013

o Fix lisp_my_rlocs bad reference in lisp_rtr_pcap_thread().

o Display local RLOCs in ETR display.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.118
                --------------------------------------

o Release date: Mon Nov 18 21:17:20 PST 2013

o In lisp-depend.py check to see if python version on system is 2.7.x. Also,
  column align output.

o Change file redirection to 2>&1 so lisp-core can start LISP components on
  Ubunttu.

o Fixed how-to-install.txt to indicate all the python dependencies required
  by the lispers.net code. I have built a tarball of tarballs that will not
  be released but will be available if customers need it.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.117
                --------------------------------------

o Release date: Thu Nov 14 12:35:33 PST 2013

o Get rid of debug in RUN-LISP script.

o Do not do a lookup in lisp-itr for our own EID. Another source at the site
  may be pinging the ITR or routing through us. This was seen while Dino was
  testing. What was seen is duplicate ping-replies.

o Boldface RLOCs in LISP encap/decap forwarding.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.116
                --------------------------------------

o Release date: Wed Nov 13 15:45:12 PST 2013

o Make joinleave.py work on Fedora where "inet addr:" is not the output
  of "ifconfig". 

o Allow joinleave.py to join (*,G). Tested on Fedora and Ubuntu.

o Both Ubuntu and Fedora can listen to IGMP packets now. We have to use one
  process and in lisp_etr_data_plane() we have to check for protocol 2.

o Allow the environment variable LISP_NO_USER_TIMEOUT set in the RUN-LISP
  script to not timeout any web sessions. By default it is comment out so
  the 600 second internal default can be used. This will be easy in develpment
  mode so you don't always have to type username and passwords.

o Add "x86_64" to the list in lisp_is_x86(). Found that in mrms1, nothing
  could get registered due to byte-swap in the auth-data string.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.115
                --------------------------------------

o Release date: Mon Nov 11 11:18:50 PST 2013

o Add "i686" as a check in lisp_is_x86(). This allows Map-Registers to be 
  sent from an ubuntu ETR to a ubuntu Map-Server. We had a byte-swap problem
  with the authentication-data.

o Use a separate thread to listen on IGMP reports. This will not work on
  MacOS and Fedora. It does work on Ubuntu.

o Do not use pcappy.open_live() in lisp-etr and lisp-rtr if we cannot obtain
  a local address.

o Write joinleave.py script that allows you to join a multicast group, waits
  until you quit the script at which time the group is left. Will add SSM/
  IGMPv3 later (as well as IPv6).

o Have the lisp-itr process "lisp database-mapping" commands so it can set a
  "src net <prefix>" filter for capturing packets from EIDs. For MacOS, we
  will listen on "en0", for anything else we listen on "any". We will look
  for 2 EID-prefixes in any mapping database-command. The first two configured
  will be used. Will do IPv6 later.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.114
                --------------------------------------

o Release date: Mon Nov  4 11:38:43 PST 2013

o When ETR decaps, print decap in data-plane debug output.

o When the map-cache lookup returns native-forward, send the packet out on
  the raw socket. Do not display "No reachable RLOCs found". This fix went
  into lisp-itr and lisp-rtr.

o Bold face the EIDs in the encap, decap, and Forward messages.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.113
                --------------------------------------

o Release date: Fri Nov  1 15:00:13 PDT 2013

o Default pcap threads to 1 and worker threads to 0.

o Make offset 16 when doing pcap on "any" and 14 when doing "pcap" on anything
  else (other than a loopback).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.112
                --------------------------------------

o Release date: Fri Nov  1 13:45:16 PDT 2013

o Change "ELP Node" and "RLE Node" to "ELP Nodes" and "RLE Nodes" in display
  output.

o Fixe when os.getenv() returns None. If it does for LISP_PCAP_THREADS, use
  1 pcap thread if it does for LISP_WORKER_THREADS, use 0 worker threads.

o For a unicast EID lookup, print out that the destination is being looked
  up and not inadvertently display the source address.

o If packet was not received on a loopback interface, make sure you offset
  the beginning of the packet to the network layer header.

o Have lisp_packet..print_packet() print an incoming packet from the ITR.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.111
                --------------------------------------

o Release date: Thu Oct 31 14:17:24 PDT 2013

o Put pcap interface in lisp-itr.py. It will intercept packets based on
  a source prefix. Right now, for temporary testing purposes the source
  prefix is 6.0.0.0/8. Next release it will be all of the database-mapping
  configured EID-prefixes. Right now there seems to be a pcap anomaly where
  destinations matching the default route will not get captured. So for
  testing do a "route add <dest-eid> <local-address>" and packets from any
  source in 6.0.0.0/8 to <dest-eid> will be captured and LISP processed.

o Put environment variables LISP_PCAP_THREADS and LISP_WORKER_THREADS in
  the RUN-LISP script. They are set to 1 and 3 respectively. This is there
  so Paul can change to to any combination of pcap versus worker threads
  for performance testing when he also changes the number of cores he 
  allocates for the lisp-rtr VM.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.110
                --------------------------------------

o Release date: Thu Oct 31 06:35:10 PDT 2013

o When processing NAT proxy Map-Replies, the address and nonce may not be
  in the dictionary arrays if the Map-Reply came in after a timeout of
  the Info-Source. This was the traceback Paul found in lisp-core.py.

o Do not reference mr.last_request_sent_to when the first DDT Map-Request
  is sent. There can be cases where the mr was queued but the Map-Request
  was never sent. Thereby, not setting the mr.last_request_sent_to value.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.109
                --------------------------------------

o Release date: Wed Oct 30 19:41:44 PDT 2013

o Put "no-info" and "debug" in help string of lig usage.

o For testing purposes on a multi-core CPU, use 1 pcap thread and 3 worker
  threads. Keep this in for now.

o Allow "elp-name" in a static map-cache command.

o Add comments to lisp.config.example that any elp-name or rle-name reference
  in a static map-cache entry must be defined before the reference.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.108
                --------------------------------------

o Release date: Mon Oct 28 12:26:17 PDT 2013

o Updated how-to-install.txt file after reinstalling modules that the 
  lispers.net implementation needed for OS X Mavericks.

o Unit tested LISP subsystem with OS X Mavericks. No changes to lispsers.net
  code required.

o Put the how-to-install.txt file in the released tarball.

o Fixed some indentation of commands in each Example section in the fil 
  lisp.config.example.

o There is a case where an IOS map-server will send a negative Map-Reply
  with a dest-port that is ephemeral, which was the source-port of the ECM
  (and not the source-port of the Map-Request like the spec says to do). Have
  the lispers.net lig send an ECM on port 4342. This will not work behind a 
  NAT.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.107
                --------------------------------------

o Release date: Thu Oct 24 11:15:20 PDT 2013

o Put uptime for Map-Request queue items. Display in "show referral" display.

o Print out warning message in the detailed site registration screen when
  some ETRs at a site are registering with the merge-bit and others are not.

-------------------------------------------------------------------------------


                lispers.net Beta Release Version 0.106
                --------------------------------------

o Release date: Tue Oct 22 19:44:05 PDT 2013

o Fix lisp_listen_socket undefined in lisp-lig.py.

o Changes the build procedures to take the py files run them through 
  pyobfusgate and -O compile the obfustated source.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.105
                --------------------------------------

o Release date: Tue Oct 22 08:09:58 PDT 2013

o Comparison of ELP addresses with local addresses was broken. We now place
  "*" and "x" in the right place in an ELP list so we can use properly.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.104
                --------------------------------------

o Release date: Mon Oct 21 20:58:38 PDT 2013

o Allow dashes in DNS names. Do not mistake incorrectly formatted MAC addresses
  as bad DNS names.

o The lisp-core process should deliver a DDT-based ECM to the lisp-mr process
  when the lisp-ms and lisp-ddt processes are not running. This will allow
  rig to work in the scenario that Paul was sending to mr1 (a map-resolver 
  only system).

o Print Map-Reply Source in map-cache displays.

o Fix ELP selection. We were erronously thinking we were last in list when
  we were first in list.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.103
                --------------------------------------

o Release date: Sun Oct 20 19:46:56 PDT 2013

o Bold face the referral-type returned in rig output.

o Fix "Cannot resolve name when an IPv6 "S->G" is used in lig and rig. Also
  when an IPv6 addresses had non-numeric hex digits in it.

o MAC addresses on lig and rig command line did not work.

o Return status value 1 if no Map-Reply was returned for the lig client. Do
  the same for the rig client.

o Fix argument order for lisp_process_map_request(). Could have been the
  map-resolver crash Paul found. Not sure yet.

o Allow multiple "address = "<mr-address>" in a single "lisp map-resolver"
  command clause.

o While getting lig to work behind NATs, I accidentially removed receiving
  on the lisp_listen_socket, which is a listen on port 4342 when the lig
  client is running when there are no other lisp processes running. Great
  bug found by Paul.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.102
                --------------------------------------

o Release date: Fri Oct 18 11:01:48 PDT 2013

o Fix rig client to listen on the port it sends on so Map-Referrals coming
  through NATs can be received by the client.

o Remove DNS name resolution in rig output. Has a consistent with with lig.

o Unit tested LISP encapsulation of layer-2 MAC frames. We will encapsulate
  in port 8472 but can decapsulate from port 8472 or 4789 (new VXLAN port).

o packets.py is sending MAC frames to lisp-itr which are encapsulting them
  in 8472 using an IPv4 RLOC that lisp-rtr is receiving and re-encapsulating
  to lisp-etr using VXLAN port 4789.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.101
                --------------------------------------

o Release date: Thu Oct 17 11:49:37 PDT 2013

o If there are no map-server-peers or ms-auth-prefixes configured, do not 
  show the title and table in the map=-server display.

o When a Map-Referral is being sent in response to a rig request, it was being
  sent to the ephemeral port of the Map-Request and not of the outer ephemeral
  port of the ECM. The Map-Referral sending code only does this when the nonce
  is 0 (that was a signature used to work through NATs but does not 
  interoperate with cisco). This fix will, when the nonce is 0 (or some new
  signature I may add in the future), will now send to the ephermal port
  of the ECM message so the NAT can translate back and get the Map-Referral
  to the rig source.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.100
                --------------------------------------

o Release date: Wed Oct 16 20:03:07 PDT 2013

o Do not try to forward a Map-Request by the map-server to an ETR when there
  is no RLOC address registered. This can happen when an RLOC is one or more
  of a geo, elp, or rle type RLOC. Fixes traceback Dino found in mrms1.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.99
                -------------------------------------

o Release date: Wed Oct 16 15:59:10 PDT 2013

o Do not print source-EID in lig output. It is not useful and it line wraps
  the output.

o Remove debug code I added to debug lig from build 0.97.

o Print an (S,G) in lig output as "[<iid>](<source>, <group>)".

o Fix "lisp  map-resolver" to "lisp map-resolver" in lisp.config.example.
  Reported by Paul.

o Allow a "lisp site" command with "instance-id = *". This allows registration
  of any more specifics using the same registration key (and when "accept-more-
  specifics" is configured).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.98
                -------------------------------------

o Release date: Tue Oct 15 22:52:45 PDT 2013

o Needed to handle eid being None (as we did group being None) in lisp_
  referral_cache_lookup() when called from lisp_retransmit_ddt_map_request().
  Dino found this in mr1.

o Mistyped "rle" variable so RLEs were not being returned to lig clients.

o Print RLEs in lig output.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.97
                -------------------------------------

o Release date: Tue Oct 15 16:20:22 PDT 2013

o Check for group is None in lisp_referral_cache_lookup(). Paul found traceback
  in the map-resolver.

o Accidentially forcing proxy-replying when we shouldn't in Map-Servers.

o Put in debug code to figure out why the map-resolver is not processing a
  nat-proxy Map-Reply. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.96
                -------------------------------------

o Release date: Mon Oct 14 20:56:28 PDT 2013

o Make nat-proxy Map-Requests be sent with source port 4342 so IOS and lispmob
  implementations will respond. We can do this for any DDT infrastructure
  node sine we assume they are on the public side of any NAT device.

o For lig clients, use source port of 4342 when initiated on the public side
  of a NAT device but use ephemeral port when behind a NAT. We do auto-
  discovery of this on the lig client.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.95
                -------------------------------------

o Release date: Mon Oct 14 16:45:25 PDT 2013

o Fix column data on "show referral" for not-authoritative entries.

o Fix traceback in lisp_retransmit_ddt_map_request(). Paul found in mr1.

o Have a proxy-reply encode LCAFs. The current encoding logic assumed that
  geo-names, elp-names, and rle-names were configured. This will not be the
  case on the map-server. So check what is stored in the received RLOC-set
  from the Map-Register.

o Have lig open an IPC socket for "/tmp/lisp-lig" like we did a month or so
  ago for rig. This way it listens directly for Map-Replies being returned
  from IOS or via the lisp-core process which will IPC the Map-Reply to
  the lig client process.

o Have a nat-proxy Map-Requester listen to a ephem port so Map-Replies are
  returned to it. This will be done by the lisp-core process. If Map-Replies
  are returned to port 4342, the lisp-core process already listens to it.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.94
                -------------------------------------

o Release date: Fri Oct 11 19:01:38 PDT 2013

o Fix traceback found in mr2 in lisp_process_map_referral().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.93
                -------------------------------------

o Release date: Fri Oct 11 16:48:07 PDT 2013

o lig requests via nat-proxying Map-Requests do not get processed by ddt-nodes
  and map-servers. The lisp-core process when it gets such packets does not
  loop them back. It thinks it wants to forward to the lisp-etr process which
  is typically not running on the system. So set the M and D bits in the ECM
  header so the loop back of packets can go to the protocol machinery based
  processes.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.92
                -------------------------------------

o Release date: Fri Oct 11 16:00:35 PDT 2013

o No-Response referral-node counter not incrementing when a DDT map-request 
  retransmission occurs.

o When checking for referral loops, consider the group address as part of
  the more-specific check.

o Do not dispaly referral-type on multiple lines in the "show referral"
  display, because it doesn't come from each referral but from the referral
  source. Also, combined "Map-Requests Sent" and "No responses" in the same
  table cell. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.91
                -------------------------------------

o Release date: Thu Oct 10 16:41:20 PDT 2013

o Fix timeout problem removing ams site-eid entries. Paul found traceback in
  ms1 when timing out a more-specific-entry for a configured accept-more-
  specific site EID-prefix.

o Made minor change to output of "show version", but CPU count in same table
  cell as "System Architecture".

o Found cases where an (S,G) site-eid entry would not have a source-cache. This
  would cause both a traceback as well as timeouts to not happen when timeout
  was suppose to happen.

o Make sure the proxy flags from an ams parent are copied to child dynamic
  site entries.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.90
                -------------------------------------

o Release date: Wed Oct  9 16:13:18 PDT 2013

o More unit testing of nat-proxy Map-Replies. Have it working now. 

o Put in a check to test to see before we process the lisp.config file, if it
  has been corrupted.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.89
                -------------------------------------

o Release date: Tue Oct  8 16:15:37 PDT 2013

o Have a Map-Resolver proxy-request a Map-Request that is sourced by an ITR,
  PITR, or lig client behind a NAT. This allows one hole to be punched in
  a NAT device and to the Map-Resolver. The Map-Resolver will receive the
  Map-Reply from who ever generates it since it modifies the ITR-RLOCs field
  to receive the Map-Reply. It will return the Map-Reply to the ITR, PITR,
  or lig client with a destination address and a destination port equal to
  what was translated by the NAT. This feature is mostly for network 
  management purposes so ligs (and rigs) can be performed behind NATs.

o Fix "core = no" not taking effect. This was because we were using the
  multiprocssing library in the lisp-core process. I was able to fix this
  when switching to the threading library. I think this is the reason for
  the intermix of html data in lisp.config. Now that we can share variables, 
  this *could* also fix the 32K entry problem that Paul found.

o Change from using variable "lisp_ipc_lock" in lisp-core process that
  calls multiprocessing.Lock() to keeping it in lisp.py as lisp.lisp_ipc_lock.
  Now we won't have to pass parameters to a lot of places. Since we are using
  threading in the lisp-core process, the concurrency solution can work more
  simply.

o multiprocessing.cpu_count() returns twice as many CPUs on the system than
  there really is. So divide by 2 to display in "show version" output. Only
  happens on MacOS I have found so far. Paul, keep an eye on this.

o Add new sub-command "force-proxy-reply = yes | no" to the "allowed-prefix"
  subclause of the "lisp site" command. Defaults to no when not present. 
  New update to lisp.config.example file.

o Add new sub-command "pitr-proxy-reply-drop = yes | no" to the 
  "allowed-prefix" subclause of the "lisp site" command. Defaults to no when
  not present. New update to lisp.config.example file. "force-proxy-reply" 
  overrides this setting.

o Add new sub-command "proxy-reply-action = native-forward | drop" to the 
  "allowed-prefix" subclause of the "lisp site" command. Defaults setting
  the action in the Map-Reply to no-action. New update to lisp.config.example 
  file. "force-proxy-reply" first overrides this setting then "pitr-proxy-
  reply-drop" will override this setting when "force-proxy-reply = no".

o Have a referral-node who advertises a negative referral-type to be status
  "down" for the EID-prefix. And if it was down and sends a positive Map-
  Referral, change to up status. This may fix the KeyError we have been
  seeing when processing received Map-Referrals in mr1. This loop is serious
  so it needs to be fixed. We were not giving up on round robining referral
  nodes as each reported "ms-not-registered".

o Display up/down status for a referral-node in the "show referral" display.
  This is so Paul can keep an eye on this behavior. We should now see the
  loop go away and see all referral-nodes with "Node Status" of "down".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.88
                -------------------------------------

o Release date: Wed Sep 25 16:45:13 PDT 2013

o Do syntax check on addresses that are inputed into the lookup fields of
  each display. Both Dino and Paul found this in the same day. ;-)

o Use "k in d" rather than "k.has_key(k)". Let's see if it fixes our two
  crashes. Only do it in the two places Paul found crash.

o Fix documentation in lispapi.py.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.87
                -------------------------------------

o Release date: Tue Sep 24 20:24:00 PDT 2013

o When a delegation-hole referral exists in the map-resolver, send back a
  native-forward negative Map-Reply to the ITR. We were sending an action
  of drop and not native-forward.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.86
                -------------------------------------

o Release date: Tue Sep 24 14:29:53 PDT 2013

o Put a "Map-Referrals Sent" column in the DDT and MS displays so we can
  see activity and matches on delegation entries.

o Fix typo in lisp_etr_process_map_request() that causes crash.

o Put "Map-Replies Sent" column in the ETR display so we know which 
  database-mappings we are sending Map-Replies for.

o Negative Map-Referrals for (S-prefix, G-prefix) now work well. Still more
  testing to do.
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.85
                -------------------------------------

o Release date: Tue Sep 24 08:06:14 PDT 2013

o Fix call to lisp.lisp_print_eid_tuple() in lisp_mr_show_referral_cache_
  command(). Crashes when you display the referral cache.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.84
                -------------------------------------

o Release date: Mon Sep 23 21:23:17 PDT 2013

o Do not try to close sockets for error conditions before the socket was
  created in lisp-rig.

o Do a "try: sys.stdout.flush()" to see if it helps "tee" from crashing when
  in manual startup mode.

o Show the map-request-queue in the map-resolver. This is going to be necessary
  not only for operational reasons but to find the current nagging KeyError
  bug we have been experiencing in the mr1.

o Fix bug in lig where a group address of 0.0.0.0/32 was being set when the
  lig user was just ligging a unicast EID. Same with rig.

o Fixed longest match lookups when a source entry is not found but the group
  entry is found. This bug would not allow a map-resolver to use the ddt-root
  for an (S,G) entry where there was no explicit (S-prefix,G-prefix) entry
  in the referral cache.

o When sending a non-authoritative Map-Referral, include (S,G) being requested
  rather than than just S. Found this in mr1 when ddt-root1 send a non-auth
  Map-Referral.

o Run code through pyflakes.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.83
                -------------------------------------

o Release date: Thu Sep 19 21:22:05 PDT 2013

o For negative Map-Referrals, we were printing the referral source in the
  referral column. Fixed now.

o Fix the way (*,G) routes work. When anything is configured with a group-
  prefix and no eid-prefix, we create a (*,G) data structure that holds
  the source tree but always creates a "default route" structure to hold
  a default source. So when this is configured:

  lisp <any-command> {
      prefix {
          group-prefix = 224.0.0.0/4
      }
  }

  What is displayed is (0.0.0.0/0, 224.0.0.0/4) and any "S->G" lookups will
  find this. If "224.1.1.1" is looked up with no source, then we will look up
  and "eid-prefix". But in this context we group address is like any other
  EID-prefix and is used just like any other entry (which could have a 
  unicast or multicast RLOC).

o When the browser user types "<url>/lisp/clear/referral", a superuser
  can clear the referral-cache. DDT-root and static referral-cache entries
  are added back automatically.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.82
                -------------------------------------

o Release date:	Thu Sep 19 10:39:06 PDT 2013

o Fix call to print_eid_tuple() in lisp_mr_process_map_request(). Found on mr1.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.81
                -------------------------------------

o Release date: Thu Sep 19 09:59:06 PDT 2013

o Fix bad reference introduced in 0.80 in lisp_site_eid_lookup(). Found 
  crash in ms1.

o Fix mis displayed 2-tuple for just a regular EID-prefix. Found by Paul
  in message "Received Map-Request ...". Fix other places where print_sg()
  is called where it doesn't need to be called. Replace with lisp_print_eid_
  tuple().

o Dispaly referral-type in lookup display for showing referrals in the map-
  resolver.

o Close /tmp/lisp-rig socket for all exit(1) conditions in lisp-rig.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.80
                -------------------------------------

o Release date: Thu Sep 19 00:23:29 PDT 2013

o When doing lig and rig via the web interface, quote the EID so the form
  "source->group" can be passed to the python command line.

o Allow (*,G) to match when there is no source state for the entry.

-------------------------------------------------------------------------------


                lispers.net Beta Release Version 0.79
                -------------------------------------

o Release date: Wed Sep 18 17:53:21 PDT 2013

o Do exact match lookup in site cache when a longest match finds a site but
  accept-more-specifics is not configured. 

o Advance eid-record past RLOCs for EID-prefix that rejected authentication.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.78
                -------------------------------------

o Release date: Wed Sep 18 17:34:31 PDT 2013

o Do not use "<foo>=yes" in URL. Browsers don't like it. Using "%" instead.

o If authentication fails for one EID-prefix in a Map-Register, it may not
  for another one. So reauthenticate the subsequent ones since they could
  longest match to other sites.
  
-------------------------------------------------------------------------------


                lispers.net Beta Release Version 0.77
                -------------------------------------

o Release date: Wed Sep 18 10:54:42 PDT 2013

o Fix call in lisp_ms_process_map_request() calling lisp_site_eid_lookup().
  It was missing the exact argument. Found by Paul in ms1.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.76
                -------------------------------------

o Release date: Wed Sep 18 09:31:33 PDT 2013

o Allow username switching and if switching to/from superuser, then eithe
  show or not show "show conf" or debug drop-down menu.

o When computing a negative prefix, do not show a 2-tuple address. Found when
  doing a lookup in ddt-root1.

o On the show referral display, swap source referral column with referral
  column. And don't show redundant lines.

o For any global addresses being displayed. Like referral addresses or 
  delegate addresses (which are part of RLOC space) do not display brackets
  for instance-ID of 0.

o Reformat tables so cells are auto-sizing. Makes more use of screen real
  estate.

o Make RLE and ELP display entries more compact.

o Fix map-resolver crash in lisp_cache.lookup(). For some reason there is
  a key in the sorted array but not the dictionary array. But check to see
  if the dictionary array has key before accessing it.
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.75
                -------------------------------------

o Release date: Tue Sep 17 16:15:42 PDT 2013

o Do not show the "show configuration" button when not logged into the web
  interface as a superuser.

o Do not show the "enable/disable debugging" pull-down menu  when not logged 
  into the web interface as a superuser.

o Fix traceback on lisp-mr when processing a Map-Referral. Nonces can get
  to be 64-bits so when converted to strings they append an "L". This causes
  a key to not be found in a dictionary array. Found in mr1.dino.vxnet.com.

-------------------------------------------------------------------------------


                lispers.net Beta Release Version 0.74
                -------------------------------------

o Release date: Tue Sep 17 12:58:28 PDT 2013

o Still sending Map-Requests in rig when ms-not-registered returned.

o Do reverse lookup for DNS in rig output to display EID name and DDT-node
  name.

o Have outer UDP ports display before inner header values in lisp_packet.
  print_packet().

o Make source port entropy in range of 0xf000 to 0xffff.

o Allow to enable or disable core process debugging. Added the 2 APIs to
  allow enabling or disabling. The configuration file now has a "core = 
  yes | no" under the "lisp debug" command clause. Please update your
  configuration files. The file lisp.config.examples has been updated.

o Create pull-down menu to enable/disable debug logging for any component
  that is currently running.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.73
                -------------------------------------

o Release date: Fri Sep 13 21:48:35 PDT 2013

o Do not keep sending to referrals when a negative action or an ms-ack is
  returned. We kept putting the referrals on the pending list and hence
  kept sending Map-Requests until the depth limit was reached.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.72
                -------------------------------------

o Release date: Fri Sep 13 18:47:32 PDT 2013

o Add 8 APIs to allow configuration of the map-resolver and ddt-node. You
  can now add a ddt-root and referral-cache entries to a map-resolver using
  lispapi.pyo as well as adding a ddt-delegation and ddt-authoritative-prefix
  to a ddt-node. Click on "API Documentation" button for details. The function
  names are:

      lispapi.{add,delete}_mr_ddt_root()
      lispapi.{add,delete}_mr_referral()
      lispapi.{add,delete}_ddt_delegation()
      lispapi.{add,delete}_ddt_auth_prefix()

o The above APIs do support a 3-tuple specification including instance-id
  ranges.

o Support the 'follow-all-referrals' in rig. Works as a new keyword on the
  lisp-rig.pyo command line as well as clicking a checkbox on the web
  interface.

-------------------------------------------------------------------------------


                lispers.net Beta Release Version 0.71
                -------------------------------------

o Release date: Mon Sep  9 17:19:21 PDT 2013

o Remove "-oh" from lisp_core_traceback_page() so finding traces is easier 
  (and works).

o When removing an entry from lisp_cache() not only should we remove the key
  from the sorted array (which we were doing) but also remove the key from
  the associative array. This was causing a key to exist in the data structure
  with a None value. No lisp_cache.walk_cache() will not return None values.

-------------------------------------------------------------------------------


                lispers.net Beta Release Version 0.70
                -------------------------------------

o Release date: Sat Sep  7 21:06:25 PDT 2013

o When returning JSON output for an API request, include all sub-clause data.
  For instance when a "prefix {" subclause, the subclause data will be nested.
  So for the following command:

     lisp delegation {
         prefix {
             eid-prefix = 10.0.0.0/8
         }
         prefix {
	     instance-id = 11
             eid-prefix = 11.0.0.0/8
         }
	 delegate {
	     address = 1.1.1.1
	 }
     }

  the following will be returned:

  [ { "lisp delegation" : [{"prefix" : {"eid-prefix" : "10.0.0.0/8"}},
          {"prefix" : {"instance-id" : "11", "eid-prefix" : "10.0.0.0/8"}},
          {"delegate" : {"address" : "1.1.1.1"}}]  } ]

o The map-cache, referral-cache, ddt-cache, and site-by-eid-cache can now 
  support exact and longest match lookups for (S-prefix, G-prefix entries).

o The ITR and RTR data-plane can receive a multicast packet sourced by an EID
  and replicate out a replication list when cached in the map-cache.

o Allow RLE configuration in lisp-itr and lisp-rtr. That way if we create
  static map-cache entries, we can configure them with RLOCs that use RLE
  lists.

o We can now send a Map-Request for a (S,G) from an ITR, to an MR, to a 
  DDT-node, to map-server and to a ETR. And the ETR returns a Map-Reply
  with an EID-encoding of (S,G).

o Signal-less and LISP-RE multicast is working now both in the ITR and RTR!

o While testing I discovered that all pcap threads were receiving the same
  packet and processing it. So this was causing more CPU usage than necessary.
  I put a triage function in each and modulus the millisecond clock so only
  one of the four threads will process randomly. I will add in the future
  a UDP source port range and use the pcap filters to decide which thread
  gets packet. Now they all do and n-1 of them do not process the packet.
  Should be interesting to see how much performance we can get out if this
  one change.

o Print in debug the thread-name when the "Receive ..." message is displayed.
  Good for debugging to see how packet distribution across threads is behaving.

o Make sure the map-server sends an MS-ACK Map-Referral to the map-resolver
  when it is also proxy-replying to the ITR.

o Ran pylint on code base to prep for feature release 1.0.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.69
                -------------------------------------

o Release date: Sat Aug 31 16:42:43 PDT 2013

o Allow a "super-user = yes | no" parameter for the "lisp user-account" command
  clause. Only super-user accounts can create, remove, or change "user-
  accounts" via the lispers.net API interface.

o Allow commands to be added to the configuration file via the API interface.

o Add an API debug to the lispapi.py. Prepend all print statements with 
  lispapi[<user>@<host>].

o Support lispapi.delete_user_account("<username>") which sends a Restful
  Delete to the agent, which will remove the "lisp user-account" clause
  from the configuraiton file. No one can remove a user-account that has
  been configured (locally on the box) as super-user.

o Have the error codes be of the following form. These are error codes that
  the server sends the the client API (and not to the end-user app). They
  are:
  
  [{ <command> : {"!" : "add/replace"} }]
  [{ <command> : {"!" : "delete"} }]
  [{ <command> : {"?" : <ascii-error-string>} }]
  [{ "?" : {"X" : "non-auth"} }]

  These are for Puts and Deletes. For Gets you get back the data you asked for.
  This was already implemented (in a previous release) by typing <url>/api/
  <command> in a browser.

o Put useful links in the documentation section of the landing web page.

o Check to see if lispapi.py is in current directory. If so, run pydoc, 
  otherwise see if there is a pre-built lispapi.html file to display. This
  was found by Paul when a .pyo only system is released. Fixed now, the
  lispapi.html file will be part of the release build.

o Map-Requests now suppor the Multicast Info LCAF Type for (S,G) encodings.
  Map-Replies do not work yet but they will so shortly. Just wanted to get
  an image to Paul sooner rather than later.

o Make the lisp_mapping() data structure for the  map-cache hierarchical so
  we can support a (S-prefix, G-prefix) keyed entry.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.68
                -------------------------------------

o Release date: Sun Aug 25 23:43:03 PDT 2013

o Create a completely new API interface. There is now support for 42 APIs.
  Click on the home page to get a live execution of "help(lispapi)".

o Allow the system to run multiple pcap threads as well as multiple worker
  threads. The latency to enqueue for worker threads is just going to cause
  packet loss and flow-control problems versus taking advantage of parallelism.
  So this release will ship with 6 pcap threads to test performance. So we can
  optimize for 4 cores.

o Added buttons on the landing page to take you to API and Command 
  Documentation.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.67
                -------------------------------------

o Release date: Fri Aug 23 16:41:19 PDT 2013

o Do not display entire returned command name in the lisp-core process. That
  is why we see the entire html when a show command returns output. There is
  no concurrency problem under load. This was happening all the time.

o Bold face Enable/Disable debug message. Change message to "Enable process 
  debug logging" and "Disable process debug logging".

o Now debug commands are processed for all cases when components go up and
  down as well as when the lisp-core process goes up and down.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.66
                -------------------------------------

o Release date: Thu Aug 22 20:20:33 PDT 2013

o Combine Uptime/TTL on the ITR and RTR display.

o Add input statistics on the RTR display.

o Make RTR forwarding parallel. Use 4 worker threads for now with one output
  raw socket.

o Some performance improvements to do less work while decap/encap forwarding.

o Do 5-tuple has for an IPv6 packet to do RLOC selection from a best RLOC-set.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.65
                -------------------------------------

o Release date: Wed Aug 21 15:53:00 PDT 2013

o Create new command "lisp debug" so you can turn on and off debug. The API
  is there so you can do it in a script. Put this in your config file:

        lisp debug {
            itr = yes
            etr = yes
            rtr = yes
            map-server = yes
            map-resolver = yes
            ddt-node = yes
        }

o Have packets accept an input question on how much to delay between sending
  packets. Granularity is in milliseconds.

o Add APIs lispapi.get_lisp_debug() and lispapi.put_lisp_debug().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.64
                -------------------------------------

o Release date: Tue Aug 20 12:59:02 PDT 2013

o Create hidden commands "lisp itr-map-cache" and "lisp rtr-map-cache" so
  we can use different RLOCs fo the same EID-prefix in map-cache entries when
  the ITR and RTR run in the same box.

o Format the stats in the "RLOC Stats" column a little nicer.

o Have lisp_rtr_data_plane() get called from the pcap thread. We can now have
  the pcap thread share the map-cache with the main thread.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.63
                -------------------------------------

o Release date: Tue Aug 20 10:31:48 PDT 2013

o Fix map-cache timeout timer variable in lisp-itr and lisp-rtr. This bug
  means we were run the timer routine only once to time out map-cache entries.

o Put per RLOC stats in for outgoing encapsulated packets.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.62
                -------------------------------------

o Release date: Tue Aug 20 08:52:09 PDT 2013

o Put in pull-down options to display the last 100 lines of any log file.
  And convert to bold where you find text file bold characters.

o Set pcap filter to only accept packets destinted for port 4341 to the
  local RLOC of the RTR (or ETR).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.61
                -------------------------------------

o Release date: Mon Aug 19 18:43:52 PDT 2013

o Don't have lig test local address to be private it if can't find any
  physical addresses. Found this on train from Long Beach to Penn Station.

o Fix Traceback in the map-server. Typo of eid.instance when it should be
  eid.instance_id. I will run pylint to find more of these, in general.

o Fix Traceback when sending an IPC from MR to MS when no ddt-roots configured.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.60
                -------------------------------------

o Release date: Mon Aug 19 15:22:00 PDT 2013

o Bold face EID-prefixes in lig and rig html output. And other places where
  an EID is printed for both web and text window purposes.

o Pass in port number that bottle will listen on for the internal web server.
  It can be supplied on the RUN-LISP commmand as in "sudo RUN-LISP 80".

o Make map-referral timeout in hours not minutes.

o Add debug message in MR when we are jumping back to root when receiving
  a non-authoritative Map-Referral or when the EID-prefix returned is the
  same as the one last used (a DDT configured loop).

o Give a signature for lig and rig nonces. Look for "1" in a specific place
  for "lig" and "2" for "rig".

o Send negative Map-Replies back to ITR from MR to the ephemeral port not
  port 4342. The source port must be 4342.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.59
                -------------------------------------

o Release date: Thu Aug 15 20:44:53 PDT 2013

o If DNS name is mistyped on lig or rig, return gracefully rather than
  crashing.

o Add support for the LCAF Multicast Info Type encoding of EIDs. We can now
  register (S-prefix, G-prefix) from ETR to MS. We can now have an ITR send
  a Map-Request for a (S,G) encoding EID.

o Add support for encoding the LCAF Replication-List-Entry Type encoding for
  RLOCs. We can now register them with (S,G) encoded EIDs from the ETR to the
  MS. And the ITR can process RLOCs with RLEs in them.

o The multicast data-plane still needs to be written.

o When you click on the hostname of any webpage, it will check all log files
  for the running innovation for Tracebacks. You can get to it by the URL
  https://<host>:8080/lisp/traceback.
  
-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.58
                -------------------------------------

o Release date: Tue Aug 13 15:53:31 PDT 2013

o Use dirty_set.pop() rather than dirty_set.remove(). Found by Paul. Our
  token tester.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.57
                -------------------------------------

o Release date: Tue Aug 13 15:54:05 PDT 2013

o Check for entry not equal to none in lisp_cache.lookup_cache().

o The no-address problem in delegation commands turned out to be a more
  serious problem. When we look for all multiple occurences of a clause
  we do not ignore comment lines. This happens only when the configuration
  file is changed when a LISP component process is running. This does not
  occur if the process goes down and comes back up.

o Fix minor bug where the command name (for show commands) was truncated
  on the "Receive ..." debug output line.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.56
                -------------------------------------

o Release date: Mon Aug 12 16:51:53 PDT 2013

o Do not use a indexed array, use a associative array for the dirty-set. 
  Botched last patch.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.55
                -------------------------------------

o Release date: Mon Aug 12 16:40:59 PDT 2013

o There could be additions to a referral-set meaning the new referral is not
  in the old dirty set. So don't try to remove it. Check to see if dirty_set.
  has_key() is true first. Found by Paul in mr1.dino.vxnet.net.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.54
                -------------------------------------

o Release date: Mon Aug 12 15:57:38 PDT 2013

o On the receive debug output, when a command comes to the proess, print
  out the first line of the command so it is easier to debug command related
  problems. Found this while determining why ms1 and ms2 were crashing.

o Fix crash in mr1.dino.vxnet.com when trying to carry a map-request queue
  entry of None through the DDT map-request receive logic. Check for condition
  and issue message, then go to next EID in Map-Referral.

o In lisp-mr.py fix call to lprint(). Make it lisp.lprint().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.53
                -------------------------------------

o Release date: Mon Aug 12 12:23:34 PDT 2013

o Have rig listen on port 4342 when it is run on a system that is not running
  lisp-core.

o Have rig set the "dont_reply_bit" rather than the non-existent "dont_map_
  reply" boolean.

o When rig runs on a system that is running lisp-core, have lisp-core IPC
  Map-Referrals to the rig client. The rig client must open a named socket
  to accomplish this.

o Send and receive Info-Requests and Info-Replies. Now the lispers.net
  implementation can reply to xTRs that are asking for their global RLOC
  when they sit behind NATs. This does not implement the entire functionality
  of the NAT-traversal Internet Draft. But it is a start.

o Have lig send Info-Requests with the ephemeral port used in the enclosed
  Map-Request of an ECM so Map-Replies can  return to the lig client when 
  they sit behind NATs. Works with old style Echo-Requests to NX-OS boxes
  too.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.52
                -------------------------------------

o Release date: Tue Aug  6 16:12:25 PDT 2013

o Put a Map-Request Lookup capability in the lisp-mr display just like we 
  have for the lisp-ddt and lisp-ms process.

o First attempt to interface with the LISP subsystem via a RESTful API. All
  this does (for trial purposes) is read the enable status of the LISP 
  components as well as allowing you to change the enable status. So this
  API can tell you what is running in the box and what to start and stop.
  This will change the configuration file lisp.config when a 'put' call is 
  invoked. Please try it out.

  Here is the simple programming sequence:

  shell> setenv LISPAPI_PW <pw>
  shell> python
    
  >>> import lispapi
  >>> status = lispapi.get_lisp_enable(<host>, <user>)
  >>> status
  >>> <prints dictionary array>
  >>> enable_status = { <build dictionary array> }
  >>> status = lispapi.put_lisp_enable(<host>, <user>, enable_status)
  >>> status
  >>> <prints { "lisp enable" : "!" }" when success and "?" when failure

  Here is an example:

dino-macbook:173> setenv LISPAPI_PW ""
dino-macbook:175> python
Python 2.7.2 (default, Oct 11 2012, 20:14:37) 
[GCC 4.2.1 Compatible Apple Clang 4.0 (tags/Apple/clang-418.0.60)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import lispapi
>>> status = lispapi.get_lisp_enable("localhost", "root")
>>> status
[{u'lisp enable': {u'etr': u'no', u'map-resolver': u'no', u'ddt-node': u'no', u'rtr': u'no', u'map-server': u'no', u'itr': u'no'}}]
>>> enable_rtr = {"lisp enable" : { "rtr" : "yes"}}
>>> status = lispapi.put_lisp_enable("localhost", "root", enable_rtr)
>>> status
{u'lisp enable': u'!'}
>>> status = lispapi.get_lisp_enable("localhost", "root")
>>> status
[{u'lisp enable': {u'rtr': u'yes'}}]

o You can also get "lisp enable" information by specifying the command in
  the URL in the form of "https://<host>:8080/lisp/api/lisp-enable" in your
  browser or 'curl' invocation. You will get a dictionary array returned.

  shell> curl -k -u dino:nancy https://localhost:8080/lisp/api/enable

  {"lisp enable": {"etr": "no", "map-resolver": "no", "ddt-node": "no", 
   "rtr": "no", "map-server": "no", "itr": "no"}}

  This works for any other command so if you want to see the "lisp user-
  account" command, type in URL https://<host>:8080/lisp/api/user-account.
  If there are multiple instances, it will return all of them.

o Authentication is performed when the API is accessed by either a browser,
  curl, or the python LISP API.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.51
                -------------------------------------

o Release date: Tue Jul 30 04:09:08 PDT 2013

o Do not print out entire packet. But do print the headers for encap and
  decap messages, like this:

rtr: Receive 107 bytes from lisp-rtr no-port, data-packet: ...  

rtr: Receive LISP packet, outer RLOCs: [0]1.1.1.1 -> [0]1.1.1.1, outer tos/ttl: 0/116, inner EIDs: [0]153.16.32.1 -> [0]10.1.1.1, inner tos/ttl: 0/116, UDP: 65443 -> 4341, length: 107, decap LISP-header -> flags: Nlevi, nonce: 0xffffff, iid/lsb^C 4341, length: 107, decap LISP-header -> flags: Nlevi, nonce: 0xffffff, iid/lsb: 0x0, packet: 4500006b dfdf0000 76110000 01010101 01010101 ffa310f5 00570000 80ffffff 00000000 45000047 dfdf0000 7611a0b3 99102001 0a010101       

rtr: Found inner IPv4 header 

rtr: Lookup for dest-EID [0]10.1.1.1 found map-cache enrry [0]10.1.0.0/16 

rtr: Send LISP packet, outer RLOCs: [0]1.1.1.1 -> [0]1.1.1.1, outer tos/ttl: 0/117, inner EIDs: [0]153.16.32.1 -> [0]10.1.1.1, inner tos/ttl: 0/117, UDP: 65443 -> 4341, length: 107, encap LISP-header -> flags: Nlevi, nonce: 0xffffff, iid/lsb: 0x0, packet: 4500006b dfdf0000 7511619f 01010101 01010101 ffa310f5 00570000 80ffffff 00000000 45000047 dfdf0000 7511a1b3 99102001 0a010101     

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.50
                -------------------------------------

o Release date: Mon Jul 29 05:45:19 PDT 2013

o Make sure we know what interfaces we are pcap'ing on. And remove the internal
  header as well as a MAC header if it exists.

o Call mc.build_best_rloc_set() for static map-cache entries.

o Issue output message if no reachable RLOCs were found.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.49
                -------------------------------------

o Release date: Sun Jul 28 00:07:42 PDT 2013

o Tell pcappy.open_live() to use "any". But check operating system first 
  since some unixes don't support this.

o Fix traceback Paul found when sending a Map-Request when no IPv6 local
  RLOC is found.

o Put debug in to tell us what we found in the inner header.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.48
                -------------------------------------

o Release date: Sat Jul 27 16:31:31 PDT 2013

o Create logs directory in RUN-LISP script regardless if we are running
  in development mode or in binary mode. 

o Position landing page table in order of "ITR | RTR | ETR" and 
  "MR | DDT | MS". Consistency is king.

o Allow multiple "address" sub-commands within the "lisp map-resolver" command.

o Did a bit of retrofitting for the lisp.config commands. Allow multiple
  "prefix" and "rloc" sub-comamnds within the commands they apply. You can
  also not enter all the parameters of subcommands. We had an mis-ordering
  issue with parameters and entries. All fixed now. This will also allow
  a more efficient xml and json interface.

o Take note, changed sub-command "allowed-rlocs" to "allowed-rloc" for the
  "lisp site" command. Please change your configuration file.

o Call pcappy.open_live() with the interface found for obtaining local RLOCs.
  We will try with interface "lo" to see if pcap will think packets are
  arriving on lo if addressed to the RLOC of lo. Otherwise, we will have
  to capture for all physical ports.

o Do not use lisp_eid_record() and lisp_rloc_record() classes in various
  code loops. It will keep residue in them and leak RLOC information from
  one RLOC to another.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.47
                -------------------------------------

o Release date: Wed Jul 24 07:05:56 PDT 2013

o When the lisp-core process starts the other LISP component processes via
  their .pyo files, the log files is put in the current directory versus
  the logs directory. Hence, the web interface cannot find them.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.46
                -------------------------------------

o Release date: Tue Jul 23 21:28:02 PDT 2013

o For every reference to an extended-eid-prefix tuple encase it in a "prefix {"
  clause. This will allow us to add more tuple elements to a prefix that is
  used for an EID encoding in any control-packet or configuration of the
  mapping system. This change is not backward compatible. The customers have
  been warned about this coming.  ;-)

o Add "group-prefix" as a valid subcommand for reach "prefix {" sub-clause.
  We don't process it yet but want to get the config changes all done first.

o Allow multiple "address" sub-commands to the "lisp map-server" clause.
  Requested by Paul. Each address set will share the other parameters from
  the "lisp map-server" clause.

o This is a temporary fix until we can figure out how to get the crypto
  module to work when called from pyOpenSSL. If we cannot succeed with 
  pyCherrypy, then do not use SSL and just http.

o This is the first release of a mips image that can run on a EdgeMax box.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.45
                -------------------------------------

o Release date: Tue Jul 23 16:00:42 PDT 2013

o Change tarball name to "lispers.net-<arch>-release-...." where <arch> is
  'x86' or 'mips'.

o When you type a partial username name in (like "roo" rather than "root")
  one gets validated with the password for "root". Fixed now. ;-)

o Can't display log files. Fixed now. Had to qualify bottle.static_file().

o Order the selection in "show logging" list to be the same order as the
  rest of the dispaly. Captialize the LISP component name.

o Support "accept-more-specifics" on the map-server. That means lisp site-
  cache entries will be dynamically created when a Map-Register is received
  for a more-specific EID-prefix to an EID-prefix staticly configured in the
  "lisp site" command. The more-specific site-cache entry will time out if
  Map-Registers stop coming for it. This will allow the map-server to support
  ETRs that are mobile (LISP-MNs and data-center mobility).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.44
                -------------------------------------

o Release date: Mon Jul 22 15:36:19 PDT 2013

o Make sure the lisp-cert.pem file is put in the lispers.net tarball. Found
  by Paul.

o Include "pem" in the "egrep -v" so remove-lisp-locks.pyo does not remove
  the certificate file when STOP-LISP is entered. Found by Paul

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.43
                -------------------------------------

o Release date: Thu Jul 18 10:21:19 PDT 2013

o Make the "show process status" button work for non-Darwin operating systems.
  Was not displaying process status for LISP processes.

o Make timeout for cookie session 10 minutes, up from 5.

o Do not select a IPv4 RLOC that is 0.0.0.0. 

o On the ITR and RTR displays, when you hover over the interface, show the
  routing table and not "ifconfig" output. Now tha twe have it when you 
  hover over the hostname in the upper right hand corner of every display.

o Have the web interface use SSL for connections to https://<foo>:8080/lisp
  and the URL hierarchy below /lisp. Passwords that come across (as well as
  all other management data) are now encrypted.

o Passwords are now encrypted in the lisp.config configuration file. Not
  supported yet for "authentication-key" passwords. Reason being is you need
  a two-way hash which is needed on the ETR to take a config file password
  that is hashed and reversed to store as part of the signed Map-Register.
  Same for the Map-Server. Will get to this later.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.42
                -------------------------------------

o Release date: Mon Jul 15 19:59:25 PDT 2013

o When you hover over the host name in any display, you will get a complete
  "ifconfig" output.

o If we do not find any RLOCs on a loopback interface, check the other 
  physical interfaces on the box. Found this on xtr1.dino.vxnet.com.

o When you try to click on a LISP component button and it is not running,
  display hover over message rather than going to a web page. Less load on
  server for noop clicks.

o Support username/password authentication. When you go to any lisp page under
  the /lisp... URL hierarchy, you will be prompted with a login page. Once
  authenticated your web client will use a cookie. The cookie will time out
  after 5 minutes. Next step is to run bottle over SSL so passwords can be
  enrypted.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.41
                -------------------------------------

o Release date: Sat Jul 13 11:16:19 PDT 2013

o Indent "geo' and "elp" lines in lig output (when displayed via web 
  interface).

o In the ITR and RTR web page, display what local RLOCs were found and which
  interface they were taken from. When you hover over the interface, output
  from ifconfig for that interface appears.

o Print "*" or "x" markers only in ITR and RTR and not in mapping system
  components.

o Fix bug where the next ELP node after our local RLOC was not selected.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.40
                -------------------------------------

o Release date: Fri Jul 12 19:10:39 PDT 2013

o IOS encodes an IID mask-length regardless if there is an EID appended to
  the EID or not. The mask-length is only used when an instance-ID range is
  encoded, which means there is no AFI prefix encoded that follows. So when
  the AFI is not 0, and the IID mask-length is not 0, do not use it for the
  extended-EID prefix stored. Found by Paul while doing DDT interoperability
  testing with IOS.

o Support using ELPs in the lisp-itr and lisp-etr processes. A "*" will be
  printed in an elp display line for th elp-node that will be used for
  encapsulation. For instance if ELP (A,B,C) exists, in the ITR (*A,B,C) will
  be printed, in A, (A,*B,C) will be printd, in B, (A,B,*C), and in C, 
  (A,B,xC) will be printed.

o Here is your surprise Paul. Where ever you see geo coordinates on the
  web interface, just click on it. ;-)

o Make web pages more pleasing to the eye but not forgetting this is a router
  and not a myspace page. ;-) Use a gray backgound with a foregroun elipse 
  type design.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.39
                -------------------------------------

o Release date: Wed Jul 10 11:30:19 PDT 2013

o When calling lisp_send_ipc_to_core() make sure dest.print_address() is 
  called. This fixes a printing of "<lisp.lisp_address ..." messages when
  sending Map-Reply and Map-Referral messages. Was fixed for Map-Notify 
  messages.

o Registration of ELPs and Geo-Coordinate RLOC LCAF types from ETR to MS is
  working. Next to test in Map-Replies and get them cached in the ITR and RTR.

o ELPs and Geo-Coordinates work in Map-Replies and are being cached in
  the map-cache by ITRs and RTRs. Works for lig too.

o Fix bug Paul found where when a packet sourced from UDP port 4342 destined
  for an IPv6 address is formatted correctly.

o Fix parameter problem for call to lisp_process_map_request(). Found by Paul.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.38
                -------------------------------------

o Release date: Mon Jul  8 20:58:50 PDT 2013

o Make sure we do not hash an EID packet to an RLOC that is not best priority.

o Fix traceback in lisp-itr. Found by Dino.

o Fix lisp_address.is_ipv4_link_local() and lisp_address.is_ipv6_loopback().

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.37
                -------------------------------------

o Release date: Mon Jul  8 19:16:12 PDT 2013

o Remove from the "/lisp/show/database" the RLOC-state. It really isn't 
  important and we will always report an RLOC as reachable so we can not be
  dependent on the underlying interface and kernel. Plus, if we want an ETR
  to register other RLOCs, not belonging to it, we want to do this with 
  freedom and not worry about reachability. We will find that we can use
  the lisp-etr process to register all kinds of things to the mapping database
  system, including but not limited to ELPs and Geo-Coordinates.

o Put ELP commands in but don't use them yet. The "lisp explicit-locator-path"
  command is executed and supported by the lisp-etr process. The "/lisp/show/
  database" display will show ELPs configured when they are configured. 
  Otherwise, no empty table is displayed

o Put Geo-Coordinate commands in but don't use them yet. The "lisp geo-
  coordinates" command is executed and supported by the lisp-etr process. The
  "/lisp/show/database" display will show the geo-coordinates configured when
  they are configured. Otherwise, no empty table is displayed.

o Allow the "lisp database-mapping" clause take keyword/value pairs "elp-name
  = <elp-name>" and "geo-name = <geo-name>" in the "rloc" subclause so an ELP
  and/or Geo-Coordinate can be associated with an RLOC. The multi-tuple RLOCs
  are not yet registered to the Map-Server.

o Get UDP port numbers to work with IOS for Map-Requests, Map-Replies, ECMs,
  and Map-Referrals. IOS is fixated on using 4342->4342 but the spec says
  ephemeral ports could be used.

o Make sure retransmitted Map-Notifies are sent to a UDP port that was the
  source port of the Map-Register that wants Map-Notifies for ack purposes.

o In lisp_get_local_interfaces(), if "lo0" is not found try "lo". Found by
  Paul while reloading an ETR.

o Look through all interfaces on the box looking for "lo0", "lo", "en0", or
  "eth0". Then choose a non-link-local non-loopback address for a locator.
  Get one IPv4 RLOC and one IPV6 RLOC.

o If a non-DDT Map-Request is received in a system that is running lisp-etr and
  not lisp-mr, have the lisp-core process give the control message to the
  lisp-etr process.

o Fix "lprint()" tracebacks in all places that is not the lisp.py module. 
  That is change them to "lisp.lpring()". Found by Paul.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.36
                -------------------------------------

o Release date: Mon Jul  1 20:51:12 PDT 2013

o Encapsulation/decapsulation of IPv6 packets and MAC frames now work over
  IPv4 RLOCs. We cannot support IPv6 RLOCs since there is no raw socket 
  support in either MacOS or Fedora.

o Have ECM inner IP header be consistent with the address-family of the
  destination EID being looked up. 

o Put in code to timeout map-cache entries in the ITR and ETR.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.35
                -------------------------------------

o Release date: Sat Jun 29 10:12:09 PDT 2013

o Have ETR, when it decapsulates a packet to byte-swap the total-length and
  frag-offset fields so the kernel can swap them to network byte order.

o On landing page, put LISP component names in upper case (under Data-Plane
  and Control-Plane tables).

o Reworked data-plane code. The ITR will use raw sockets to encapsulate so it
  can build outer header, UDP, and LISP headers. An ETR will use the pcappy
  library to capture packets destionation-port addressed to 4341 so it has
  access to the outer header, UDP header, and LISP header of a received
  encapsulated packet. The ETR continues to use a raw socket to deliver the
  unencapsulated packet to the EID. The RTR does a combination of above.

o Fix traceback in lisp_core_dispatch_packet() Paul found.

o The ETR and RTR can now run at the same time. Since we are using pcap to
  get encapsulated packets we don't need to open a listen socket for port
  4341.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.34
                -------------------------------------

o Release date: Sat Jun 22 20:53:22 PDT 2013

o If the DDT-bit is set in an ECM and the ECM arrives at a map-server where
  just the lisp-core and lisp-ms processs are running, the lisp-core process
  should IPC the ECM to the lisp-ms process.

o Uncomment out the socket.sendto() call in the lisp-etr process. Let's see
  if this can work on Paul's systems. Paul should encapsulate to this ETR
  and see if it can route the EID-based packet.

o Have the "/show/delegations" display lookup EIDs in the DDT cache. When not
  found but authoritative, show the auth-prefix and compute and display the
  negative prefix.

o Have the "/show/sites" display lookup EIDs in the DDT and site cache. When 
  not found but authoritative, show the auth-prefix and compute and display 
  the negative prefix.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.33
                -------------------------------------

o Release date: Fri Jun 21 21:36:46 PDT 2013

o Set L-bit in LISP data header to 0.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.32
                -------------------------------------

o Release date: Fri Jun 21 21:20:12 PDT 2013

o Fix lisp_data_header.print_header().

o Do not have lisp_data_header.encode() prepend an UDP header. Keep code 
  commented out so when we can get raw sockets to work, we will need the
  code.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.31
                --------------------------------------

o Release date: Fri Jun 21 17:24:36 PDT 2013

o Do not have the RTR prepend a UDP header. The kernel will do that. Go
  back to adding a UDP header (so we can put source entropy and checksum of
  0 into the implementation) when we get raw sockets working.

o When adding default routes to the cache, they should have an internal mask-
  length of 48 and not 80. If they have 80, then an IPv4 0.0.0.0/0 is stored
  as 0.0.0.0/32. This is why we did longest match across address-families
  erroneously.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.30
                --------------------------------------

o Release date: Thu Jun 20 17:56:41 PDT 2013

o Have the "lisp ms-authoritative-prefix" command not store the instance-id
  mask of 32 when an eid-prefix is supplied. Found by Paul. This same bug
  does not occur for the "lisp ddt-authoritative-prefix" command.

o Typo is causing Map-Requests to not be decoded properly. That is a 
  Map-Request in any lispers.net box is broken. Way to go Paul!

o The RTR (and also the ETR) were stripping too many inner header bytes. It
  was stripping 16 bytes (8 for UDP and 8 for LISP), but the UDP header was
  stripped by the kernel. That is why the packet could have looked like a 
  MAC packet.  ;-)

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.29
                --------------------------------------

o Release date: Thu Jun 20 11:48:44 PDT 2013

o In the "show process" display, add a row for "Number of CPUs".

o Fixing locking issue by using a multiprocessing.Lock() that is shared
  and synchronized across all threads in a process. Tested with 10,000
  database-mappings and clicking the ETR button.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.28
                --------------------------------------

o Release date: Wed Jun 19 18:18:28 PDT 2013

o Create an ipc-lock so the lisp-core process has only one thread sending to 
  a LISP component process at one time. If you see a log message "Waiting
  to acquire ipc-lock", then we know there is concurrency. Paul found this
  while sending Map-Notify messages at the same time as "lisp database-
  mapping" commands to the lisp-etr process.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.27
                --------------------------------------

o Release date: Wed Jun 19 15:23:01 PDT 2013

o Fix traceback of lprint(). Found by Paul.

no Have RUN-LISP create log files in a local directory called "logs".

o Do not display html output when a LISP component process returns show
  output. It is cluttering up log files.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.26
                --------------------------------------

o Release date: Tue Jun 18 21:47:11 PDT 2013

o Remove "Fatal IPC error" message when an IPC message times out going from
  the lisp-core process to any other LISP component process.

o And whenever we tell a browser that system is busy or there is a fatal error
  do it to the logfile as well. So we can sync up events.

o Count number of negative Map-Replies recieved from a Map-Resolver. Show it
  in the ITR and RTR display.

o Count number of Map-Notfies sent to a Map-Server. Show it in the ETR display.
  Change the display to compress the Registration flags. Just like we do in
  the "show site" display. If you hover over the title "Registration flags", a
  legend will pop-up.

o Actually compute average RTT from an ITR's or RTR's perspective. This will
  be average RTT computed between an ITR/RTR sending a Map-Request and the
  time it takes for a negative Map-Reply to return. For any other Map-Reply
  (from MS or ETR) it will be misleading because most of the path would be
  from MR to MS, and MS to ETR. In future, we can consider positive Map-Replies
  in the case of a MR/MS cluster where proxy-replies are coming from the MS
  when the requests go to the MR.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.25
                --------------------------------------

o Release date: Tue Jun 18 10:13:55 PDT 2013

o When a message is being received that is broken up into fragments but not
  all of it is recieved but another new message comes in and is received
  in its entirety there could be fragments from the first message that are
  received. When this happens we get the traceback that Paul found. We need
  to check for this and discard the fragment versus mistaking it as a new
  message (with no header and length information). 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.24
                -------------------------------------

o Release date: Thu Jun 13 23:04:34 PDT 2013

o Fix Traceback Paul found in the lisp-ms process while doing proxy-replying.

o Do not allow lisp-rtr and lisp-etr processes to run at the same time on
  the same system. They will both want to listen on data-port 4341. In the
  future, we could have them listen on the same port but different RLOC 
  addresses.

o Write "packets.py" which will generate packets with EID addresses in them,
  send them IPC to the lisp-itr process so they can be encapsulated. This
  tool will exercise the logic in lisp-itr and lisp-rtr.

o Do not set lispers.net E and M bits in an ECM unless we know the ETR and
  map-server is running on the local system.

o Fix concurrency problem when a long configuration file is being processed
  and a show screen is requested. This will result in a symptom where you
  see html written to the lisp.config file or you show configuration commands
  display on a web screen. Found by Paul while he was doing 30K. We will
  implement a lock so a show command will tell user to retry later while the
  lisp-core process is processing the configuration file.

o The lisp-itr process can now encapsulate IPv4 packets. The way it gets
  packets today is via an IPC mechanism. This is only used for testing.

o The lisp-rtr process can get encapsulated packets from either packets.py
  or from the lisp-itr process. It then decapsulates and re-encapsulates to

o Fix interoperability problem with cisco. A Map-Request sent by a cisco ITR
  to a lispers.net map-resolver, will not be parsed correctly because the
  source-EID is not specified (the AFI=0). Fixed now. Found by Paul.

o Put hostname on banner so every page will tell you the device you are 
  getting output from.

o Create a button for the RTR's map-cache. In this release, you actually can
  run an ITR and RTR at the same time. In practice this will not be necessary
  but the differentiaion is that the ITR does a source-EID check against
  configured database-mappings. But that isn't ready until we can figure out
  how to inject the lisp-itr into the kernel data-plane path (possibly with
  a nit or bpf interface).

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.23
                -------------------------------------

o Release date: Tue Jun 11 10:37:37 PDT 2013

o Test image to see if the timing parameters I used for retransmission and
  triggered Map-Registers are sufficient.

o Change triggered Map-Register to a 5 second timer to allow all database-
  mapping commands to be processed so we can batch 100 at a time in a Map-
  Register message.

o Change retry count in lisp_ipc() from 3 to 4. This allows us to backoff
  retransmitting an IPC segment from 1 ms to 2 ms to 4 ms, to 8 ms, before
  giving up on process. And do not remove the named handle when it fails.

o In the "/lisp/show/site" display, sort EID-prefixes within a site. Requested
  by Paul.

o Display register-flags for each EID-prefix displayed in "/lisp/show/site".

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.22
                -------------------------------------

o Release date: Sun Jun  9 20:52:54 PDT 2013

o Fix an important bug where if the high-order nibble of an IPv4 address is
  0, the correct lookup key will not be generated for class lisp_cache().

o Put in some scaling code to allow 1000 database-mappings to be configured
  in the lisp-etr process and to Map-Register them to the map-server in n
  number of Map-Registers each of which has 100 EID-records.

o Fix IPC retry timer to actually delay 1 ms before retrying a "[Errno 55] 
  No buffer space available" socket error.

o When processing lots of database-mapping commands, do not trigger a Map-
  Register for each one. Start a 2 second timer to send them all in the batch.
  This may be enough time to process 1000s of commands.

o So segmentation of packets that the lisp-core process gets addressed to
  destination port 4342. 

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.21
                -------------------------------------

o Release date: Thu Jun  6 21:50:06 PDT 2013

o Fix some bugs while testing LISP-DDT corner cases.

o Have a DDT-node compute a least specific negative prefix. 

o Fully tested both a DDT-node and an MS compute delegation-hole negative 
  prefixes with TTL of 15. Also, non-authoritative/incomplere referrals with
  TTL of 0 are being generated.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.20
                -------------------------------------

o Release date: Wed Jun  5 15:07:53 PDT 2013

o Bug fixes after more testing of Merged Map-Notify messages.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.19
                -------------------------------------

o Release date: Wed Jun  5 10:45:44 PDT 2013

o Fix bug in lisp_convert)6to4(). Caused crash in all LISP subsystem 
  components.

-------------------------------------------------------------------------------

                    lispers.net Beta Release Version 0.18
                -------------------------------------

o Release date: Wed Jun  5 10:45:44 PDT 2013

o Fix "lisp_scokets" typo in lisp_process_map_register(). Found by the 
  stud.;-)

o IP and UDP packet lengths computed wrong for ECM messages.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.17
                -------------------------------------

o Release date: Tue Jun  4 16:17:52 PDT 2013

o Add DNS names to lig and rig input.

o Add lisp_send_merged_map_notify() when a merge change occurs in a registered
  RLOC-set. That is, send a Map-Notify to each RLOC in the merged RLOC-set.
  More testing required.

o Header checksum the inner IP header in an ECM message.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.16
                -------------------------------------

o Release date: Tue Jun  4 09:18:27 PDT 2013

o Auth-data prints garbage for "Map-Notify -> ..." messages. Fixed now.

o Add to hover display in "/lisp/show/site" to display number of EID-prefixes
  configured and current count of EID-prefixes regsitered. This will aid in
  scaling tests.

o Fix crash in lisp-ms when clicking on EID-prefix in the "/lisp/show/site"
  web page.

o Change detail display for "/lisp/show/site/<eid-prefix>" to accommodate
  merge versus replacement semantics.

o Merge semantics is working. Map-Notifies are not yet coded for this case
  to go to the other already registered locators when merge is requested by a 
  regsitering site.

o Where ever I print a nonce, truncated the trailing "L".

o "shutdown" command now works and doesn't accept registrations when 
  configured.

o Tested "allowed-rlocs" policy. Working know.

o No longer bypass authentication failures with nonce equal to 0. We have at
  least one authentication algorithm that works with cisco, and that is sha1.

o Print the "last registered" timestamp in red when it is half way to 
  expiration. That is an indication a Map-Register could have been lost.

o Change back "Uptime" to "First Registered" because when the site is not
  registered displaying "Uptime" is counter-intuitive.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.15
                -------------------------------------

o Release date: Sat Jun  1 15:48:38 PDT 2013

o Fix authentication where in the last 4-bytes if the first nibble is 0 that
  it gets included in the 20-byte string. We lost it and a "00" was appended
  because we did a 64-bit swap on the value. Where the last 4 bytes of a 20
  byte authentication string is a 32-bit long.

o Do not build a new map-notify-queue entry and queue to retransmit-queue if
  one is already on it. That is why we are getting a KeyError when doing the
  second erroneous dequeue.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.14
                -------------------------------------

o Release date: Fri May 31 17:32:07 PDT 2013

o Fix "ms: socket.sendto() failed: [Errno 9] Bad file descriptor" error
  in map-server.

o Fix Map-Notify KeyError found in ms1 and ms2.

o Get more info for the authentication padding of a 0 byte in the last 4 bytes
  of the sha1 authentication field. This was causing Map-Notify messages to 
  not authenticate.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.13
                -------------------------------------

o Release date: Fri May 31 16:02:50 PDT 2013

o Map-Requests are not encoding non-zero instance-IDs in source-EID and
  target-EID fields. Fixed now.

o All addresses and prefixes will not be printed out with [<iid>]<address>
  and [<iid>]<address>/<ml>, respectively.

o Remove log for processing timeout on site cache and referrcal cache. It is
  using up too much disk space and taking too long to download important
  log data we need for debugging crashes.

o Fix problem when a packet comes from the network on a udp46 socket that
  we don't print out "::ffff:<ipv4-address>". We can detect this and simply
  print out the <ipv4-address>.

o Hopefully fix crash found in ms1 and ms2 in lisp_retransmit_map_notify() 
  when an IOS box registers a lispers.net map-server. In any event, I am
  printing out more information to help find if it occurs again.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.12
                -------------------------------------

o Release date: Fri May 31 10:42:24 PDT 2013

o Display number of entries in each table displayed via the web interface
  when pointer hovers over title of table.

o Have "show logging" button show any log file if it exists versus if the
  compoenent is currently running. This way if the process crashes, you can
  see what happen by looking at the log remotely via the web interface.

o Combine the 2 ITR buttons so the map-resolvers (since a small table) is
  in the same display as the map-cache. Do the same for the ETR side where
  the "show map-servers" and "show database-mappings" are in the same
  display.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.11
                -------------------------------------

o Release date: Thu May 30 21:26:05 PDT 2013

o The tarball will have a lisp.config.example file instead of lisp.config.

o Allow longest match lookup on the "/lisp/show/map-cache" page to accept
  an instance-id in square bracket syntax. You can place 0 or more spaces
  between right bracket and the address.

o Make longest match lookups across instance-ids and mask-lengths work.

o Instance-ID EID encoding is now working. An ETR is registering to an MS
  with a non-zero instance-ID.

o Tested NX-OS sha1 Map-Registers work to a lispers.net map-server.

o Found Traceback problem Paul found in the test network for retransmitting
  Map-Notify messages.

o Support exact and longest match lookups from the "/lisp/show/map-cache"
  web page.

o Allow longest match lookups to work across instance-ID ranges. 

o Allow a "*" for an instance-ID value. It will represent the ultimate default.
  Which means all instance-IDs for all AFIs for all addresses. This will
  be used for delegations, auth-prefix configuration and the entry that
  the "lisp ddt-root" adds to the referral cache.

o Released a new lisp.config.example file that documents "instance-id = *".

o Fix bug where multiple EID records were not being processed inside of a
  Map-Register message.

o Allow "hover-over" documentation in the "/lisp/show/site" web page. Thanks
  to Paul for offering code. The flags now will be expanded when pointer
  hovers over a registration flags bit. This is just the beginning of how
  we can document every aspect of the user interface. 

o The "lisp authoritative-prefix" command has changed. There are two commands
  now, one for a DDT-node and one for a Map-Server, they are "lisp ddt-
  authoritative-prefix" and "lisp ms-authoritative-prefix" respectively. Please
  change your lisp.config configuration file to reflect this.

o Allow command-line lig and rig to take bracket format so from anywhere you 
  can lig or rig a non-zero instance-ID. Note the following syntax from 
  command line is required "\[15\]153.16.32.1" to get passed shell.
  Alternatively, "[15]153.16.32.1" can be used.

-------------------------------------------------------------------------------

                lispers.net Beta Release Version 0.10
                -------------------------------------

o Release date: Mon May 27 22:19:18 PDT 2013

o Put lig and rig input on landing page. Makes it easier to get user access
  to the command, offloads additional server page loads.

o The rig command is now supported.

o The longest match lookup facility is available on the "show map-cache" page.

o Fix a couple of arbitrary bugs found.

o Find out why "show process" output is broken.

-------------------------------------------------------------------------------

                 lispers.net Beta Release Version 0.9
                 ------------------------------------

o Release date: Sat May 25 11:29:26 PDT 2013

o Put version number in web page footer.

o Allow lig button to send lig packets with the count field not specified. It
  defaults to a count of 3.

o Get authentication to work with cisco. We have done so for sha1 but sha2
  doesn't work because cisco doesn't use a standard auth-data size of 32
  (it uses 20 bytes and pads 16 bytes of non-zero data with 4 bytes of 0).

o Code up algorithm to compute the least specific prefix when computing
  negative Map-Referrals and negative Map-Reply messages.

o Massage web output from the lig button.

o Make top work on Fedora Linux. Have not tested. Waiting to see how it 
  looks on ddt-root1.dino.vxnet.com.

o Changed the caches from just an associative array to a multi-level array/
  tree structure. The keys are ascii strings of binary data where instance-id,
  afi, and address are part of key. The caches that were changed were the
  map-cache, the site-cache, the ddt-cache, and the referral-cache.

o Add a form at the top of the "/lisp/show/map-cache" to all a longest match
  lookup. It is not working yet but will be fixed in next release.

o Fix the way we store MAC EIDs internally.

-------------------------------------------------------------------------------

                 lispers.net Beta Release Version 0.8
                 ------------------------------------

o Release date: Tue May 21 22:16:08 PDT 2013

o Have remove-lisp-locks.py display the FDs that it is deleting.

o Fix garbage being processed by the Map-Server. Really fixed it this time.

o Suppress whitespace lines and linefeeds from the written configuration
  file.

o Remove the debug option from the lig button. The format is messed up do
  to html whitespace suppression and the boldface for message types comes
  out bad to a web browser. It is compelling to have it for tailing output
  so we will remove the debug option for now. It will work from command line.

o Allow IPv6 EID or MR to be entered for lig.

o Fix crash in lisp-mr when processing a delegation hole.

-------------------------------------------------------------------------------

                 lispers.net Beta Release Version 0.7
                 ------------------------------------

o Release date: Tue May 21 17:40:59 PDT 2013

o Do not pad off the password for sha1 or sha2 hashes. Trying to interoperate
  with existing LISP implementations.

-------------------------------------------------------------------------------

                 lispers.net Beta Release Version 0.6
                 ------------------------------------

o Release date: Tue May 21 16:17:34 PDT 2013

o Fix seeing garbage in lisp.config as well as not processing any commands
  that came after a "lisp authoritative-prefix" command.

o Skip over whitespace only lines (including \n) and do not write them
  back to the configuration file.

o Ephemeral port for lisp-itr should be a udp46 socket.

o Change "First Registered" to "Uptime" in the "show site" command output.

o Change 0xfffffff in the lisp command documentation.

o Put slash notation for prefixes in the lisp comamnd documentation.

-------------------------------------------------------------------------------

                 lispers.net Beta Release Version 0.5
                 ------------------------------------

o Release date: Tue May 21 11:08:15 PDT 2013

o Change each packet type and "Send" and "Receive" in log output to be bold
  face. Will make it easier to read and spot things.

o Make authentication of Map-Notify similar to lisp_compute_auth(). That is,
  include both packet contents and password in repr().

o Make Map-Notify retransmission queue indexed by a key that is a 
  concatentation of nonce and ETR address.

o Remove file descriptor locks in the RUN-LISP script.

o Do not index into associative array for a bogus command. Use has_key() to
  test first.

o Only need one ephemeral socket in the lisp-itr process.

-------------------------------------------------------------------------------

                 lispers.net Beta Release Version 0.4
                 ------------------------------------

o Release date: Mon May 20 17:33:04 PDT 2013

o This release fixes bugs found during initial alpha deployment with Paul.

o Listen on *any* address for IPv4 and IPv6 port 4342 in the lisp-core 
  process and port 4341 in the lisp-etr process.

o Put lig (and rig, not written yet) on landing page. It seems to work but
  really want interactive output. This will be addressed later. This is
  the first try and putting forms based input in the web interface.

o Put a "Release Notes" section in the "show version" output. You can scroll
  inside the table cell to see all the output.

o Create a "lisp map-server-peer" command for the lisp-ms process so it can
  have its own version of the delegation cache. We also need to tell it
  what its authoritative-prefix is, so have lisp-core send this command to
  both processes where usually only one is running in the system.

o Send the "lisp authoritative-prefix" command to both the lisp-ddt and 
  lisp-ms processes. This is so we can do negative Map-Referrals within
  the auth-prefix in a Map-Server.

o Do repr() on the concatentation of packet and password before calling the
  hashlib library. This is a guess at what make lispers.net interoperate
  with a cisco HMAC.

-------------------------------------------------------------------------------

                 lispers.net Beta Release Version 0.3
                 ------------------------------------

o Release date: Fri May 17 15:17:59 PDT 2013

o Have bottle listen on socket.gethostname() so remote access to the
  web interface is available. Released to Paul.

-------------------------------------------------------------------------------

                 lispers.net Beta Release Version 0.2
                 ------------------------------------

o Release date: Fri May 17 14:37:01 PDT 2013

o Do quick build to listen on `hostname` for ports 4341 and 4342. Released
  to Paul.

-------------------------------------------------------------------------------

                 lispers.net Beta Release Version 0.1
                 ------------------------------------

o Release date: Fri May 17 12:47:23 PDT 2013

o Initial external release. Goes to Paul at Vinci Consulting. Testing just
  the control plane. That is, MR, MS, and DDT.

-------------------------------------------------------------------------------
            
Copyright 2013-2019 lispers.net - Dino Farinacci <farinacci@gmail.com>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.    

-----------------------------------------------------------------------------
